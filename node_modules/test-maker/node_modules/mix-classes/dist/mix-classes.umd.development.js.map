{"version":3,"file":"mix-classes.umd.development.js","sources":["../src/getMixin.ts","../src/createMixinClass.ts","../src/Mix.ts","../src/Generic.ts"],"sourcesContent":["import { Constructable } from './types'\r\nimport { INSTANCE_THIS } from './createMixinClass'\r\n\r\n/**\r\n * Gets a specific mixin's `this`\r\n * @param instance The this object to search on\r\n * @param MixinClass The mixin you want to find\r\n */\r\nexport const getMixin = <TConstructable extends Constructable>(\r\n  instance: any,\r\n  MixinClass: TConstructable\r\n): TConstructable['prototype'] | undefined => {\r\n  if (instance && instance[INSTANCE_THIS]) {\r\n    return instance[INSTANCE_THIS].get(MixinClass)\r\n  }\r\n  return undefined\r\n}\r\n","import { getMixin } from './getMixin'\r\nimport { Constructable, Mixable, Mixin } from './types'\r\n\r\nexport const INSTANCE_THIS = Symbol('instanceThis')\r\nexport const MIXIN_CLASSES = Symbol('mixinClasses')\r\n\r\nconst extend = (base: any, extension: any) =>\r\n  new Proxy(base, {\r\n    get: (_, prop) => {\r\n      const target = prop in extension ? extension : base\r\n\r\n      return target[prop]\r\n    },\r\n    set: (_, prop, value) => {\r\n      const target = prop in extension ? extension : base\r\n      target[prop] = value\r\n\r\n      return true\r\n    },\r\n  })\r\n\r\nconst extractConstructable = (Mixable: Mixable): Constructable =>\r\n  'prototype' in Mixable ? Mixable : Mixable.Class\r\n\r\nexport const createMixinClass = <TMixables extends Mixable[]>(\r\n  Mixables: TMixables\r\n) => {\r\n  const Classes = Mixables.map(extractConstructable)\r\n\r\n  const MixinClass = class MixinClass {\r\n    static [MIXIN_CLASSES] = Classes;\r\n\r\n    // Stores the `this` proxies for each class\r\n    [INSTANCE_THIS] = new WeakMap()\r\n\r\n    constructor(...classesArgs: any[]) {\r\n      Classes.forEach((Class, i) => {\r\n        const instance = new Class(...(classesArgs[i] || []))\r\n        const instanceThis = extend(this, instance)\r\n\r\n        this[INSTANCE_THIS].set(Class, instanceThis)\r\n\r\n        // Copy over getters to instance values\r\n        Object.keys(instance).forEach(key => {\r\n          Object.defineProperty(this, key, {\r\n            configurable: true,\r\n            enumerable: true,\r\n            get() {\r\n              return instance[key]\r\n            },\r\n            set(value) {\r\n              return (instance[key] = value)\r\n            },\r\n          })\r\n        })\r\n      })\r\n    }\r\n  }\r\n\r\n  Classes.forEach(Class => {\r\n    const restoreThisInsideFunction = (fn: Function) =>\r\n      function(this: typeof MixinClass['prototype'], ...args: any[]) {\r\n        return fn.apply(getMixin(this, Class), args)\r\n      }\r\n\r\n    // Copy over prototype methods\r\n    const recursePrototype = (prototype: Constructable['prototype']) => {\r\n      // Add instanceof support\r\n      const hasInstance = prototype.constructor[Symbol.hasInstance]\r\n\r\n      Object.defineProperty(prototype.constructor, Symbol.hasInstance, {\r\n        configurable: true,\r\n        value(possibleMixin: typeof MixinClass['prototype']) {\r\n          // Retain original instanceof for prototype\r\n          if (prototype.isPrototypeOf(possibleMixin)) return true\r\n\r\n          if (possibleMixin && possibleMixin.constructor) {\r\n            const isInMixins = (mixin: any): boolean => {\r\n              const classes = mixin[MIXIN_CLASSES]\r\n              if (!classes) return false\r\n              for (const cls of classes) {\r\n                if (cls === Class) return true\r\n                const isChildMixin = isInMixins(cls)\r\n                if (isChildMixin) return true\r\n              }\r\n              return false\r\n            }\r\n\r\n            if (this && this !== prototype.constructor) {\r\n              // not used as mixin, `class [this] extends [prototype.constructor] {}`\r\n\r\n              return prototype.constructor.isPrototypeOf(\r\n                possibleMixin.constructor\r\n              )\r\n            }\r\n\r\n            if (isInMixins(possibleMixin.constructor)) return true\r\n\r\n            if (!this) return false\r\n          }\r\n\r\n          return hasInstance(possibleMixin)\r\n        },\r\n      })\r\n\r\n      Object.getOwnPropertyNames(prototype).forEach(name => {\r\n        if (name === 'constructor') return\r\n\r\n        const descriptor = Object.getOwnPropertyDescriptor(prototype, name)!\r\n\r\n        if (descriptor.get) {\r\n          descriptor.get = restoreThisInsideFunction(descriptor.get)\r\n        }\r\n\r\n        if (descriptor.set) {\r\n          descriptor.set = restoreThisInsideFunction(descriptor.set)\r\n        }\r\n\r\n        if (typeof descriptor.value === 'function') {\r\n          descriptor.value = restoreThisInsideFunction(descriptor.value)\r\n        }\r\n\r\n        if (!MixinClass.prototype.hasOwnProperty(name)) {\r\n          Object.defineProperty(MixinClass.prototype, name, descriptor)\r\n        }\r\n      })\r\n\r\n      const parent = Object.getPrototypeOf(prototype)\r\n      if (parent && parent !== Object.prototype) recursePrototype(parent)\r\n    }\r\n\r\n    recursePrototype(Class.prototype)\r\n  })\r\n\r\n  return (MixinClass as any) as Mixin<TMixables>\r\n}\r\n","import { Mixable } from './types'\r\nimport { createMixinClass } from './createMixinClass'\r\n\r\nexport const Mix = <TMixables extends Mixable[]>(...Mixables: TMixables) =>\r\n  createMixinClass(Mixables)\r\n","import { Constructable } from './types'\r\n\r\nexport type IGeneric<TConstructable extends Constructable = any> = {\r\n  Class: TConstructable\r\n}\r\n\r\nexport const Generic = <TConstructable extends Constructable>(\r\n  Class: TConstructable\r\n): IGeneric<TConstructable> => ({\r\n  Class,\r\n})\r\n"],"names":["getMixin","instance","MixinClass","INSTANCE_THIS","get","undefined","Symbol","MIXIN_CLASSES","extend","base","extension","Proxy","_","prop","target","set","value","extractConstructable","Mixable","Class","createMixinClass","Mixables","Classes","map","classesArgs","WeakMap","forEach","i","instanceThis","Object","keys","key","defineProperty","configurable","enumerable","_c","restoreThisInsideFunction","fn","args","apply","recursePrototype","prototype","hasInstance","constructor","possibleMixin","isPrototypeOf","isInMixins","mixin","classes","cls","isChildMixin","getOwnPropertyNames","name","descriptor","getOwnPropertyDescriptor","hasOwnProperty","parent","getPrototypeOf","Mix","Generic"],"mappings":"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"}