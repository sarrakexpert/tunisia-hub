exports['id'] = 0xfc, exports['ids'] = [0xfc], exports['modules'] = {
    0x12bf4: (_0x3ef17f, _0x3dbb09, _0x5c2a4a) => {
        'use strict';
        var _0x2ddaa6 = _0x5c2a4a(0x9431), _0x5092b6 = _0x5c2a4a(0xe87a);
        _0x3ef17f['exports'] = _0x4bcaa7;
        function _0x4bcaa7(_0x210dab) {
            if (!(this instanceof _0x4bcaa7))
                return new _0x4bcaa7(_0x210dab);
            this['headers'] = _0x210dab['headers'], this['negotiator'] = new _0x2ddaa6(_0x210dab);
        }
        _0x4bcaa7['prototype']['type'] = _0x4bcaa7['prototype']['types'] = function (_0x532e9f) {
            var _0x18df1d = _0x532e9f;
            if (_0x18df1d && !Array['isArray'](_0x18df1d)) {
                _0x18df1d = new Array(arguments['length']);
                for (var _0xf0ce94 = 0x0; _0xf0ce94 < _0x18df1d['length']; _0xf0ce94++) {
                    _0x18df1d[_0xf0ce94] = arguments[_0xf0ce94];
                }
            }
            if (!_0x18df1d || _0x18df1d['length'] === 0x0)
                return this['negotiator']['mediaTypes']();
            if (!this['headers']['accept'])
                return _0x18df1d[0x0];
            var _0x17f8a3 = _0x18df1d['map'](_0x43e885), _0x22e42d = this['negotiator']['mediaTypes'](_0x17f8a3['filter'](_0x1db49b)), _0x399030 = _0x22e42d[0x0];
            return _0x399030 ? _0x18df1d[_0x17f8a3['indexOf'](_0x399030)] : ![];
        }, _0x4bcaa7['prototype']['encoding'] = _0x4bcaa7['prototype']['encodings'] = function (_0x53af0d) {
            var _0x581fd2 = _0x53af0d;
            if (_0x581fd2 && !Array['isArray'](_0x581fd2)) {
                _0x581fd2 = new Array(arguments['length']);
                for (var _0x19cbac = 0x0; _0x19cbac < _0x581fd2['length']; _0x19cbac++) {
                    _0x581fd2[_0x19cbac] = arguments[_0x19cbac];
                }
            }
            if (!_0x581fd2 || _0x581fd2['length'] === 0x0)
                return this['negotiator']['encodings']();
            return this['negotiator']['encodings'](_0x581fd2)[0x0] || ![];
        }, _0x4bcaa7['prototype']['charset'] = _0x4bcaa7['prototype']['charsets'] = function (_0x1d2b18) {
            var _0x429d98 = _0x1d2b18;
            if (_0x429d98 && !Array['isArray'](_0x429d98)) {
                _0x429d98 = new Array(arguments['length']);
                for (var _0xd1350e = 0x0; _0xd1350e < _0x429d98['length']; _0xd1350e++) {
                    _0x429d98[_0xd1350e] = arguments[_0xd1350e];
                }
            }
            if (!_0x429d98 || _0x429d98['length'] === 0x0)
                return this['negotiator']['charsets']();
            return this['negotiator']['charsets'](_0x429d98)[0x0] || ![];
        }, _0x4bcaa7['prototype']['lang'] = _0x4bcaa7['prototype']['langs'] = _0x4bcaa7['prototype']['language'] = _0x4bcaa7['prototype']['languages'] = function (_0x5e0d85) {
            var _0xe942b1 = _0x5e0d85;
            if (_0xe942b1 && !Array['isArray'](_0xe942b1)) {
                _0xe942b1 = new Array(arguments['length']);
                for (var _0x13270d = 0x0; _0x13270d < _0xe942b1['length']; _0x13270d++) {
                    _0xe942b1[_0x13270d] = arguments[_0x13270d];
                }
            }
            if (!_0xe942b1 || _0xe942b1['length'] === 0x0)
                return this['negotiator']['languages']();
            return this['negotiator']['languages'](_0xe942b1)[0x0] || ![];
        };
        function _0x43e885(_0x463b55) {
            return _0x463b55['indexOf']('/') === -0x1 ? _0x5092b6['lookup'](_0x463b55) : _0x463b55;
        }
        function _0x1db49b(_0xda685e) {
            return typeof _0xda685e === 'string';
        }
    },
    0x7384: (_0x5a2516, _0x502f08, _0x93e1cf) => {
        var _0x1d87f3 = _0x93e1cf(0x17e1), _0x4e8f13 = function () {
            };
        _0x4e8f13['prototype']['getRandomBytes'] = function (_0x292ef5) {
            var _0x2a2737 = 0x1000, _0x5d1d8a = this;
            _0x292ef5 = _0x292ef5 || 0xc;
            if (_0x292ef5 > _0x2a2737)
                return _0x1d87f3['randomBytes'](_0x292ef5);
            var _0x45eab4 = parseInt(_0x2a2737 / _0x292ef5), _0x1a4142 = parseInt(_0x45eab4 * 0.85);
            if (!_0x1a4142)
                return _0x1d87f3['randomBytes'](_0x292ef5);
            this['bytesBufferIndex'] == null && (this['bytesBufferIndex'] = -0x1);
            this['bytesBufferIndex'] == _0x45eab4 && (this['bytesBuffer'] = null, this['bytesBufferIndex'] = -0x1);
            if (this['bytesBufferIndex'] == -0x1 || this['bytesBufferIndex'] > _0x1a4142) {
                !this['isGeneratingBytes'] && (this['isGeneratingBytes'] = !![], _0x1d87f3['randomBytes'](_0x2a2737, function (_0xf7eacd, _0x54a028) {
                    _0x5d1d8a['bytesBuffer'] = _0x54a028, _0x5d1d8a['bytesBufferIndex'] = 0x0, _0x5d1d8a['isGeneratingBytes'] = ![];
                }));
                if (this['bytesBufferIndex'] == -0x1)
                    return _0x1d87f3['randomBytes'](_0x292ef5);
            }
            var _0x45df94 = this['bytesBuffer']['slice'](_0x292ef5 * this['bytesBufferIndex'], _0x292ef5 * (this['bytesBufferIndex'] + 0x1));
            return this['bytesBufferIndex']++, _0x45df94;
        }, _0x4e8f13['prototype']['generateId'] = function () {
            var _0x1e16ed = Buffer['alloc'](0xf);
            if (!_0x1e16ed['writeInt32BE'])
                return Math['abs'](Math['random']() * Math['random']() * Date['now']() | 0x0)['toString']() + Math['abs'](Math['random']() * Math['random']() * Date['now']() | 0x0)['toString']();
            return this['sequenceNumber'] = this['sequenceNumber'] + 0x1 | 0x0, _0x1e16ed['writeInt32BE'](this['sequenceNumber'], 0xb), _0x1d87f3['randomBytes'] ? this['getRandomBytes'](0xc)['copy'](_0x1e16ed) : [
                0x0,
                0x4,
                0x8
            ]['forEach'](function (_0x30b62b) {
                _0x1e16ed['writeInt32BE'](Math['random']() * Math['pow'](0x2, 0x20) | 0x0, _0x30b62b);
            }), _0x1e16ed['toString']('base64')['replace'](/\//g, '_')['replace'](/\+/g, '-');
        }, _0x502f08 = _0x5a2516['exports'] = new _0x4e8f13();
    },
    0x10207: _0x58a517 => {
        'use strict';
        const _0x560e2d = (_0x1041be, _0x13aede, _0x4a3421, _0x331bf3, _0x26a977) => {
                for (var _0x1b6eca = 0x0; _0x1b6eca < _0x26a977; _0x1b6eca++) {
                    _0x4a3421[_0x331bf3 + _0x1b6eca] = _0x1041be[_0x1b6eca] ^ _0x13aede[_0x1b6eca & 0x3];
                }
            }, _0x399676 = (_0x4a7e8a, _0x2cbb4d) => {
                const _0x328eae = _0x4a7e8a['length'];
                for (var _0x5e7e07 = 0x0; _0x5e7e07 < _0x328eae; _0x5e7e07++) {
                    _0x4a7e8a[_0x5e7e07] ^= _0x2cbb4d[_0x5e7e07 & 0x3];
                }
            };
        _0x58a517['exports'] = {
            'mask': _0x560e2d,
            'unmask': _0x399676
        };
    },
    0x12373: (_0x28e7b2, _0xb49991, _0x210bcf) => {
        'use strict';
        try {
            _0x28e7b2['exports'] = _0x210bcf(0x4458)(__dirname);
        } catch (_0x41857d) {
            _0x28e7b2['exports'] = _0x210bcf(0x10207);
        }
    },
    0x3a3b: _0x494c7a => {
        !![] && (_0x494c7a['exports'] = _0x44df11);
        function _0x44df11(_0x5cf7df) {
            if (_0x5cf7df)
                return _0x57c5f9(_0x5cf7df);
        }
        ;
        function _0x57c5f9(_0x170065) {
            for (var _0x434779 in _0x44df11['prototype']) {
                _0x170065[_0x434779] = _0x44df11['prototype'][_0x434779];
            }
            return _0x170065;
        }
        _0x44df11['prototype']['on'] = _0x44df11['prototype']['addEventListener'] = function (_0xe18cfa, _0x49095f) {
            return this['_callbacks'] = this['_callbacks'] || {}, (this['_callbacks']['$' + _0xe18cfa] = this['_callbacks']['$' + _0xe18cfa] || [])['push'](_0x49095f), this;
        }, _0x44df11['prototype']['once'] = function (_0x1d66bb, _0x23e911) {
            function _0x210df5() {
                this['off'](_0x1d66bb, _0x210df5), _0x23e911['apply'](this, arguments);
            }
            return _0x210df5['fn'] = _0x23e911, this['on'](_0x1d66bb, _0x210df5), this;
        }, _0x44df11['prototype']['off'] = _0x44df11['prototype']['removeListener'] = _0x44df11['prototype']['removeAllListeners'] = _0x44df11['prototype']['removeEventListener'] = function (_0x4b370f, _0x4209d2) {
            this['_callbacks'] = this['_callbacks'] || {};
            if (0x0 == arguments['length'])
                return this['_callbacks'] = {}, this;
            var _0x5bc0ac = this['_callbacks']['$' + _0x4b370f];
            if (!_0x5bc0ac)
                return this;
            if (0x1 == arguments['length'])
                return delete this['_callbacks']['$' + _0x4b370f], this;
            var _0x3034ef;
            for (var _0x2c9b69 = 0x0; _0x2c9b69 < _0x5bc0ac['length']; _0x2c9b69++) {
                _0x3034ef = _0x5bc0ac[_0x2c9b69];
                if (_0x3034ef === _0x4209d2 || _0x3034ef['fn'] === _0x4209d2) {
                    _0x5bc0ac['splice'](_0x2c9b69, 0x1);
                    break;
                }
            }
            return _0x5bc0ac['length'] === 0x0 && delete this['_callbacks']['$' + _0x4b370f], this;
        }, _0x44df11['prototype']['emit'] = function (_0x97fee0) {
            this['_callbacks'] = this['_callbacks'] || {};
            var _0x52df29 = new Array(arguments['length'] - 0x1), _0x25dd68 = this['_callbacks']['$' + _0x97fee0];
            for (var _0x364d41 = 0x1; _0x364d41 < arguments['length']; _0x364d41++) {
                _0x52df29[_0x364d41 - 0x1] = arguments[_0x364d41];
            }
            if (_0x25dd68) {
                _0x25dd68 = _0x25dd68['slice'](0x0);
                for (var _0x364d41 = 0x0, _0x17efac = _0x25dd68['length']; _0x364d41 < _0x17efac; ++_0x364d41) {
                    _0x25dd68[_0x364d41]['apply'](this, _0x52df29);
                }
            }
            return this;
        }, _0x44df11['prototype']['listeners'] = function (_0x42af23) {
            return this['_callbacks'] = this['_callbacks'] || {}, this['_callbacks']['$' + _0x42af23] || [];
        }, _0x44df11['prototype']['hasListeners'] = function (_0x54705d) {
            return !!this['listeners'](_0x54705d)['length'];
        };
    },
    0x16c04: (_0x3858a7, _0x1e32a3) => {
        'use strict';
        _0x1e32a3['parse'] = _0x3ee245, _0x1e32a3['serialize'] = _0x149570;
        var _0x4fbc1c = decodeURIComponent, _0x195ee5 = encodeURIComponent, _0x14520c = /^[\u0009\u0020-\u007e\u0080-\u00ff]+$/;
        function _0x3ee245(_0x1f81b6, _0xb342d0) {
            if (typeof _0x1f81b6 !== 'string')
                throw new TypeError('argument\x20str\x20must\x20be\x20a\x20string');
            var _0x452257 = {}, _0x14a920 = _0xb342d0 || {}, _0x5982ca = _0x1f81b6['split'](';'), _0x36d06d = _0x14a920['decode'] || _0x4fbc1c;
            for (var _0x1b2a2a = 0x0; _0x1b2a2a < _0x5982ca['length']; _0x1b2a2a++) {
                var _0x35e709 = _0x5982ca[_0x1b2a2a], _0x3c6d34 = _0x35e709['indexOf']('=');
                if (_0x3c6d34 < 0x0)
                    continue;
                var _0x26ad09 = _0x35e709['substring'](0x0, _0x3c6d34)['trim']();
                if (undefined == _0x452257[_0x26ad09]) {
                    var _0x4eef60 = _0x35e709['substring'](_0x3c6d34 + 0x1, _0x35e709['length'])['trim']();
                    _0x4eef60[0x0] === '\x22' && (_0x4eef60 = _0x4eef60['slice'](0x1, -0x1)), _0x452257[_0x26ad09] = _0x29b9cf(_0x4eef60, _0x36d06d);
                }
            }
            return _0x452257;
        }
        function _0x149570(_0x7ba445, _0xfff785, _0x395628) {
            var _0x29dfad = _0x395628 || {}, _0xebea9e = _0x29dfad['encode'] || _0x195ee5;
            if (typeof _0xebea9e !== 'function')
                throw new TypeError('option\x20encode\x20is\x20invalid');
            if (!_0x14520c['test'](_0x7ba445))
                throw new TypeError('argument\x20name\x20is\x20invalid');
            var _0x277c88 = _0xebea9e(_0xfff785);
            if (_0x277c88 && !_0x14520c['test'](_0x277c88))
                throw new TypeError('argument\x20val\x20is\x20invalid');
            var _0x408ce7 = _0x7ba445 + '=' + _0x277c88;
            if (null != _0x29dfad['maxAge']) {
                var _0x5085bf = _0x29dfad['maxAge'] - 0x0;
                if (isNaN(_0x5085bf) || !isFinite(_0x5085bf))
                    throw new TypeError('option\x20maxAge\x20is\x20invalid');
                _0x408ce7 += ';\x20Max-Age=' + Math['floor'](_0x5085bf);
            }
            if (_0x29dfad['domain']) {
                if (!_0x14520c['test'](_0x29dfad['domain']))
                    throw new TypeError('option\x20domain\x20is\x20invalid');
                _0x408ce7 += ';\x20Domain=' + _0x29dfad['domain'];
            }
            if (_0x29dfad['path']) {
                if (!_0x14520c['test'](_0x29dfad['path']))
                    throw new TypeError('option\x20path\x20is\x20invalid');
                _0x408ce7 += ';\x20Path=' + _0x29dfad['path'];
            }
            if (_0x29dfad['expires']) {
                if (typeof _0x29dfad['expires']['toUTCString'] !== 'function')
                    throw new TypeError('option\x20expires\x20is\x20invalid');
                _0x408ce7 += ';\x20Expires=' + _0x29dfad['expires']['toUTCString']();
            }
            _0x29dfad['httpOnly'] && (_0x408ce7 += ';\x20HttpOnly');
            _0x29dfad['secure'] && (_0x408ce7 += ';\x20Secure');
            if (_0x29dfad['sameSite']) {
                var _0x15e352 = typeof _0x29dfad['sameSite'] === 'string' ? _0x29dfad['sameSite']['toLowerCase']() : _0x29dfad['sameSite'];
                switch (_0x15e352) {
                case !![]:
                    _0x408ce7 += ';\x20SameSite=Strict';
                    break;
                case 'lax':
                    _0x408ce7 += ';\x20SameSite=Lax';
                    break;
                case 'strict':
                    _0x408ce7 += ';\x20SameSite=Strict';
                    break;
                case 'none':
                    _0x408ce7 += ';\x20SameSite=None';
                    break;
                default:
                    throw new TypeError('option\x20sameSite\x20is\x20invalid');
                }
            }
            return _0x408ce7;
        }
        function _0x29b9cf(_0x4fb6b4, _0x5126c6) {
            try {
                return _0x5126c6(_0x4fb6b4);
            } catch (_0x49c41e) {
                return _0x4fb6b4;
            }
        }
    },
    0x1642d: (_0x47f8ca, _0x404050, _0x4af7cc) => {
        (function () {
            'use strict';
            var _0x56bea3 = _0x4af7cc(0x58ef), _0x3c485d = _0x4af7cc(0x56ef), _0xd90df6 = {
                    'origin': '*',
                    'methods': 'GET,HEAD,PUT,PATCH,POST,DELETE',
                    'preflightContinue': ![],
                    'optionsSuccessStatus': 0xcc
                };
            function _0x20d864(_0x38a12a) {
                return typeof _0x38a12a === 'string' || _0x38a12a instanceof String;
            }
            function _0x219e0b(_0x362f6c, _0x2192c7) {
                if (Array['isArray'](_0x2192c7)) {
                    for (var _0x2fa3d7 = 0x0; _0x2fa3d7 < _0x2192c7['length']; ++_0x2fa3d7) {
                        if (_0x219e0b(_0x362f6c, _0x2192c7[_0x2fa3d7]))
                            return !![];
                    }
                    return ![];
                } else {
                    if (_0x20d864(_0x2192c7))
                        return _0x362f6c === _0x2192c7;
                    else
                        return _0x2192c7 instanceof RegExp ? _0x2192c7['test'](_0x362f6c) : !!_0x2192c7;
                }
            }
            function _0x4c8a3f(_0x4c4dab, _0x2411f8) {
                var _0x8d89a0 = _0x2411f8['headers']['origin'], _0xd2253 = [], _0x305677;
                if (!_0x4c4dab['origin'] || _0x4c4dab['origin'] === '*')
                    _0xd2253['push']([{
                            'key': 'Access-Control-Allow-Origin',
                            'value': '*'
                        }]);
                else
                    _0x20d864(_0x4c4dab['origin']) ? (_0xd2253['push']([{
                            'key': 'Access-Control-Allow-Origin',
                            'value': _0x4c4dab['origin']
                        }]), _0xd2253['push']([{
                            'key': 'Vary',
                            'value': 'Origin'
                        }])) : (_0x305677 = _0x219e0b(_0x8d89a0, _0x4c4dab['origin']), _0xd2253['push']([{
                            'key': 'Access-Control-Allow-Origin',
                            'value': _0x305677 ? _0x8d89a0 : ![]
                        }]), _0xd2253['push']([{
                            'key': 'Vary',
                            'value': 'Origin'
                        }]));
                return _0xd2253;
            }
            function _0x1c036c(_0x5a0dc8) {
                var _0x4f3da0 = _0x5a0dc8['methods'];
                return _0x4f3da0['join'] && (_0x4f3da0 = _0x5a0dc8['methods']['join'](',')), {
                    'key': 'Access-Control-Allow-Methods',
                    'value': _0x4f3da0
                };
            }
            function _0x1034f4(_0x2fc438) {
                if (_0x2fc438['credentials'] === !![])
                    return {
                        'key': 'Access-Control-Allow-Credentials',
                        'value': 'true'
                    };
                return null;
            }
            function _0x5d5304(_0x569b5b, _0x1be91c) {
                var _0x53f03f = _0x569b5b['allowedHeaders'] || _0x569b5b['headers'], _0x4dd295 = [];
                if (!_0x53f03f)
                    _0x53f03f = _0x1be91c['headers']['access-control-request-headers'], _0x4dd295['push']([{
                            'key': 'Vary',
                            'value': 'Access-Control-Request-Headers'
                        }]);
                else
                    _0x53f03f['join'] && (_0x53f03f = _0x53f03f['join'](','));
                return _0x53f03f && _0x53f03f['length'] && _0x4dd295['push']([{
                        'key': 'Access-Control-Allow-Headers',
                        'value': _0x53f03f
                    }]), _0x4dd295;
            }
            function _0x21eeb8(_0x1c386c) {
                var _0xc47be4 = _0x1c386c['exposedHeaders'];
                if (!_0xc47be4)
                    return null;
                else
                    _0xc47be4['join'] && (_0xc47be4 = _0xc47be4['join'](','));
                if (_0xc47be4 && _0xc47be4['length'])
                    return {
                        'key': 'Access-Control-Expose-Headers',
                        'value': _0xc47be4
                    };
                return null;
            }
            function _0x176bdc(_0x1de68c) {
                var _0x212ecc = (typeof _0x1de68c['maxAge'] === 'number' || _0x1de68c['maxAge']) && _0x1de68c['maxAge']['toString']();
                if (_0x212ecc && _0x212ecc['length'])
                    return {
                        'key': 'Access-Control-Max-Age',
                        'value': _0x212ecc
                    };
                return null;
            }
            function _0x38ccf0(_0xdb1f84, _0x419e79) {
                for (var _0x48f05e = 0x0, _0x3ac014 = _0xdb1f84['length']; _0x48f05e < _0x3ac014; _0x48f05e++) {
                    var _0x15fbe6 = _0xdb1f84[_0x48f05e];
                    if (_0x15fbe6) {
                        if (Array['isArray'](_0x15fbe6))
                            _0x38ccf0(_0x15fbe6, _0x419e79);
                        else {
                            if (_0x15fbe6['key'] === 'Vary' && _0x15fbe6['value'])
                                _0x3c485d(_0x419e79, _0x15fbe6['value']);
                            else
                                _0x15fbe6['value'] && _0x419e79['setHeader'](_0x15fbe6['key'], _0x15fbe6['value']);
                        }
                    }
                }
            }
            function _0x2a9c10(_0x49e940, _0x644848, _0x18380f, _0x13d5ae) {
                var _0x3486be = [], _0x381aad = _0x644848['method'] && _0x644848['method']['toUpperCase'] && _0x644848['method']['toUpperCase']();
                _0x381aad === 'OPTIONS' ? (_0x3486be['push'](_0x4c8a3f(_0x49e940, _0x644848)), _0x3486be['push'](_0x1034f4(_0x49e940, _0x644848)), _0x3486be['push'](_0x1c036c(_0x49e940, _0x644848)), _0x3486be['push'](_0x5d5304(_0x49e940, _0x644848)), _0x3486be['push'](_0x176bdc(_0x49e940, _0x644848)), _0x3486be['push'](_0x21eeb8(_0x49e940, _0x644848)), _0x38ccf0(_0x3486be, _0x18380f), _0x49e940['preflightContinue'] ? _0x13d5ae() : (_0x18380f['statusCode'] = _0x49e940['optionsSuccessStatus'], _0x18380f['setHeader']('Content-Length', '0'), _0x18380f['end']())) : (_0x3486be['push'](_0x4c8a3f(_0x49e940, _0x644848)), _0x3486be['push'](_0x1034f4(_0x49e940, _0x644848)), _0x3486be['push'](_0x21eeb8(_0x49e940, _0x644848)), _0x38ccf0(_0x3486be, _0x18380f), _0x13d5ae());
            }
            function _0x549912(_0x9c98a3) {
                var _0x132a44 = null;
                return typeof _0x9c98a3 === 'function' ? _0x132a44 = _0x9c98a3 : _0x132a44 = function (_0x66a4f9, _0x507748) {
                    _0x507748(null, _0x9c98a3);
                }, function _0x281f68(_0xe3b612, _0x5e2dfa, _0x553be0) {
                    _0x132a44(_0xe3b612, function (_0x3b42a7, _0x7c7349) {
                        if (_0x3b42a7)
                            _0x553be0(_0x3b42a7);
                        else {
                            var _0x4903b9 = _0x56bea3({}, _0xd90df6, _0x7c7349), _0x3a8b5b = null;
                            if (_0x4903b9['origin'] && typeof _0x4903b9['origin'] === 'function')
                                _0x3a8b5b = _0x4903b9['origin'];
                            else
                                _0x4903b9['origin'] && (_0x3a8b5b = function (_0x1cafca, _0x42f27a) {
                                    _0x42f27a(null, _0x4903b9['origin']);
                                });
                            _0x3a8b5b ? _0x3a8b5b(_0xe3b612['headers']['origin'], function (_0x4e61f1, _0x2c5caf) {
                                _0x4e61f1 || !_0x2c5caf ? _0x553be0(_0x4e61f1) : (_0x4903b9['origin'] = _0x2c5caf, _0x2a9c10(_0x4903b9, _0xe3b612, _0x5e2dfa, _0x553be0));
                            }) : _0x553be0();
                        }
                    });
                };
            }
            _0x47f8ca['exports'] = _0x549912;
        }());
    },
    0x22c8: (_0x366e4e, _0x3aef6d, _0x2be892) => {
        'use strict';
        var _0x13e5df = _0x2be892(0x13377);
        function _0x2178ff(_0x196d02, _0x457b1b, _0x5828d2) {
            typeof _0x196d02 === 'function' && (_0x5828d2 = _0x457b1b, _0x457b1b = _0x196d02, _0x196d02 = null);
            if (_0x5828d2 < 0x1)
                throw new Error('fastqueue\x20concurrency\x20must\x20be\x20greater\x20than\x201');
            var _0x444aed = _0x13e5df(_0x4df838), _0x4a92ef = null, _0x1b994d = null, _0x1cd0af = 0x0, _0x16de43 = null, _0x2b4df9 = {
                    'push': _0x5f2e7f,
                    'drain': _0x937b5a,
                    'saturated': _0x937b5a,
                    'pause': _0x4f0bcc,
                    'paused': ![],
                    'concurrency': _0x5828d2,
                    'running': _0x44deb2,
                    'resume': _0x326758,
                    'idle': _0x4b92be,
                    'length': _0x31db43,
                    'getQueue': _0x33a250,
                    'unshift': _0x12b7c2,
                    'empty': _0x937b5a,
                    'kill': _0x4b4756,
                    'killAndDrain': _0x46d78f,
                    'error': _0x53f820
                };
            return _0x2b4df9;
            function _0x44deb2() {
                return _0x1cd0af;
            }
            function _0x4f0bcc() {
                _0x2b4df9['paused'] = !![];
            }
            function _0x31db43() {
                var _0x313ecf = _0x4a92ef, _0x20a833 = 0x0;
                while (_0x313ecf) {
                    _0x313ecf = _0x313ecf['next'], _0x20a833++;
                }
                return _0x20a833;
            }
            function _0x33a250() {
                var _0x20fb2d = _0x4a92ef, _0xc2638d = [];
                while (_0x20fb2d) {
                    _0xc2638d['push'](_0x20fb2d['value']), _0x20fb2d = _0x20fb2d['next'];
                }
                return _0xc2638d;
            }
            function _0x326758() {
                if (!_0x2b4df9['paused'])
                    return;
                _0x2b4df9['paused'] = ![];
                for (var _0x598da9 = 0x0; _0x598da9 < _0x2b4df9['concurrency']; _0x598da9++) {
                    _0x1cd0af++, _0x23f5ae();
                }
            }
            function _0x4b92be() {
                return _0x1cd0af === 0x0 && _0x2b4df9['length']() === 0x0;
            }
            function _0x5f2e7f(_0x4895fe, _0x1137fc) {
                var _0x347756 = _0x444aed['get']();
                _0x347756['context'] = _0x196d02, _0x347756['release'] = _0x23f5ae, _0x347756['value'] = _0x4895fe, _0x347756['callback'] = _0x1137fc || _0x937b5a, _0x347756['errorHandler'] = _0x16de43, _0x1cd0af === _0x2b4df9['concurrency'] || _0x2b4df9['paused'] ? _0x1b994d ? (_0x1b994d['next'] = _0x347756, _0x1b994d = _0x347756) : (_0x4a92ef = _0x347756, _0x1b994d = _0x347756, _0x2b4df9['saturated']()) : (_0x1cd0af++, _0x457b1b['call'](_0x196d02, _0x347756['value'], _0x347756['worked']));
            }
            function _0x12b7c2(_0x546d01, _0x32f5ef) {
                var _0x5e11ca = _0x444aed['get']();
                _0x5e11ca['context'] = _0x196d02, _0x5e11ca['release'] = _0x23f5ae, _0x5e11ca['value'] = _0x546d01, _0x5e11ca['callback'] = _0x32f5ef || _0x937b5a, _0x1cd0af === _0x2b4df9['concurrency'] || _0x2b4df9['paused'] ? _0x4a92ef ? (_0x5e11ca['next'] = _0x4a92ef, _0x4a92ef = _0x5e11ca) : (_0x4a92ef = _0x5e11ca, _0x1b994d = _0x5e11ca, _0x2b4df9['saturated']()) : (_0x1cd0af++, _0x457b1b['call'](_0x196d02, _0x5e11ca['value'], _0x5e11ca['worked']));
            }
            function _0x23f5ae(_0x3fd8d9) {
                _0x3fd8d9 && _0x444aed['release'](_0x3fd8d9);
                var _0x5b984d = _0x4a92ef;
                if (_0x5b984d)
                    !_0x2b4df9['paused'] ? (_0x1b994d === _0x4a92ef && (_0x1b994d = null), _0x4a92ef = _0x5b984d['next'], _0x5b984d['next'] = null, _0x457b1b['call'](_0x196d02, _0x5b984d['value'], _0x5b984d['worked']), _0x1b994d === null && _0x2b4df9['empty']()) : _0x1cd0af--;
                else
                    --_0x1cd0af === 0x0 && _0x2b4df9['drain']();
            }
            function _0x4b4756() {
                _0x4a92ef = null, _0x1b994d = null, _0x2b4df9['drain'] = _0x937b5a;
            }
            function _0x46d78f() {
                _0x4a92ef = null, _0x1b994d = null, _0x2b4df9['drain'](), _0x2b4df9['drain'] = _0x937b5a;
            }
            function _0x53f820(_0x44cbf0) {
                _0x16de43 = _0x44cbf0;
            }
        }
        function _0x937b5a() {
        }
        function _0x4df838() {
            this['value'] = null, this['callback'] = _0x937b5a, this['next'] = null, this['release'] = _0x937b5a, this['context'] = null, this['errorHandler'] = null;
            var _0x2471cf = this;
            this['worked'] = function _0x1b85d4(_0x404095, _0x293771) {
                var _0x44becc = _0x2471cf['callback'], _0x5c2153 = _0x2471cf['errorHandler'], _0x388958 = _0x2471cf['value'];
                _0x2471cf['value'] = null, _0x2471cf['callback'] = _0x937b5a, _0x2471cf['errorHandler'] && _0x5c2153(_0x404095, _0x388958), _0x44becc['call'](_0x2471cf['context'], _0x404095, _0x293771), _0x2471cf['release'](_0x2471cf);
            };
        }
        function _0x3286a2(_0x1f1b3c, _0x3c0131, _0x579734) {
            typeof _0x1f1b3c === 'function' && (_0x579734 = _0x3c0131, _0x3c0131 = _0x1f1b3c, _0x1f1b3c = null);
            function _0x28aee3(_0x164010, _0x4281f7) {
                _0x3c0131['call'](this, _0x164010)['then'](function (_0x49b87b) {
                    _0x4281f7(null, _0x49b87b);
                }, _0x4281f7);
            }
            var _0x322e50 = _0x2178ff(_0x1f1b3c, _0x28aee3, _0x579734), _0x1e1417 = _0x322e50['push'], _0x4f1d19 = _0x322e50['unshift'];
            _0x322e50['push'] = _0x5cb5a9, _0x322e50['unshift'] = _0x342777, _0x322e50['drained'] = _0x30b7b8;
            return _0x322e50;
            function _0x5cb5a9(_0x67878f) {
                var _0x232b2f = new Promise(function (_0x40ae77, _0x283286) {
                    _0x1e1417(_0x67878f, function (_0x57691b, _0xae6283) {
                        if (_0x57691b) {
                            _0x283286(_0x57691b);
                            return;
                        }
                        _0x40ae77(_0xae6283);
                    });
                });
                return _0x232b2f['catch'](_0x937b5a), _0x232b2f;
            }
            function _0x342777(_0x47a207) {
                var _0x386529 = new Promise(function (_0x2cf99f, _0x2a9017) {
                    _0x4f1d19(_0x47a207, function (_0x38f533, _0x36295c) {
                        if (_0x38f533) {
                            _0x2a9017(_0x38f533);
                            return;
                        }
                        _0x2cf99f(_0x36295c);
                    });
                });
                return _0x386529['catch'](_0x937b5a), _0x386529;
            }
            function _0x30b7b8() {
                var _0xf1c28e = _0x322e50['drain'], _0x1588bd = new Promise(function (_0x5d93a7) {
                        _0x322e50['drain'] = function () {
                            _0xf1c28e(), _0x5d93a7();
                        };
                    });
                return _0x1588bd;
            }
        }
        _0x366e4e['exports'] = _0x2178ff, _0x366e4e['exports']['promise'] = _0x3286a2;
    },
    0x9431: (_0x1f5c27, _0x3a36c2, _0x328ffa) => {
        'use strict';
        var _0xb304dd = _0x328ffa(0xcb41), _0x513616 = _0x328ffa(0xda4d), _0x18e425 = _0x328ffa(0x17dce), _0x420395 = _0x328ffa(0x165ae);
        _0x1f5c27['exports'] = _0x310124, _0x1f5c27['exports']['Negotiator'] = _0x310124;
        function _0x310124(_0x1deead) {
            if (!(this instanceof _0x310124))
                return new _0x310124(_0x1deead);
            this['request'] = _0x1deead;
        }
        _0x310124['prototype']['charset'] = function _0x5e8bdf(_0x3005de) {
            var _0x1fd248 = this['charsets'](_0x3005de);
            return _0x1fd248 && _0x1fd248[0x0];
        }, _0x310124['prototype']['charsets'] = function _0x4ace51(_0x231f31) {
            return _0xb304dd(this['request']['headers']['accept-charset'], _0x231f31);
        }, _0x310124['prototype']['encoding'] = function _0xce3b1f(_0x4c3af5) {
            var _0xdfc36d = this['encodings'](_0x4c3af5);
            return _0xdfc36d && _0xdfc36d[0x0];
        }, _0x310124['prototype']['encodings'] = function _0x3952c7(_0x46449a) {
            return _0x513616(this['request']['headers']['accept-encoding'], _0x46449a);
        }, _0x310124['prototype']['language'] = function _0x5fdf6c(_0x310413) {
            var _0x94e60d = this['languages'](_0x310413);
            return _0x94e60d && _0x94e60d[0x0];
        }, _0x310124['prototype']['languages'] = function _0x3148be(_0x5b2b8b) {
            return _0x18e425(this['request']['headers']['accept-language'], _0x5b2b8b);
        }, _0x310124['prototype']['mediaType'] = function _0x19528d(_0x4ee63c) {
            var _0x1e9037 = this['mediaTypes'](_0x4ee63c);
            return _0x1e9037 && _0x1e9037[0x0];
        }, _0x310124['prototype']['mediaTypes'] = function _0x5c042e(_0x196f66) {
            return _0x420395(this['request']['headers']['accept'], _0x196f66);
        }, _0x310124['prototype']['preferredCharset'] = _0x310124['prototype']['charset'], _0x310124['prototype']['preferredCharsets'] = _0x310124['prototype']['charsets'], _0x310124['prototype']['preferredEncoding'] = _0x310124['prototype']['encoding'], _0x310124['prototype']['preferredEncodings'] = _0x310124['prototype']['encodings'], _0x310124['prototype']['preferredLanguage'] = _0x310124['prototype']['language'], _0x310124['prototype']['preferredLanguages'] = _0x310124['prototype']['languages'], _0x310124['prototype']['preferredMediaType'] = _0x310124['prototype']['mediaType'], _0x310124['prototype']['preferredMediaTypes'] = _0x310124['prototype']['mediaTypes'];
    },
    0xcb41: _0x19b036 => {
        'use strict';
        _0x19b036['exports'] = _0x5f1fab, _0x19b036['exports']['preferredCharsets'] = _0x5f1fab;
        var _0xe04784 = /^\s*([^\s;]+)\s*(?:;(.*))?$/;
        function _0x1fc029(_0x42da04) {
            var _0x4167dc = _0x42da04['split'](',');
            for (var _0x3a81d4 = 0x0, _0x2413c0 = 0x0; _0x3a81d4 < _0x4167dc['length']; _0x3a81d4++) {
                var _0x1c8fe3 = _0x4d7cd8(_0x4167dc[_0x3a81d4]['trim'](), _0x3a81d4);
                _0x1c8fe3 && (_0x4167dc[_0x2413c0++] = _0x1c8fe3);
            }
            return _0x4167dc['length'] = _0x2413c0, _0x4167dc;
        }
        function _0x4d7cd8(_0x4011b8, _0x4e2c8a) {
            var _0x4e7e79 = _0xe04784['exec'](_0x4011b8);
            if (!_0x4e7e79)
                return null;
            var _0x22e2e2 = _0x4e7e79[0x1], _0x209711 = 0x1;
            if (_0x4e7e79[0x2]) {
                var _0x1b4d6a = _0x4e7e79[0x2]['split'](';');
                for (var _0x10f9dc = 0x0; _0x10f9dc < _0x1b4d6a['length']; _0x10f9dc++) {
                    var _0x23cd7a = _0x1b4d6a[_0x10f9dc]['trim']()['split']('=');
                    if (_0x23cd7a[0x0] === 'q') {
                        _0x209711 = parseFloat(_0x23cd7a[0x1]);
                        break;
                    }
                }
            }
            return {
                'charset': _0x22e2e2,
                'q': _0x209711,
                'i': _0x4e2c8a
            };
        }
        function _0x5da0fb(_0x3b2b4f, _0x40883c, _0x3c2875) {
            var _0x30c4c2 = {
                'o': -0x1,
                'q': 0x0,
                's': 0x0
            };
            for (var _0x3640e2 = 0x0; _0x3640e2 < _0x40883c['length']; _0x3640e2++) {
                var _0x1c7756 = _0x4122fc(_0x3b2b4f, _0x40883c[_0x3640e2], _0x3c2875);
                _0x1c7756 && (_0x30c4c2['s'] - _0x1c7756['s'] || _0x30c4c2['q'] - _0x1c7756['q'] || _0x30c4c2['o'] - _0x1c7756['o']) < 0x0 && (_0x30c4c2 = _0x1c7756);
            }
            return _0x30c4c2;
        }
        function _0x4122fc(_0x1c3d3b, _0x39eb87, _0xa2e39c) {
            var _0x2e1960 = 0x0;
            if (_0x39eb87['charset']['toLowerCase']() === _0x1c3d3b['toLowerCase']())
                _0x2e1960 |= 0x1;
            else {
                if (_0x39eb87['charset'] !== '*')
                    return null;
            }
            return {
                'i': _0xa2e39c,
                'o': _0x39eb87['i'],
                'q': _0x39eb87['q'],
                's': _0x2e1960
            };
        }
        function _0x5f1fab(_0x294321, _0x349567) {
            var _0x148574 = _0x1fc029(_0x294321 === undefined ? '*' : _0x294321 || '');
            if (!_0x349567)
                return _0x148574['filter'](_0x11dde2)['sort'](_0x1e65ce)['map'](_0x2628e1);
            var _0x1aa594 = _0x349567['map'](function _0xba0238(_0x563b8c, _0x4cced8) {
                return _0x5da0fb(_0x563b8c, _0x148574, _0x4cced8);
            });
            return _0x1aa594['filter'](_0x11dde2)['sort'](_0x1e65ce)['map'](function _0x7f0b7b(_0x3f5bda) {
                return _0x349567[_0x1aa594['indexOf'](_0x3f5bda)];
            });
        }
        function _0x1e65ce(_0x39eab6, _0x18d489) {
            return _0x18d489['q'] - _0x39eab6['q'] || _0x18d489['s'] - _0x39eab6['s'] || _0x39eab6['o'] - _0x18d489['o'] || _0x39eab6['i'] - _0x18d489['i'] || 0x0;
        }
        function _0x2628e1(_0x296419) {
            return _0x296419['charset'];
        }
        function _0x11dde2(_0x3cf9d1) {
            return _0x3cf9d1['q'] > 0x0;
        }
    },
    0xda4d: _0x2e6f58 => {
        'use strict';
        _0x2e6f58['exports'] = _0x2eb646, _0x2e6f58['exports']['preferredEncodings'] = _0x2eb646;
        var _0x5acd76 = /^\s*([^\s;]+)\s*(?:;(.*))?$/;
        function _0x1f89af(_0x41bc0f) {
            var _0x71b655 = _0x41bc0f['split'](','), _0x68b4c8 = ![], _0x5c8b8e = 0x1;
            for (var _0x516240 = 0x0, _0x4818e7 = 0x0; _0x516240 < _0x71b655['length']; _0x516240++) {
                var _0x576462 = _0x446d05(_0x71b655[_0x516240]['trim'](), _0x516240);
                _0x576462 && (_0x71b655[_0x4818e7++] = _0x576462, _0x68b4c8 = _0x68b4c8 || _0x450d4b('identity', _0x576462), _0x5c8b8e = Math['min'](_0x5c8b8e, _0x576462['q'] || 0x1));
            }
            return !_0x68b4c8 && (_0x71b655[_0x4818e7++] = {
                'encoding': 'identity',
                'q': _0x5c8b8e,
                'i': _0x516240
            }), _0x71b655['length'] = _0x4818e7, _0x71b655;
        }
        function _0x446d05(_0x2a2fdf, _0x2a7895) {
            var _0x1b0125 = _0x5acd76['exec'](_0x2a2fdf);
            if (!_0x1b0125)
                return null;
            var _0x500d07 = _0x1b0125[0x1], _0x146d28 = 0x1;
            if (_0x1b0125[0x2]) {
                var _0x547a33 = _0x1b0125[0x2]['split'](';');
                for (var _0x1f710c = 0x0; _0x1f710c < _0x547a33['length']; _0x1f710c++) {
                    var _0xe4d246 = _0x547a33[_0x1f710c]['trim']()['split']('=');
                    if (_0xe4d246[0x0] === 'q') {
                        _0x146d28 = parseFloat(_0xe4d246[0x1]);
                        break;
                    }
                }
            }
            return {
                'encoding': _0x500d07,
                'q': _0x146d28,
                'i': _0x2a7895
            };
        }
        function _0x26120f(_0x462fe7, _0x5a71f0, _0x593c87) {
            var _0x584f37 = {
                'o': -0x1,
                'q': 0x0,
                's': 0x0
            };
            for (var _0x581ce1 = 0x0; _0x581ce1 < _0x5a71f0['length']; _0x581ce1++) {
                var _0x18929e = _0x450d4b(_0x462fe7, _0x5a71f0[_0x581ce1], _0x593c87);
                _0x18929e && (_0x584f37['s'] - _0x18929e['s'] || _0x584f37['q'] - _0x18929e['q'] || _0x584f37['o'] - _0x18929e['o']) < 0x0 && (_0x584f37 = _0x18929e);
            }
            return _0x584f37;
        }
        function _0x450d4b(_0x41475c, _0x3009ab, _0x825862) {
            var _0x15ff7f = 0x0;
            if (_0x3009ab['encoding']['toLowerCase']() === _0x41475c['toLowerCase']())
                _0x15ff7f |= 0x1;
            else {
                if (_0x3009ab['encoding'] !== '*')
                    return null;
            }
            return {
                'i': _0x825862,
                'o': _0x3009ab['i'],
                'q': _0x3009ab['q'],
                's': _0x15ff7f
            };
        }
        ;
        function _0x2eb646(_0xe8b50f, _0xae34c6) {
            var _0x57947f = _0x1f89af(_0xe8b50f || '');
            if (!_0xae34c6)
                return _0x57947f['filter'](_0x4073fe)['sort'](_0x33c1f8)['map'](_0x4167bc);
            var _0xf646b9 = _0xae34c6['map'](function _0x3970b9(_0x4822e1, _0x4af8c0) {
                return _0x26120f(_0x4822e1, _0x57947f, _0x4af8c0);
            });
            return _0xf646b9['filter'](_0x4073fe)['sort'](_0x33c1f8)['map'](function _0x52a508(_0x4c4212) {
                return _0xae34c6[_0xf646b9['indexOf'](_0x4c4212)];
            });
        }
        function _0x33c1f8(_0x4d27f8, _0x1ed3fd) {
            return _0x1ed3fd['q'] - _0x4d27f8['q'] || _0x1ed3fd['s'] - _0x4d27f8['s'] || _0x4d27f8['o'] - _0x1ed3fd['o'] || _0x4d27f8['i'] - _0x1ed3fd['i'] || 0x0;
        }
        function _0x4167bc(_0x58adf5) {
            return _0x58adf5['encoding'];
        }
        function _0x4073fe(_0x2bcc2a) {
            return _0x2bcc2a['q'] > 0x0;
        }
    },
    0x17dce: _0x2cbd12 => {
        'use strict';
        _0x2cbd12['exports'] = _0x230469, _0x2cbd12['exports']['preferredLanguages'] = _0x230469;
        var _0x532cfa = /^\s*([^\s\-;]+)(?:-([^\s;]+))?\s*(?:;(.*))?$/;
        function _0x4022d7(_0x4e71a6) {
            var _0x2eab1a = _0x4e71a6['split'](',');
            for (var _0x39e6a0 = 0x0, _0x341521 = 0x0; _0x39e6a0 < _0x2eab1a['length']; _0x39e6a0++) {
                var _0x56f495 = _0x4ea7d3(_0x2eab1a[_0x39e6a0]['trim'](), _0x39e6a0);
                _0x56f495 && (_0x2eab1a[_0x341521++] = _0x56f495);
            }
            return _0x2eab1a['length'] = _0x341521, _0x2eab1a;
        }
        function _0x4ea7d3(_0x4efee3, _0x1857b0) {
            var _0x5624ee = _0x532cfa['exec'](_0x4efee3);
            if (!_0x5624ee)
                return null;
            var _0xdc9ba2 = _0x5624ee[0x1], _0x341496 = _0x5624ee[0x2], _0x18dc03 = _0xdc9ba2;
            if (_0x341496)
                _0x18dc03 += '-' + _0x341496;
            var _0x1d4689 = 0x1;
            if (_0x5624ee[0x3]) {
                var _0x302ff9 = _0x5624ee[0x3]['split'](';');
                for (var _0x22e822 = 0x0; _0x22e822 < _0x302ff9['length']; _0x22e822++) {
                    var _0x36b67d = _0x302ff9[_0x22e822]['split']('=');
                    if (_0x36b67d[0x0] === 'q')
                        _0x1d4689 = parseFloat(_0x36b67d[0x1]);
                }
            }
            return {
                'prefix': _0xdc9ba2,
                'suffix': _0x341496,
                'q': _0x1d4689,
                'i': _0x1857b0,
                'full': _0x18dc03
            };
        }
        function _0x47b2ba(_0x58327b, _0x52992a, _0x2d1dfd) {
            var _0x538057 = {
                'o': -0x1,
                'q': 0x0,
                's': 0x0
            };
            for (var _0x9250fb = 0x0; _0x9250fb < _0x52992a['length']; _0x9250fb++) {
                var _0x14499e = _0x175dbf(_0x58327b, _0x52992a[_0x9250fb], _0x2d1dfd);
                _0x14499e && (_0x538057['s'] - _0x14499e['s'] || _0x538057['q'] - _0x14499e['q'] || _0x538057['o'] - _0x14499e['o']) < 0x0 && (_0x538057 = _0x14499e);
            }
            return _0x538057;
        }
        function _0x175dbf(_0x3bf266, _0x7c5da1, _0x3bb820) {
            var _0x58ffa4 = _0x4ea7d3(_0x3bf266);
            if (!_0x58ffa4)
                return null;
            var _0x338542 = 0x0;
            if (_0x7c5da1['full']['toLowerCase']() === _0x58ffa4['full']['toLowerCase']())
                _0x338542 |= 0x4;
            else {
                if (_0x7c5da1['prefix']['toLowerCase']() === _0x58ffa4['full']['toLowerCase']())
                    _0x338542 |= 0x2;
                else {
                    if (_0x7c5da1['full']['toLowerCase']() === _0x58ffa4['prefix']['toLowerCase']())
                        _0x338542 |= 0x1;
                    else {
                        if (_0x7c5da1['full'] !== '*')
                            return null;
                    }
                }
            }
            return {
                'i': _0x3bb820,
                'o': _0x7c5da1['i'],
                'q': _0x7c5da1['q'],
                's': _0x338542
            };
        }
        ;
        function _0x230469(_0x4a30c8, _0x53662a) {
            var _0x27ab1e = _0x4022d7(_0x4a30c8 === undefined ? '*' : _0x4a30c8 || '');
            if (!_0x53662a)
                return _0x27ab1e['filter'](_0x2a3c29)['sort'](_0x85058c)['map'](_0x8444);
            var _0x3fb03f = _0x53662a['map'](function _0x1b0c65(_0x79a142, _0x1722c4) {
                return _0x47b2ba(_0x79a142, _0x27ab1e, _0x1722c4);
            });
            return _0x3fb03f['filter'](_0x2a3c29)['sort'](_0x85058c)['map'](function _0x482067(_0x3bb174) {
                return _0x53662a[_0x3fb03f['indexOf'](_0x3bb174)];
            });
        }
        function _0x85058c(_0x501b8c, _0x196723) {
            return _0x196723['q'] - _0x501b8c['q'] || _0x196723['s'] - _0x501b8c['s'] || _0x501b8c['o'] - _0x196723['o'] || _0x501b8c['i'] - _0x196723['i'] || 0x0;
        }
        function _0x8444(_0xf10e2b) {
            return _0xf10e2b['full'];
        }
        function _0x2a3c29(_0x24df37) {
            return _0x24df37['q'] > 0x0;
        }
    },
    0x165ae: _0x423a27 => {
        'use strict';
        _0x423a27['exports'] = _0x92850a, _0x423a27['exports']['preferredMediaTypes'] = _0x92850a;
        var _0x28ea91 = /^\s*([^\s\/;]+)\/([^;\s]+)\s*(?:;(.*))?$/;
        function _0x1701b6(_0xd1ce30) {
            var _0x196028 = _0x5a23dd(_0xd1ce30);
            for (var _0x148912 = 0x0, _0x4ad7e9 = 0x0; _0x148912 < _0x196028['length']; _0x148912++) {
                var _0x93c022 = _0x1fb9f7(_0x196028[_0x148912]['trim'](), _0x148912);
                _0x93c022 && (_0x196028[_0x4ad7e9++] = _0x93c022);
            }
            return _0x196028['length'] = _0x4ad7e9, _0x196028;
        }
        function _0x1fb9f7(_0x227d4f, _0x4b4628) {
            var _0x4d6ee2 = _0x28ea91['exec'](_0x227d4f);
            if (!_0x4d6ee2)
                return null;
            var _0x5a066b = Object['create'](null), _0x1c887f = 0x1, _0x5ae487 = _0x4d6ee2[0x2], _0x3c44d7 = _0x4d6ee2[0x1];
            if (_0x4d6ee2[0x3]) {
                var _0xafec5c = _0xecec4d(_0x4d6ee2[0x3])['map'](_0x3547ae);
                for (var _0x1f8ea1 = 0x0; _0x1f8ea1 < _0xafec5c['length']; _0x1f8ea1++) {
                    var _0x49b17a = _0xafec5c[_0x1f8ea1], _0x3f1636 = _0x49b17a[0x0]['toLowerCase'](), _0x38f70c = _0x49b17a[0x1], _0x101adf = _0x38f70c && _0x38f70c[0x0] === '\x22' && _0x38f70c[_0x38f70c['length'] - 0x1] === '\x22' ? _0x38f70c['substr'](0x1, _0x38f70c['length'] - 0x2) : _0x38f70c;
                    if (_0x3f1636 === 'q') {
                        _0x1c887f = parseFloat(_0x101adf);
                        break;
                    }
                    _0x5a066b[_0x3f1636] = _0x101adf;
                }
            }
            return {
                'type': _0x3c44d7,
                'subtype': _0x5ae487,
                'params': _0x5a066b,
                'q': _0x1c887f,
                'i': _0x4b4628
            };
        }
        function _0x4cd677(_0x3cd751, _0x42b36c, _0x1b43db) {
            var _0x555793 = {
                'o': -0x1,
                'q': 0x0,
                's': 0x0
            };
            for (var _0x4d4020 = 0x0; _0x4d4020 < _0x42b36c['length']; _0x4d4020++) {
                var _0x137420 = _0xb68f51(_0x3cd751, _0x42b36c[_0x4d4020], _0x1b43db);
                _0x137420 && (_0x555793['s'] - _0x137420['s'] || _0x555793['q'] - _0x137420['q'] || _0x555793['o'] - _0x137420['o']) < 0x0 && (_0x555793 = _0x137420);
            }
            return _0x555793;
        }
        function _0xb68f51(_0x36754b, _0x47447c, _0xd2e85c) {
            var _0x3fbaa7 = _0x1fb9f7(_0x36754b), _0x12528e = 0x0;
            if (!_0x3fbaa7)
                return null;
            if (_0x47447c['type']['toLowerCase']() == _0x3fbaa7['type']['toLowerCase']())
                _0x12528e |= 0x4;
            else {
                if (_0x47447c['type'] != '*')
                    return null;
            }
            if (_0x47447c['subtype']['toLowerCase']() == _0x3fbaa7['subtype']['toLowerCase']())
                _0x12528e |= 0x2;
            else {
                if (_0x47447c['subtype'] != '*')
                    return null;
            }
            var _0x17584b = Object['keys'](_0x47447c['params']);
            if (_0x17584b['length'] > 0x0) {
                if (_0x17584b['every'](function (_0x31fc4d) {
                        return _0x47447c['params'][_0x31fc4d] == '*' || (_0x47447c['params'][_0x31fc4d] || '')['toLowerCase']() == (_0x3fbaa7['params'][_0x31fc4d] || '')['toLowerCase']();
                    }))
                    _0x12528e |= 0x1;
                else
                    return null;
            }
            return {
                'i': _0xd2e85c,
                'o': _0x47447c['i'],
                'q': _0x47447c['q'],
                's': _0x12528e
            };
        }
        function _0x92850a(_0x319dfc, _0x15d66b) {
            var _0x4bb83d = _0x1701b6(_0x319dfc === undefined ? '*/*' : _0x319dfc || '');
            if (!_0x15d66b)
                return _0x4bb83d['filter'](_0x3a4f59)['sort'](_0x3fe3c7)['map'](_0x3779ed);
            var _0x39c263 = _0x15d66b['map'](function _0x59a794(_0x2c88e5, _0x2427fd) {
                return _0x4cd677(_0x2c88e5, _0x4bb83d, _0x2427fd);
            });
            return _0x39c263['filter'](_0x3a4f59)['sort'](_0x3fe3c7)['map'](function _0x19890e(_0x2b1439) {
                return _0x15d66b[_0x39c263['indexOf'](_0x2b1439)];
            });
        }
        function _0x3fe3c7(_0x1171e6, _0x11b65e) {
            return _0x11b65e['q'] - _0x1171e6['q'] || _0x11b65e['s'] - _0x1171e6['s'] || _0x1171e6['o'] - _0x11b65e['o'] || _0x1171e6['i'] - _0x11b65e['i'] || 0x0;
        }
        function _0x3779ed(_0x9dc3f2) {
            return _0x9dc3f2['type'] + '/' + _0x9dc3f2['subtype'];
        }
        function _0x3a4f59(_0x145e65) {
            return _0x145e65['q'] > 0x0;
        }
        function _0x1e8e5e(_0x415605) {
            var _0xf5b0db = 0x0, _0x297aff = 0x0;
            while ((_0x297aff = _0x415605['indexOf']('\x22', _0x297aff)) !== -0x1) {
                _0xf5b0db++, _0x297aff++;
            }
            return _0xf5b0db;
        }
        function _0x3547ae(_0x101cb8) {
            var _0x4c518d = _0x101cb8['indexOf']('='), _0x36289c, _0x13b333;
            return _0x4c518d === -0x1 ? _0x36289c = _0x101cb8 : (_0x36289c = _0x101cb8['substr'](0x0, _0x4c518d), _0x13b333 = _0x101cb8['substr'](_0x4c518d + 0x1)), [
                _0x36289c,
                _0x13b333
            ];
        }
        function _0x5a23dd(_0x2afb31) {
            var _0x23cf61 = _0x2afb31['split'](',');
            for (var _0x2dea4a = 0x1, _0x47f579 = 0x0; _0x2dea4a < _0x23cf61['length']; _0x2dea4a++) {
                _0x1e8e5e(_0x23cf61[_0x47f579]) % 0x2 == 0x0 ? _0x23cf61[++_0x47f579] = _0x23cf61[_0x2dea4a] : _0x23cf61[_0x47f579] += ',' + _0x23cf61[_0x2dea4a];
            }
            return _0x23cf61['length'] = _0x47f579 + 0x1, _0x23cf61;
        }
        function _0xecec4d(_0x4306d5) {
            var _0x4fbba2 = _0x4306d5['split'](';');
            for (var _0x3a0438 = 0x1, _0x16ce60 = 0x0; _0x3a0438 < _0x4fbba2['length']; _0x3a0438++) {
                _0x1e8e5e(_0x4fbba2[_0x16ce60]) % 0x2 == 0x0 ? _0x4fbba2[++_0x16ce60] = _0x4fbba2[_0x3a0438] : _0x4fbba2[_0x16ce60] += ';' + _0x4fbba2[_0x3a0438];
            }
            _0x4fbba2['length'] = _0x16ce60 + 0x1;
            for (var _0x3a0438 = 0x0; _0x3a0438 < _0x4fbba2['length']; _0x3a0438++) {
                _0x4fbba2[_0x3a0438] = _0x4fbba2[_0x3a0438]['trim']();
            }
            return _0x4fbba2;
        }
    },
    0x4458: (_0x9de7d0, _0x4af7db, _0x4109b2) => {
        var _0x3e6f3e = _0x4109b2(0xdf3b), _0x43cf72 = _0x4109b2(0x11569), _0x180a7e = _0x4109b2(0x5615), _0x172a16 = !![] ? require : 0x0, _0x36a2c6 = process['config'] && process['config']['variables'] || {}, _0x55a7fd = !!process['env']['PREBUILDS_ONLY'], _0x44654f = process['versions']['modules'], _0x5b83d0 = _0x546c33() ? 'electron' : _0x261d6a() ? 'node-webkit' : 'node', _0x2a8c4b = _0x180a7e['arch'](), _0x3e333f = _0x180a7e['platform'](), _0x1d3cd6 = process['env']['LIBC'] || (_0xa1cd3b(_0x3e333f) ? 'musl' : 'glibc'), _0x1b79e5 = process['env']['ARM_VERSION'] || (_0x2a8c4b === 'arm64' ? '8' : _0x36a2c6['arm_version']) || '', _0x29d92f = (process['versions']['uv'] || '')['split']('.')[0x0];
        _0x9de7d0['exports'] = _0x3933fc;
        function _0x3933fc(_0x54a31a) {
            return _0x172a16(_0x3933fc['path'](_0x54a31a));
        }
        _0x3933fc['path'] = function (_0x251336) {
            _0x251336 = _0x43cf72['resolve'](_0x251336 || '.');
            try {
                var _0xe73139 = _0x172a16(_0x43cf72['join'](_0x251336, 'package.json'))['name']['toUpperCase']()['replace'](/-/g, '_');
                if (process['env'][_0xe73139 + '_PREBUILD'])
                    _0x251336 = process['env'][_0xe73139 + '_PREBUILD'];
            } catch (_0x29eec7) {
            }
            if (!_0x55a7fd) {
                var _0x54b332 = _0x245d66(_0x43cf72['join'](_0x251336, 'build/Release'), _0x2bc277);
                if (_0x54b332)
                    return _0x54b332;
                var _0x22f8e3 = _0x245d66(_0x43cf72['join'](_0x251336, 'build/Debug'), _0x2bc277);
                if (_0x22f8e3)
                    return _0x22f8e3;
            }
            var _0x3a563b = _0x8b5924(_0x251336);
            if (_0x3a563b)
                return _0x3a563b;
            var _0x38bdac = _0x8b5924(_0x43cf72['dirname'](process['execPath']));
            if (_0x38bdac)
                return _0x38bdac;
            var _0xab5ea6 = [
                'platform=' + _0x3e333f,
                'arch=' + _0x2a8c4b,
                'runtime=' + _0x5b83d0,
                'abi=' + _0x44654f,
                'uv=' + _0x29d92f,
                _0x1b79e5 ? 'armv=' + _0x1b79e5 : '',
                'libc=' + _0x1d3cd6,
                'node=' + process['versions']['node'],
                process['versions']['electron'] ? 'electron=' + process['versions']['electron'] : '',
                !![] ? 'webpack=true' : 0x0
            ]['filter'](Boolean)['join']('\x20');
            throw new Error('No\x20native\x20build\x20was\x20found\x20for\x20' + _0xab5ea6 + '\x0a\x20\x20\x20\x20loaded\x20from:\x20' + _0x251336 + '\x0a');
            function _0x8b5924(_0x16dc80) {
                var _0x115c3e = _0x4a8c8f(_0x43cf72['join'](_0x16dc80, 'prebuilds'))['map'](_0x26ea8c), _0x278551 = _0x115c3e['filter'](_0x421f90(_0x3e333f, _0x2a8c4b))['sort'](_0xc2f33a)[0x0];
                if (!_0x278551)
                    return;
                var _0x5e3419 = _0x43cf72['join'](_0x16dc80, 'prebuilds', _0x278551['name']), _0x2234b6 = _0x4a8c8f(_0x5e3419)['map'](_0x5022fa), _0x30dc6b = _0x2234b6['filter'](_0x188ec7(_0x5b83d0, _0x44654f)), _0x40f603 = _0x30dc6b['sort'](_0x2c4382(_0x5b83d0))[0x0];
                if (_0x40f603)
                    return _0x43cf72['join'](_0x5e3419, _0x40f603['file']);
            }
        };
        function _0x4a8c8f(_0x248030) {
            try {
                return _0x3e6f3e['readdirSync'](_0x248030);
            } catch (_0xb4dbf3) {
                return [];
            }
        }
        function _0x245d66(_0x2d181d, _0x3434b6) {
            var _0x58952e = _0x4a8c8f(_0x2d181d)['filter'](_0x3434b6);
            return _0x58952e[0x0] && _0x43cf72['join'](_0x2d181d, _0x58952e[0x0]);
        }
        function _0x2bc277(_0x393327) {
            return /\.node$/['test'](_0x393327);
        }
        function _0x26ea8c(_0x4d947f) {
            var _0x30ddbb = _0x4d947f['split']('-');
            if (_0x30ddbb['length'] !== 0x2)
                return;
            var _0x511d7c = _0x30ddbb[0x0], _0x31c1eb = _0x30ddbb[0x1]['split']('+');
            if (!_0x511d7c)
                return;
            if (!_0x31c1eb['length'])
                return;
            if (!_0x31c1eb['every'](Boolean))
                return;
            return {
                'name': _0x4d947f,
                'platform': _0x511d7c,
                'architectures': _0x31c1eb
            };
        }
        function _0x421f90(_0x23561a, _0x250c21) {
            return function (_0x4a35f9) {
                if (_0x4a35f9 == null)
                    return ![];
                if (_0x4a35f9['platform'] !== _0x23561a)
                    return ![];
                return _0x4a35f9['architectures']['includes'](_0x250c21);
            };
        }
        function _0xc2f33a(_0x2c8aec, _0x10a0aa) {
            return _0x2c8aec['architectures']['length'] - _0x10a0aa['architectures']['length'];
        }
        function _0x5022fa(_0x8bcf7d) {
            var _0x2566d5 = _0x8bcf7d['split']('.'), _0x27ca0e = _0x2566d5['pop'](), _0x463732 = {
                    'file': _0x8bcf7d,
                    'specificity': 0x0
                };
            if (_0x27ca0e !== 'node')
                return;
            for (var _0x237915 = 0x0; _0x237915 < _0x2566d5['length']; _0x237915++) {
                var _0x21c43a = _0x2566d5[_0x237915];
                if (_0x21c43a === 'node' || _0x21c43a === 'electron' || _0x21c43a === 'node-webkit')
                    _0x463732['runtime'] = _0x21c43a;
                else {
                    if (_0x21c43a === 'napi')
                        _0x463732['napi'] = !![];
                    else {
                        if (_0x21c43a['slice'](0x0, 0x3) === 'abi')
                            _0x463732['abi'] = _0x21c43a['slice'](0x3);
                        else {
                            if (_0x21c43a['slice'](0x0, 0x2) === 'uv')
                                _0x463732['uv'] = _0x21c43a['slice'](0x2);
                            else {
                                if (_0x21c43a['slice'](0x0, 0x4) === 'armv')
                                    _0x463732['armv'] = _0x21c43a['slice'](0x4);
                                else {
                                    if (_0x21c43a === 'glibc' || _0x21c43a === 'musl')
                                        _0x463732['libc'] = _0x21c43a;
                                    else
                                        continue;
                                }
                            }
                        }
                    }
                }
                _0x463732['specificity']++;
            }
            return _0x463732;
        }
        function _0x188ec7(_0x5b71b9, _0x14fae9) {
            return function (_0x5c3f72) {
                if (_0x5c3f72 == null)
                    return ![];
                if (_0x5c3f72['runtime'] !== _0x5b71b9 && !_0x54b96b(_0x5c3f72))
                    return ![];
                if (_0x5c3f72['abi'] !== _0x14fae9 && !_0x5c3f72['napi'])
                    return ![];
                if (_0x5c3f72['uv'] && _0x5c3f72['uv'] !== _0x29d92f)
                    return ![];
                if (_0x5c3f72['armv'] && _0x5c3f72['armv'] !== _0x1b79e5)
                    return ![];
                if (_0x5c3f72['libc'] && _0x5c3f72['libc'] !== _0x1d3cd6)
                    return ![];
                return !![];
            };
        }
        function _0x54b96b(_0x559f95) {
            return _0x559f95['runtime'] === 'node' && _0x559f95['napi'];
        }
        function _0x2c4382(_0x73c3d1) {
            return function (_0x32a89c, _0x53616a) {
                if (_0x32a89c['runtime'] !== _0x53616a['runtime'])
                    return _0x32a89c['runtime'] === _0x73c3d1 ? -0x1 : 0x1;
                else {
                    if (_0x32a89c['abi'] !== _0x53616a['abi'])
                        return _0x32a89c['abi'] ? -0x1 : 0x1;
                    else
                        return _0x32a89c['specificity'] !== _0x53616a['specificity'] ? _0x32a89c['specificity'] > _0x53616a['specificity'] ? -0x1 : 0x1 : 0x0;
                }
            };
        }
        function _0x261d6a() {
            return !!(process['versions'] && process['versions']['nw']);
        }
        function _0x546c33() {
            if (process['versions'] && process['versions']['electron'])
                return !![];
            if (process['env']['ELECTRON_RUN_AS_NODE'])
                return !![];
            return typeof window !== 'undefined' && window['process'] && window['process']['type'] === 'renderer';
        }
        function _0xa1cd3b(_0x454c95) {
            return _0x454c95 === 'linux' && _0x3e6f3e['existsSync']('/etc/alpine-release');
        }
        _0x3933fc['parseTags'] = _0x5022fa, _0x3933fc['matchTags'] = _0x188ec7, _0x3933fc['compareTags'] = _0x2c4382, _0x3933fc['parseTuple'] = _0x26ea8c, _0x3933fc['matchTuple'] = _0x421f90, _0x3933fc['compareTuples'] = _0xc2f33a;
    },
    0x58ef: _0x549429 => {
        'use strict';
        /*
object-assign
(c) Sindre Sorhus
@license MIT
*/
        var _0x5f5216 = Object['getOwnPropertySymbols'], _0x156205 = Object['prototype']['hasOwnProperty'], _0x259290 = Object['prototype']['propertyIsEnumerable'];
        function _0xb349aa(_0x2b0451) {
            if (_0x2b0451 === null || _0x2b0451 === undefined)
                throw new TypeError('Object.assign\x20cannot\x20be\x20called\x20with\x20null\x20or\x20undefined');
            return Object(_0x2b0451);
        }
        function _0x57a10d() {
            try {
                if (!Object['assign'])
                    return ![];
                var _0x22bc25 = new String('abc');
                _0x22bc25[0x5] = 'de';
                if (Object['getOwnPropertyNames'](_0x22bc25)[0x0] === '5')
                    return ![];
                var _0x35c7b4 = {};
                for (var _0x176d7f = 0x0; _0x176d7f < 0xa; _0x176d7f++) {
                    _0x35c7b4['_' + String['fromCharCode'](_0x176d7f)] = _0x176d7f;
                }
                var _0xa04d4f = Object['getOwnPropertyNames'](_0x35c7b4)['map'](function (_0x185fa7) {
                    return _0x35c7b4[_0x185fa7];
                });
                if (_0xa04d4f['join']('') !== '0123456789')
                    return ![];
                var _0x213498 = {};
                'abcdefghijklmnopqrst'['split']('')['forEach'](function (_0x4dded8) {
                    _0x213498[_0x4dded8] = _0x4dded8;
                });
                if (Object['keys'](Object['assign']({}, _0x213498))['join']('') !== 'abcdefghijklmnopqrst')
                    return ![];
                return !![];
            } catch (_0x209d54) {
                return ![];
            }
        }
        _0x549429['exports'] = _0x57a10d() ? Object['assign'] : function (_0x1242e8, _0x2543ec) {
            var _0x13fab8, _0x19c647 = _0xb349aa(_0x1242e8), _0x1aed89;
            for (var _0x49192c = 0x1; _0x49192c < arguments['length']; _0x49192c++) {
                _0x13fab8 = Object(arguments[_0x49192c]);
                for (var _0x935d4f in _0x13fab8) {
                    _0x156205['call'](_0x13fab8, _0x935d4f) && (_0x19c647[_0x935d4f] = _0x13fab8[_0x935d4f]);
                }
                if (_0x5f5216) {
                    _0x1aed89 = _0x5f5216(_0x13fab8);
                    for (var _0xdd5820 = 0x0; _0xdd5820 < _0x1aed89['length']; _0xdd5820++) {
                        _0x259290['call'](_0x13fab8, _0x1aed89[_0xdd5820]) && (_0x19c647[_0x1aed89[_0xdd5820]] = _0x13fab8[_0x1aed89[_0xdd5820]]);
                    }
                }
            }
            return _0x19c647;
        };
    },
    0xa6fa: _0x3cee80 => {
        let _0x3a2537;
        _0x3cee80['exports'] = typeof queueMicrotask === 'function' ? queueMicrotask['bind'](typeof window !== 'undefined' ? window : global) : _0xe91766 => (_0x3a2537 || (_0x3a2537 = Promise['resolve']()))['then'](_0xe91766)['catch'](_0x581e55 => setTimeout(() => {
            throw _0x581e55;
        }, 0x0));
    },
    0x13377: _0xbd9ac0 => {
        'use strict';
        function _0x323d16(_0x51c147) {
            var _0x2d5e1e = new _0x51c147(), _0x2174bf = _0x2d5e1e;
            function _0x274f97() {
                var _0x49ab13 = _0x2d5e1e;
                return _0x49ab13['next'] ? _0x2d5e1e = _0x49ab13['next'] : (_0x2d5e1e = new _0x51c147(), _0x2174bf = _0x2d5e1e), _0x49ab13['next'] = null, _0x49ab13;
            }
            function _0x1bddec(_0x5031a2) {
                _0x2174bf['next'] = _0x5031a2, _0x2174bf = _0x5031a2;
            }
            return {
                'get': _0x274f97,
                'release': _0x1bddec
            };
        }
        _0xbd9ac0['exports'] = _0x323d16;
    },
    0xb509: (_0x36b709, _0x3b7f41, _0x44d964) => {
        'use strict';
        Object['defineProperty'](_0x3b7f41, '__esModule', { 'value': !![] }), _0x3b7f41['Adapter'] = void 0x0;
        const _0xda4719 = _0x44d964(0x141b9);
        class _0x5da189 extends _0xda4719['EventEmitter'] {
            constructor(_0x396239) {
                super(), this['nsp'] = _0x396239, this['rooms'] = new Map(), this['sids'] = new Map(), this['encoder'] = _0x396239['server']['encoder'];
            }
            ['init']() {
            }
            ['close']() {
            }
            ['serverCount']() {
                return Promise['resolve'](0x1);
            }
            ['addAll'](_0x31596b, _0x266ae1) {
                !this['sids']['has'](_0x31596b) && this['sids']['set'](_0x31596b, new Set());
                for (const _0x511073 of _0x266ae1) {
                    this['sids']['get'](_0x31596b)['add'](_0x511073), !this['rooms']['has'](_0x511073) && (this['rooms']['set'](_0x511073, new Set()), this['emit']('create-room', _0x511073)), !this['rooms']['get'](_0x511073)['has'](_0x31596b) && (this['rooms']['get'](_0x511073)['add'](_0x31596b), this['emit']('join-room', _0x511073, _0x31596b));
                }
            }
            ['del'](_0x26522f, _0x43c68c) {
                this['sids']['has'](_0x26522f) && this['sids']['get'](_0x26522f)['delete'](_0x43c68c), this['_del'](_0x43c68c, _0x26522f);
            }
            ['_del'](_0x29eead, _0x3cafc3) {
                const _0x588978 = this['rooms']['get'](_0x29eead);
                if (_0x588978 != null) {
                    const _0x39e55c = _0x588978['delete'](_0x3cafc3);
                    _0x39e55c && this['emit']('leave-room', _0x29eead, _0x3cafc3), _0x588978['size'] === 0x0 && this['rooms']['delete'](_0x29eead) && this['emit']('delete-room', _0x29eead);
                }
            }
            ['delAll'](_0x257e7c) {
                if (!this['sids']['has'](_0x257e7c))
                    return;
                for (const _0x31a7f6 of this['sids']['get'](_0x257e7c)) {
                    this['_del'](_0x31a7f6, _0x257e7c);
                }
                this['sids']['delete'](_0x257e7c);
            }
            ['broadcast'](_0x3f3e60, _0x59e916) {
                const _0x1a1079 = _0x59e916['flags'] || {}, _0x5cbc25 = {
                        'preEncoded': !![],
                        'volatile': _0x1a1079['volatile'],
                        'compress': _0x1a1079['compress']
                    };
                _0x3f3e60['nsp'] = this['nsp']['name'];
                const _0x30fe27 = this['encoder']['encode'](_0x3f3e60);
                this['apply'](_0x59e916, _0x465360 => {
                    typeof _0x465360['notifyOutgoingListeners'] === 'function' && _0x465360['notifyOutgoingListeners'](_0x3f3e60), _0x465360['client']['writeToEngine'](_0x30fe27, _0x5cbc25);
                });
            }
            ['broadcastWithAck'](_0x3b5bd8, _0x29d1dd, _0x102b6a, _0x25e564) {
                const _0xc7a291 = _0x29d1dd['flags'] || {}, _0x555c9d = {
                        'preEncoded': !![],
                        'volatile': _0xc7a291['volatile'],
                        'compress': _0xc7a291['compress']
                    };
                _0x3b5bd8['nsp'] = this['nsp']['name'], _0x3b5bd8['id'] = this['nsp']['_ids']++;
                const _0x342cf9 = this['encoder']['encode'](_0x3b5bd8);
                let _0x3e6793 = 0x0;
                this['apply'](_0x29d1dd, _0x5c6b21 => {
                    _0x3e6793++, _0x5c6b21['acks']['set'](_0x3b5bd8['id'], _0x25e564), typeof _0x5c6b21['notifyOutgoingListeners'] === 'function' && _0x5c6b21['notifyOutgoingListeners'](_0x3b5bd8), _0x5c6b21['client']['writeToEngine'](_0x342cf9, _0x555c9d);
                }), _0x102b6a(_0x3e6793);
            }
            ['sockets'](_0x52debc) {
                const _0x2248a2 = new Set();
                return this['apply']({ 'rooms': _0x52debc }, _0x1954c6 => {
                    _0x2248a2['add'](_0x1954c6['id']);
                }), Promise['resolve'](_0x2248a2);
            }
            ['socketRooms'](_0xf869c3) {
                return this['sids']['get'](_0xf869c3);
            }
            ['fetchSockets'](_0xac2ba8) {
                const _0x5b62d0 = [];
                return this['apply'](_0xac2ba8, _0x35e48e => {
                    _0x5b62d0['push'](_0x35e48e);
                }), Promise['resolve'](_0x5b62d0);
            }
            ['addSockets'](_0x4a0a63, _0x22b960) {
                this['apply'](_0x4a0a63, _0x5e428f => {
                    _0x5e428f['join'](_0x22b960);
                });
            }
            ['delSockets'](_0x112cd0, _0x21474e) {
                this['apply'](_0x112cd0, _0x1bd830 => {
                    _0x21474e['forEach'](_0x2b1607 => _0x1bd830['leave'](_0x2b1607));
                });
            }
            ['disconnectSockets'](_0xd896b2, _0x43b3b1) {
                this['apply'](_0xd896b2, _0x299435 => {
                    _0x299435['disconnect'](_0x43b3b1);
                });
            }
            ['apply'](_0x34f73f, _0xdb21be) {
                const _0x112969 = _0x34f73f['rooms'], _0x467fb8 = this['computeExceptSids'](_0x34f73f['except']);
                if (_0x112969['size']) {
                    const _0x3726ea = new Set();
                    for (const _0x21f3aa of _0x112969) {
                        if (!this['rooms']['has'](_0x21f3aa))
                            continue;
                        for (const _0x39268a of this['rooms']['get'](_0x21f3aa)) {
                            if (_0x3726ea['has'](_0x39268a) || _0x467fb8['has'](_0x39268a))
                                continue;
                            const _0x22d3cd = this['nsp']['sockets']['get'](_0x39268a);
                            _0x22d3cd && (_0xdb21be(_0x22d3cd), _0x3726ea['add'](_0x39268a));
                        }
                    }
                } else
                    for (const [_0x5a1fd0] of this['sids']) {
                        if (_0x467fb8['has'](_0x5a1fd0))
                            continue;
                        const _0x5d9fb6 = this['nsp']['sockets']['get'](_0x5a1fd0);
                        if (_0x5d9fb6)
                            _0xdb21be(_0x5d9fb6);
                    }
            }
            ['computeExceptSids'](_0x187fd0) {
                const _0x1653c5 = new Set();
                if (_0x187fd0 && _0x187fd0['size'] > 0x0)
                    for (const _0x1b1aed of _0x187fd0) {
                        this['rooms']['has'](_0x1b1aed) && this['rooms']['get'](_0x1b1aed)['forEach'](_0x300fbe => _0x1653c5['add'](_0x300fbe));
                    }
                return _0x1653c5;
            }
            ['serverSideEmit'](_0x1867ef) {
                console['warn']('this\x20adapter\x20does\x20not\x20support\x20the\x20serverSideEmit()\x20functionality');
            }
        }
        _0x3b7f41['Adapter'] = _0x5da189;
    },
    0x3ef: (_0x9fff2, _0x24bfb9, _0x123701) => {
        'use strict';
        Object['defineProperty'](_0x24bfb9, '__esModule', { 'value': !![] }), _0x24bfb9['reconstructPacket'] = _0x24bfb9['deconstructPacket'] = void 0x0;
        const _0x2e605d = _0x123701(0x359);
        function _0x273a52(_0xaefa30) {
            const _0x2960b2 = [], _0x32f226 = _0xaefa30['data'], _0x2618bf = _0xaefa30;
            return _0x2618bf['data'] = _0x4b43b6(_0x32f226, _0x2960b2), _0x2618bf['attachments'] = _0x2960b2['length'], {
                'packet': _0x2618bf,
                'buffers': _0x2960b2
            };
        }
        _0x24bfb9['deconstructPacket'] = _0x273a52;
        function _0x4b43b6(_0x4fe7e0, _0xaa08d2) {
            if (!_0x4fe7e0)
                return _0x4fe7e0;
            if (_0x2e605d['isBinary'](_0x4fe7e0)) {
                const _0x5dd75d = {
                    '_placeholder': !![],
                    'num': _0xaa08d2['length']
                };
                return _0xaa08d2['push'](_0x4fe7e0), _0x5dd75d;
            } else {
                if (Array['isArray'](_0x4fe7e0)) {
                    const _0x332401 = new Array(_0x4fe7e0['length']);
                    for (let _0x235127 = 0x0; _0x235127 < _0x4fe7e0['length']; _0x235127++) {
                        _0x332401[_0x235127] = _0x4b43b6(_0x4fe7e0[_0x235127], _0xaa08d2);
                    }
                    return _0x332401;
                } else {
                    if (typeof _0x4fe7e0 === 'object' && !(_0x4fe7e0 instanceof Date)) {
                        const _0x20c31c = {};
                        for (const _0x1e2a33 in _0x4fe7e0) {
                            _0x4fe7e0['hasOwnProperty'](_0x1e2a33) && (_0x20c31c[_0x1e2a33] = _0x4b43b6(_0x4fe7e0[_0x1e2a33], _0xaa08d2));
                        }
                        return _0x20c31c;
                    }
                }
            }
            return _0x4fe7e0;
        }
        function _0x50cb81(_0x4f4e73, _0x218ddc) {
            return _0x4f4e73['data'] = _0x4f0bfe(_0x4f4e73['data'], _0x218ddc), _0x4f4e73['attachments'] = undefined, _0x4f4e73;
        }
        _0x24bfb9['reconstructPacket'] = _0x50cb81;
        function _0x4f0bfe(_0x191706, _0x2096c3) {
            if (!_0x191706)
                return _0x191706;
            if (_0x191706 && _0x191706['_placeholder'])
                return _0x2096c3[_0x191706['num']];
            else {
                if (Array['isArray'](_0x191706))
                    for (let _0xacddb4 = 0x0; _0xacddb4 < _0x191706['length']; _0xacddb4++) {
                        _0x191706[_0xacddb4] = _0x4f0bfe(_0x191706[_0xacddb4], _0x2096c3);
                    }
                else {
                    if (typeof _0x191706 === 'object')
                        for (const _0xd4203 in _0x191706) {
                            _0x191706['hasOwnProperty'](_0xd4203) && (_0x191706[_0xd4203] = _0x4f0bfe(_0x191706[_0xd4203], _0x2096c3));
                        }
                }
            }
            return _0x191706;
        }
    },
    0x7dc: (_0x27cbde, _0x101f80, _0x47609d) => {
        'use strict';
        Object['defineProperty'](_0x101f80, '__esModule', { 'value': !![] }), _0x101f80['Decoder'] = _0x101f80['Encoder'] = _0x101f80['PacketType'] = _0x101f80['protocol'] = void 0x0;
        const _0x268b1e = _0x47609d(0x3a3b), _0x28e3f0 = _0x47609d(0x3ef), _0x5d6526 = _0x47609d(0x359), _0x1c3744 = _0x47609d(0x566b)('socket.io-parser');
        _0x101f80['protocol'] = 0x5;
        var _0x2dc856;
        (function (_0x48c608) {
            _0x48c608[_0x48c608['CONNECT'] = 0x0] = 'CONNECT', _0x48c608[_0x48c608['DISCONNECT'] = 0x1] = 'DISCONNECT', _0x48c608[_0x48c608['EVENT'] = 0x2] = 'EVENT', _0x48c608[_0x48c608['ACK'] = 0x3] = 'ACK', _0x48c608[_0x48c608['CONNECT_ERROR'] = 0x4] = 'CONNECT_ERROR', _0x48c608[_0x48c608['BINARY_EVENT'] = 0x5] = 'BINARY_EVENT', _0x48c608[_0x48c608['BINARY_ACK'] = 0x6] = 'BINARY_ACK';
        }(_0x2dc856 = _0x101f80['PacketType'] || (_0x101f80['PacketType'] = {})));
        class _0x1e8bf3 {
            ['encode'](_0x498944) {
                _0x1c3744('encoding\x20packet\x20%j', _0x498944);
                if (_0x498944['type'] === _0x2dc856['EVENT'] || _0x498944['type'] === _0x2dc856['ACK']) {
                    if (_0x5d6526['hasBinary'](_0x498944))
                        return _0x498944['type'] = _0x498944['type'] === _0x2dc856['EVENT'] ? _0x2dc856['BINARY_EVENT'] : _0x2dc856['BINARY_ACK'], this['encodeAsBinary'](_0x498944);
                }
                return [this['encodeAsString'](_0x498944)];
            }
            ['encodeAsString'](_0x3a7119) {
                let _0x390865 = '' + _0x3a7119['type'];
                return (_0x3a7119['type'] === _0x2dc856['BINARY_EVENT'] || _0x3a7119['type'] === _0x2dc856['BINARY_ACK']) && (_0x390865 += _0x3a7119['attachments'] + '-'), _0x3a7119['nsp'] && '/' !== _0x3a7119['nsp'] && (_0x390865 += _0x3a7119['nsp'] + ','), null != _0x3a7119['id'] && (_0x390865 += _0x3a7119['id']), null != _0x3a7119['data'] && (_0x390865 += JSON['stringify'](_0x3a7119['data'])), _0x1c3744('encoded\x20%j\x20as\x20%s', _0x3a7119, _0x390865), _0x390865;
            }
            ['encodeAsBinary'](_0x304a9b) {
                const _0x2e52f1 = _0x28e3f0['deconstructPacket'](_0x304a9b), _0x463ae2 = this['encodeAsString'](_0x2e52f1['packet']), _0x350918 = _0x2e52f1['buffers'];
                return _0x350918['unshift'](_0x463ae2), _0x350918;
            }
        }
        _0x101f80['Encoder'] = _0x1e8bf3;
        class _0xa973b2 extends _0x268b1e {
            constructor() {
                super();
            }
            ['add'](_0xbb0aa4) {
                let _0x5b99a6;
                if (typeof _0xbb0aa4 === 'string')
                    _0x5b99a6 = this['decodeString'](_0xbb0aa4), _0x5b99a6['type'] === _0x2dc856['BINARY_EVENT'] || _0x5b99a6['type'] === _0x2dc856['BINARY_ACK'] ? (this['reconstructor'] = new _0x4f0056(_0x5b99a6), _0x5b99a6['attachments'] === 0x0 && super['emit']('decoded', _0x5b99a6)) : super['emit']('decoded', _0x5b99a6);
                else {
                    if (_0x5d6526['isBinary'](_0xbb0aa4) || _0xbb0aa4['base64']) {
                        if (!this['reconstructor'])
                            throw new Error('got\x20binary\x20data\x20when\x20not\x20reconstructing\x20a\x20packet');
                        else
                            _0x5b99a6 = this['reconstructor']['takeBinaryData'](_0xbb0aa4), _0x5b99a6 && (this['reconstructor'] = null, super['emit']('decoded', _0x5b99a6));
                    } else
                        throw new Error('Unknown\x20type:\x20' + _0xbb0aa4);
                }
            }
            ['decodeString'](_0x2c887f) {
                let _0x5b591c = 0x0;
                const _0x24692e = { 'type': Number(_0x2c887f['charAt'](0x0)) };
                if (_0x2dc856[_0x24692e['type']] === undefined)
                    throw new Error('unknown\x20packet\x20type\x20' + _0x24692e['type']);
                if (_0x24692e['type'] === _0x2dc856['BINARY_EVENT'] || _0x24692e['type'] === _0x2dc856['BINARY_ACK']) {
                    const _0x24f893 = _0x5b591c + 0x1;
                    while (_0x2c887f['charAt'](++_0x5b591c) !== '-' && _0x5b591c != _0x2c887f['length']) {
                    }
                    const _0x36f6ed = _0x2c887f['substring'](_0x24f893, _0x5b591c);
                    if (_0x36f6ed != Number(_0x36f6ed) || _0x2c887f['charAt'](_0x5b591c) !== '-')
                        throw new Error('Illegal\x20attachments');
                    _0x24692e['attachments'] = Number(_0x36f6ed);
                }
                if ('/' === _0x2c887f['charAt'](_0x5b591c + 0x1)) {
                    const _0x7c84d1 = _0x5b591c + 0x1;
                    while (++_0x5b591c) {
                        const _0x550f08 = _0x2c887f['charAt'](_0x5b591c);
                        if (',' === _0x550f08)
                            break;
                        if (_0x5b591c === _0x2c887f['length'])
                            break;
                    }
                    _0x24692e['nsp'] = _0x2c887f['substring'](_0x7c84d1, _0x5b591c);
                } else
                    _0x24692e['nsp'] = '/';
                const _0x50c04a = _0x2c887f['charAt'](_0x5b591c + 0x1);
                if ('' !== _0x50c04a && Number(_0x50c04a) == _0x50c04a) {
                    const _0x39fbb8 = _0x5b591c + 0x1;
                    while (++_0x5b591c) {
                        const _0x28229d = _0x2c887f['charAt'](_0x5b591c);
                        if (null == _0x28229d || Number(_0x28229d) != _0x28229d) {
                            --_0x5b591c;
                            break;
                        }
                        if (_0x5b591c === _0x2c887f['length'])
                            break;
                    }
                    _0x24692e['id'] = Number(_0x2c887f['substring'](_0x39fbb8, _0x5b591c + 0x1));
                }
                if (_0x2c887f['charAt'](++_0x5b591c)) {
                    const _0x89ee14 = _0x5b0abe(_0x2c887f['substr'](_0x5b591c));
                    if (_0xa973b2['isPayloadValid'](_0x24692e['type'], _0x89ee14))
                        _0x24692e['data'] = _0x89ee14;
                    else
                        throw new Error('invalid\x20payload');
                }
                return _0x1c3744('decoded\x20%s\x20as\x20%j', _0x2c887f, _0x24692e), _0x24692e;
            }
            static ['isPayloadValid'](_0x3d1022, _0x56a7f7) {
                switch (_0x3d1022) {
                case _0x2dc856['CONNECT']:
                    return typeof _0x56a7f7 === 'object';
                case _0x2dc856['DISCONNECT']:
                    return _0x56a7f7 === undefined;
                case _0x2dc856['CONNECT_ERROR']:
                    return typeof _0x56a7f7 === 'string' || typeof _0x56a7f7 === 'object';
                case _0x2dc856['EVENT']:
                case _0x2dc856['BINARY_EVENT']:
                    return Array['isArray'](_0x56a7f7) && _0x56a7f7['length'] > 0x0;
                case _0x2dc856['ACK']:
                case _0x2dc856['BINARY_ACK']:
                    return Array['isArray'](_0x56a7f7);
                }
            }
            ['destroy']() {
                this['reconstructor'] && this['reconstructor']['finishedReconstruction']();
            }
        }
        _0x101f80['Decoder'] = _0xa973b2;
        function _0x5b0abe(_0x349539) {
            try {
                return JSON['parse'](_0x349539);
            } catch (_0x4ab49e) {
                return ![];
            }
        }
        class _0x4f0056 {
            constructor(_0x5baa0b) {
                this['packet'] = _0x5baa0b, this['buffers'] = [], this['reconPack'] = _0x5baa0b;
            }
            ['takeBinaryData'](_0x103ae3) {
                this['buffers']['push'](_0x103ae3);
                if (this['buffers']['length'] === this['reconPack']['attachments']) {
                    const _0x18500e = _0x28e3f0['reconstructPacket'](this['reconPack'], this['buffers']);
                    return this['finishedReconstruction'](), _0x18500e;
                }
                return null;
            }
            ['finishedReconstruction']() {
                this['reconPack'] = null, this['buffers'] = [];
            }
        }
    },
    0x359: (_0x21a26a, _0x58eaf5) => {
        'use strict';
        Object['defineProperty'](_0x58eaf5, '__esModule', { 'value': !![] }), _0x58eaf5['hasBinary'] = _0x58eaf5['isBinary'] = void 0x0;
        const _0x4ced40 = typeof ArrayBuffer === 'function', _0xa5bc58 = _0x4aef70 => {
                return typeof ArrayBuffer['isView'] === 'function' ? ArrayBuffer['isView'](_0x4aef70) : _0x4aef70['buffer'] instanceof ArrayBuffer;
            }, _0x270c3d = Object['prototype']['toString'], _0x30844f = typeof Blob === 'function' || typeof Blob !== 'undefined' && _0x270c3d['call'](Blob) === '[object\x20BlobConstructor]', _0x1fb782 = typeof File === 'function' || typeof File !== 'undefined' && _0x270c3d['call'](File) === '[object\x20FileConstructor]';
        function _0x69e00(_0x5c9502) {
            return _0x4ced40 && (_0x5c9502 instanceof ArrayBuffer || _0xa5bc58(_0x5c9502)) || _0x30844f && _0x5c9502 instanceof Blob || _0x1fb782 && _0x5c9502 instanceof File;
        }
        _0x58eaf5['isBinary'] = _0x69e00;
        function _0x38c926(_0x327a5e, _0x423bb7) {
            if (!_0x327a5e || typeof _0x327a5e !== 'object')
                return ![];
            if (Array['isArray'](_0x327a5e)) {
                for (let _0x1ecbbf = 0x0, _0x5abc35 = _0x327a5e['length']; _0x1ecbbf < _0x5abc35; _0x1ecbbf++) {
                    if (_0x38c926(_0x327a5e[_0x1ecbbf]))
                        return !![];
                }
                return ![];
            }
            if (_0x69e00(_0x327a5e))
                return !![];
            if (_0x327a5e['toJSON'] && typeof _0x327a5e['toJSON'] === 'function' && arguments['length'] === 0x1)
                return _0x38c926(_0x327a5e['toJSON'](), !![]);
            for (const _0x3be60b in _0x327a5e) {
                if (Object['prototype']['hasOwnProperty']['call'](_0x327a5e, _0x3be60b) && _0x38c926(_0x327a5e[_0x3be60b]))
                    return !![];
            }
            return ![];
        }
        _0x58eaf5['hasBinary'] = _0x38c926;
    },
    0x844b: _0xcfedc => {
        'use strict';
        function _0x2adfbb(_0x2031f2) {
            const _0x51fe88 = _0x2031f2['length'];
            let _0x3b7588 = 0x0;
            while (_0x3b7588 < _0x51fe88) {
                if ((_0x2031f2[_0x3b7588] & 0x80) === 0x0)
                    _0x3b7588++;
                else {
                    if ((_0x2031f2[_0x3b7588] & 0xe0) === 0xc0) {
                        if (_0x3b7588 + 0x1 === _0x51fe88 || (_0x2031f2[_0x3b7588 + 0x1] & 0xc0) !== 0x80 || (_0x2031f2[_0x3b7588] & 0xfe) === 0xc0)
                            return ![];
                        _0x3b7588 += 0x2;
                    } else {
                        if ((_0x2031f2[_0x3b7588] & 0xf0) === 0xe0) {
                            if (_0x3b7588 + 0x2 >= _0x51fe88 || (_0x2031f2[_0x3b7588 + 0x1] & 0xc0) !== 0x80 || (_0x2031f2[_0x3b7588 + 0x2] & 0xc0) !== 0x80 || _0x2031f2[_0x3b7588] === 0xe0 && (_0x2031f2[_0x3b7588 + 0x1] & 0xe0) === 0x80 || _0x2031f2[_0x3b7588] === 0xed && (_0x2031f2[_0x3b7588 + 0x1] & 0xe0) === 0xa0)
                                return ![];
                            _0x3b7588 += 0x3;
                        } else {
                            if ((_0x2031f2[_0x3b7588] & 0xf8) === 0xf0) {
                                if (_0x3b7588 + 0x3 >= _0x51fe88 || (_0x2031f2[_0x3b7588 + 0x1] & 0xc0) !== 0x80 || (_0x2031f2[_0x3b7588 + 0x2] & 0xc0) !== 0x80 || (_0x2031f2[_0x3b7588 + 0x3] & 0xc0) !== 0x80 || _0x2031f2[_0x3b7588] === 0xf0 && (_0x2031f2[_0x3b7588 + 0x1] & 0xf0) === 0x80 || _0x2031f2[_0x3b7588] === 0xf4 && _0x2031f2[_0x3b7588 + 0x1] > 0x8f || _0x2031f2[_0x3b7588] > 0xf4)
                                    return ![];
                                _0x3b7588 += 0x4;
                            } else
                                return ![];
                        }
                    }
                }
            }
            return !![];
        }
        _0xcfedc['exports'] = _0x2adfbb;
    },
    0x8f6f: (_0x120be1, _0x522b78, _0x5e9363) => {
        'use strict';
        try {
            _0x120be1['exports'] = _0x5e9363(0x4458)(__dirname);
        } catch (_0x503f1a) {
            _0x120be1['exports'] = _0x5e9363(0x844b);
        }
    },
    0x56ef: _0x100887 => {
        'use strict';
        _0x100887['exports'] = _0x4348cf, _0x100887['exports']['append'] = _0x5bcf3d;
        var _0x4e7175 = /^[!#$%&'*+\-.^_`|~0-9A-Za-z]+$/;
        function _0x5bcf3d(_0x8da4d5, _0x571c2c) {
            if (typeof _0x8da4d5 !== 'string')
                throw new TypeError('header\x20argument\x20is\x20required');
            if (!_0x571c2c)
                throw new TypeError('field\x20argument\x20is\x20required');
            var _0x33af09 = !Array['isArray'](_0x571c2c) ? _0x1c2d02(String(_0x571c2c)) : _0x571c2c;
            for (var _0x55ae71 = 0x0; _0x55ae71 < _0x33af09['length']; _0x55ae71++) {
                if (!_0x4e7175['test'](_0x33af09[_0x55ae71]))
                    throw new TypeError('field\x20argument\x20contains\x20an\x20invalid\x20header\x20name');
            }
            if (_0x8da4d5 === '*')
                return _0x8da4d5;
            var _0x1b04e1 = _0x8da4d5, _0x3a0bfe = _0x1c2d02(_0x8da4d5['toLowerCase']());
            if (_0x33af09['indexOf']('*') !== -0x1 || _0x3a0bfe['indexOf']('*') !== -0x1)
                return '*';
            for (var _0x53be89 = 0x0; _0x53be89 < _0x33af09['length']; _0x53be89++) {
                var _0x103845 = _0x33af09[_0x53be89]['toLowerCase']();
                _0x3a0bfe['indexOf'](_0x103845) === -0x1 && (_0x3a0bfe['push'](_0x103845), _0x1b04e1 = _0x1b04e1 ? _0x1b04e1 + ',\x20' + _0x33af09[_0x53be89] : _0x33af09[_0x53be89]);
            }
            return _0x1b04e1;
        }
        function _0x1c2d02(_0x33c857) {
            var _0x52b59a = 0x0, _0x286ae9 = [], _0x4a1e6e = 0x0;
            for (var _0x5f4ce3 = 0x0, _0x39e01a = _0x33c857['length']; _0x5f4ce3 < _0x39e01a; _0x5f4ce3++) {
                switch (_0x33c857['charCodeAt'](_0x5f4ce3)) {
                case 0x20:
                    _0x4a1e6e === _0x52b59a && (_0x4a1e6e = _0x52b59a = _0x5f4ce3 + 0x1);
                    break;
                case 0x2c:
                    _0x286ae9['push'](_0x33c857['substring'](_0x4a1e6e, _0x52b59a)), _0x4a1e6e = _0x52b59a = _0x5f4ce3 + 0x1;
                    break;
                default:
                    _0x52b59a = _0x5f4ce3 + 0x1;
                    break;
                }
            }
            return _0x286ae9['push'](_0x33c857['substring'](_0x4a1e6e, _0x52b59a)), _0x286ae9;
        }
        function _0x4348cf(_0x2b53e7, _0x3732fc) {
            if (!_0x2b53e7 || !_0x2b53e7['getHeader'] || !_0x2b53e7['setHeader'])
                throw new TypeError('res\x20argument\x20is\x20required');
            var _0x33d096 = _0x2b53e7['getHeader']('Vary') || '', _0x215350 = Array['isArray'](_0x33d096) ? _0x33d096['join'](',\x20') : String(_0x33d096);
            (_0x33d096 = _0x5bcf3d(_0x215350, _0x3732fc)) && _0x2b53e7['setHeader']('Vary', _0x33d096);
        }
    },
    0xe61c: (_0x12ac90, _0x13123e, _0x510e59) => {
        'use strict';
        const _0xb0e0b9 = _0x510e59(0x1088f);
        _0xb0e0b9['createWebSocketStream'] = _0x510e59(0x166ed), _0xb0e0b9['Server'] = _0x510e59(0xd5e0), _0xb0e0b9['Receiver'] = _0x510e59(0xf0a3), _0xb0e0b9['Sender'] = _0x510e59(0x11ed9), _0xb0e0b9['WebSocket'] = _0xb0e0b9, _0xb0e0b9['WebSocketServer'] = _0xb0e0b9['Server'], _0x12ac90['exports'] = _0xb0e0b9;
    },
    0x1206a: (_0x159169, _0x5807fd, _0xba9caa) => {
        'use strict';
        const {EMPTY_BUFFER: _0x9433d8} = _0xba9caa(0x9d6d);
        function _0x2b44cd(_0x35248e, _0x2f72a6) {
            if (_0x35248e['length'] === 0x0)
                return _0x9433d8;
            if (_0x35248e['length'] === 0x1)
                return _0x35248e[0x0];
            const _0x2b73bf = Buffer['allocUnsafe'](_0x2f72a6);
            let _0x3a5e4c = 0x0;
            for (let _0x28ca8e = 0x0; _0x28ca8e < _0x35248e['length']; _0x28ca8e++) {
                const _0x3f06ad = _0x35248e[_0x28ca8e];
                _0x2b73bf['set'](_0x3f06ad, _0x3a5e4c), _0x3a5e4c += _0x3f06ad['length'];
            }
            if (_0x3a5e4c < _0x2f72a6)
                return _0x2b73bf['slice'](0x0, _0x3a5e4c);
            return _0x2b73bf;
        }
        function _0x212961(_0x51b214, _0x46caf8, _0xaf4210, _0x3c1b2c, _0x2c4c8e) {
            for (let _0x4b369e = 0x0; _0x4b369e < _0x2c4c8e; _0x4b369e++) {
                _0xaf4210[_0x3c1b2c + _0x4b369e] = _0x51b214[_0x4b369e] ^ _0x46caf8[_0x4b369e & 0x3];
            }
        }
        function _0x4ac902(_0x1ad4fd, _0x1b4e24) {
            for (let _0x39b9c1 = 0x0; _0x39b9c1 < _0x1ad4fd['length']; _0x39b9c1++) {
                _0x1ad4fd[_0x39b9c1] ^= _0x1b4e24[_0x39b9c1 & 0x3];
            }
        }
        function _0x4db673(_0x3981d6) {
            if (_0x3981d6['byteLength'] === _0x3981d6['buffer']['byteLength'])
                return _0x3981d6['buffer'];
            return _0x3981d6['buffer']['slice'](_0x3981d6['byteOffset'], _0x3981d6['byteOffset'] + _0x3981d6['byteLength']);
        }
        function _0x27a2b4(_0x8bd3cf) {
            _0x27a2b4['readOnly'] = !![];
            if (Buffer['isBuffer'](_0x8bd3cf))
                return _0x8bd3cf;
            let _0x186778;
            if (_0x8bd3cf instanceof ArrayBuffer)
                _0x186778 = Buffer['from'](_0x8bd3cf);
            else
                ArrayBuffer['isView'](_0x8bd3cf) ? _0x186778 = Buffer['from'](_0x8bd3cf['buffer'], _0x8bd3cf['byteOffset'], _0x8bd3cf['byteLength']) : (_0x186778 = Buffer['from'](_0x8bd3cf), _0x27a2b4['readOnly'] = ![]);
            return _0x186778;
        }
        try {
            const _0x3cb717 = _0xba9caa(0x12373);
            _0x159169['exports'] = {
                'concat': _0x2b44cd,
                'mask'(_0x3279ab, _0x2ae59a, _0x5a3347, _0x14fd23, _0x8259ef) {
                    if (_0x8259ef < 0x30)
                        _0x212961(_0x3279ab, _0x2ae59a, _0x5a3347, _0x14fd23, _0x8259ef);
                    else
                        _0x3cb717['mask'](_0x3279ab, _0x2ae59a, _0x5a3347, _0x14fd23, _0x8259ef);
                },
                'toArrayBuffer': _0x4db673,
                'toBuffer': _0x27a2b4,
                'unmask'(_0x1687c2, _0x5469a7) {
                    if (_0x1687c2['length'] < 0x20)
                        _0x4ac902(_0x1687c2, _0x5469a7);
                    else
                        _0x3cb717['unmask'](_0x1687c2, _0x5469a7);
                }
            };
        } catch (_0x2ea933) {
            _0x159169['exports'] = {
                'concat': _0x2b44cd,
                'mask': _0x212961,
                'toArrayBuffer': _0x4db673,
                'toBuffer': _0x27a2b4,
                'unmask': _0x4ac902
            };
        }
    },
    0x9d6d: _0x255496 => {
        'use strict';
        _0x255496['exports'] = {
            'BINARY_TYPES': [
                'nodebuffer',
                'arraybuffer',
                'fragments'
            ],
            'EMPTY_BUFFER': Buffer['alloc'](0x0),
            'GUID': '258EAFA5-E914-47DA-95CA-C5AB0DC85B11',
            'kForOnEventAttribute': Symbol('kIsForOnEventAttribute'),
            'kListener': Symbol('kListener'),
            'kStatusCode': Symbol('status-code'),
            'kWebSocket': Symbol('websocket'),
            'NOOP': () => {
            }
        };
    },
    0x9695: (_0x32b18c, _0x5134e1, _0x5eb186) => {
        'use strict';
        const {
                kForOnEventAttribute: _0x1e2a52,
                kListener: _0x409c6a
            } = _0x5eb186(0x9d6d), _0x12c612 = Symbol('kCode'), _0x2c6dbc = Symbol('kData'), _0x220167 = Symbol('kError'), _0x208a70 = Symbol('kMessage'), _0x2bfb78 = Symbol('kReason'), _0x567981 = Symbol('kTarget'), _0x3f5b12 = Symbol('kType'), _0x4435e5 = Symbol('kWasClean');
        class _0x599531 {
            constructor(_0x5203cb) {
                this[_0x567981] = null, this[_0x3f5b12] = _0x5203cb;
            }
            get ['target']() {
                return this[_0x567981];
            }
            get ['type']() {
                return this[_0x3f5b12];
            }
        }
        Object['defineProperty'](_0x599531['prototype'], 'target', { 'enumerable': !![] }), Object['defineProperty'](_0x599531['prototype'], 'type', { 'enumerable': !![] });
        class _0x2650e8 extends _0x599531 {
            constructor(_0x3a0ca1, _0x27ad02 = {}) {
                super(_0x3a0ca1), this[_0x12c612] = _0x27ad02['code'] === undefined ? 0x0 : _0x27ad02['code'], this[_0x2bfb78] = _0x27ad02['reason'] === undefined ? '' : _0x27ad02['reason'], this[_0x4435e5] = _0x27ad02['wasClean'] === undefined ? ![] : _0x27ad02['wasClean'];
            }
            get ['code']() {
                return this[_0x12c612];
            }
            get ['reason']() {
                return this[_0x2bfb78];
            }
            get ['wasClean']() {
                return this[_0x4435e5];
            }
        }
        Object['defineProperty'](_0x2650e8['prototype'], 'code', { 'enumerable': !![] }), Object['defineProperty'](_0x2650e8['prototype'], 'reason', { 'enumerable': !![] }), Object['defineProperty'](_0x2650e8['prototype'], 'wasClean', { 'enumerable': !![] });
        class _0x290671 extends _0x599531 {
            constructor(_0x5a675f, _0x2c6b2f = {}) {
                super(_0x5a675f), this[_0x220167] = _0x2c6b2f['error'] === undefined ? null : _0x2c6b2f['error'], this[_0x208a70] = _0x2c6b2f['message'] === undefined ? '' : _0x2c6b2f['message'];
            }
            get ['error']() {
                return this[_0x220167];
            }
            get ['message']() {
                return this[_0x208a70];
            }
        }
        Object['defineProperty'](_0x290671['prototype'], 'error', { 'enumerable': !![] }), Object['defineProperty'](_0x290671['prototype'], 'message', { 'enumerable': !![] });
        class _0x302741 extends _0x599531 {
            constructor(_0x2ab7b6, _0x1dff74 = {}) {
                super(_0x2ab7b6), this[_0x2c6dbc] = _0x1dff74['data'] === undefined ? null : _0x1dff74['data'];
            }
            get ['data']() {
                return this[_0x2c6dbc];
            }
        }
        Object['defineProperty'](_0x302741['prototype'], 'data', { 'enumerable': !![] });
        const _0x109b63 = {
            'addEventListener'(_0xa32e09, _0x30ea83, _0x1fe8ce = {}) {
                let _0x292c38;
                if (_0xa32e09 === 'message')
                    _0x292c38 = function _0x5e3c8f(_0xad4faf, _0x175950) {
                        const _0x57fa20 = new _0x302741('message', { 'data': _0x175950 ? _0xad4faf : _0xad4faf['toString']() });
                        _0x57fa20[_0x567981] = this, _0x30ea83['call'](this, _0x57fa20);
                    };
                else {
                    if (_0xa32e09 === 'close')
                        _0x292c38 = function _0x210286(_0x3fa7cc, _0x314628) {
                            const _0x1927d6 = new _0x2650e8('close', {
                                'code': _0x3fa7cc,
                                'reason': _0x314628['toString'](),
                                'wasClean': this['_closeFrameReceived'] && this['_closeFrameSent']
                            });
                            _0x1927d6[_0x567981] = this, _0x30ea83['call'](this, _0x1927d6);
                        };
                    else {
                        if (_0xa32e09 === 'error')
                            _0x292c38 = function _0x5abea6(_0x416e6a) {
                                const _0x5422ac = new _0x290671('error', {
                                    'error': _0x416e6a,
                                    'message': _0x416e6a['message']
                                });
                                _0x5422ac[_0x567981] = this, _0x30ea83['call'](this, _0x5422ac);
                            };
                        else {
                            if (_0xa32e09 === 'open')
                                _0x292c38 = function _0x18e4f2() {
                                    const _0x41b95d = new _0x599531('open');
                                    _0x41b95d[_0x567981] = this, _0x30ea83['call'](this, _0x41b95d);
                                };
                            else
                                return;
                        }
                    }
                }
                _0x292c38[_0x1e2a52] = !!_0x1fe8ce[_0x1e2a52], _0x292c38[_0x409c6a] = _0x30ea83, _0x1fe8ce['once'] ? this['once'](_0xa32e09, _0x292c38) : this['on'](_0xa32e09, _0x292c38);
            },
            'removeEventListener'(_0x5ca128, _0x356915) {
                for (const _0x36ac5e of this['listeners'](_0x5ca128)) {
                    if (_0x36ac5e[_0x409c6a] === _0x356915 && !_0x36ac5e[_0x1e2a52]) {
                        this['removeListener'](_0x5ca128, _0x36ac5e);
                        break;
                    }
                }
            }
        };
        _0x32b18c['exports'] = {
            'CloseEvent': _0x2650e8,
            'ErrorEvent': _0x290671,
            'Event': _0x599531,
            'EventTarget': _0x109b63,
            'MessageEvent': _0x302741
        };
    },
    0x11319: (_0x1ba02a, _0x5640d4, _0x30ea47) => {
        'use strict';
        const {tokenChars: _0x44f8a4} = _0x30ea47(0x1845);
        function _0x27b4d2(_0x4351b1, _0x20708a, _0x1ca315) {
            if (_0x4351b1[_0x20708a] === undefined)
                _0x4351b1[_0x20708a] = [_0x1ca315];
            else
                _0x4351b1[_0x20708a]['push'](_0x1ca315);
        }
        function _0x58e1c6(_0x248cfd) {
            const _0x37a477 = Object['create'](null);
            let _0x492b0d = Object['create'](null), _0x5d7736 = ![], _0x3bf5c8 = ![], _0x34c3cf = ![], _0x4c013a, _0x5ba618, _0x2489a4 = -0x1, _0x368f39 = -0x1, _0x10bf15 = -0x1, _0x3f6c3f = 0x0;
            for (; _0x3f6c3f < _0x248cfd['length']; _0x3f6c3f++) {
                _0x368f39 = _0x248cfd['charCodeAt'](_0x3f6c3f);
                if (_0x4c013a === undefined) {
                    if (_0x10bf15 === -0x1 && _0x44f8a4[_0x368f39] === 0x1) {
                        if (_0x2489a4 === -0x1)
                            _0x2489a4 = _0x3f6c3f;
                    } else {
                        if (_0x3f6c3f !== 0x0 && (_0x368f39 === 0x20 || _0x368f39 === 0x9)) {
                            if (_0x10bf15 === -0x1 && _0x2489a4 !== -0x1)
                                _0x10bf15 = _0x3f6c3f;
                        } else {
                            if (_0x368f39 === 0x3b || _0x368f39 === 0x2c) {
                                if (_0x2489a4 === -0x1)
                                    throw new SyntaxError('Unexpected\x20character\x20at\x20index\x20' + _0x3f6c3f);
                                if (_0x10bf15 === -0x1)
                                    _0x10bf15 = _0x3f6c3f;
                                const _0x13d46e = _0x248cfd['slice'](_0x2489a4, _0x10bf15);
                                _0x368f39 === 0x2c ? (_0x27b4d2(_0x37a477, _0x13d46e, _0x492b0d), _0x492b0d = Object['create'](null)) : _0x4c013a = _0x13d46e, _0x2489a4 = _0x10bf15 = -0x1;
                            } else
                                throw new SyntaxError('Unexpected\x20character\x20at\x20index\x20' + _0x3f6c3f);
                        }
                    }
                } else {
                    if (_0x5ba618 === undefined) {
                        if (_0x10bf15 === -0x1 && _0x44f8a4[_0x368f39] === 0x1) {
                            if (_0x2489a4 === -0x1)
                                _0x2489a4 = _0x3f6c3f;
                        } else {
                            if (_0x368f39 === 0x20 || _0x368f39 === 0x9) {
                                if (_0x10bf15 === -0x1 && _0x2489a4 !== -0x1)
                                    _0x10bf15 = _0x3f6c3f;
                            } else {
                                if (_0x368f39 === 0x3b || _0x368f39 === 0x2c) {
                                    if (_0x2489a4 === -0x1)
                                        throw new SyntaxError('Unexpected\x20character\x20at\x20index\x20' + _0x3f6c3f);
                                    if (_0x10bf15 === -0x1)
                                        _0x10bf15 = _0x3f6c3f;
                                    _0x27b4d2(_0x492b0d, _0x248cfd['slice'](_0x2489a4, _0x10bf15), !![]), _0x368f39 === 0x2c && (_0x27b4d2(_0x37a477, _0x4c013a, _0x492b0d), _0x492b0d = Object['create'](null), _0x4c013a = undefined), _0x2489a4 = _0x10bf15 = -0x1;
                                } else {
                                    if (_0x368f39 === 0x3d && _0x2489a4 !== -0x1 && _0x10bf15 === -0x1)
                                        _0x5ba618 = _0x248cfd['slice'](_0x2489a4, _0x3f6c3f), _0x2489a4 = _0x10bf15 = -0x1;
                                    else
                                        throw new SyntaxError('Unexpected\x20character\x20at\x20index\x20' + _0x3f6c3f);
                                }
                            }
                        }
                    } else {
                        if (_0x3bf5c8) {
                            if (_0x44f8a4[_0x368f39] !== 0x1)
                                throw new SyntaxError('Unexpected\x20character\x20at\x20index\x20' + _0x3f6c3f);
                            if (_0x2489a4 === -0x1)
                                _0x2489a4 = _0x3f6c3f;
                            else {
                                if (!_0x5d7736)
                                    _0x5d7736 = !![];
                            }
                            _0x3bf5c8 = ![];
                        } else {
                            if (_0x34c3cf) {
                                if (_0x44f8a4[_0x368f39] === 0x1) {
                                    if (_0x2489a4 === -0x1)
                                        _0x2489a4 = _0x3f6c3f;
                                } else {
                                    if (_0x368f39 === 0x22 && _0x2489a4 !== -0x1)
                                        _0x34c3cf = ![], _0x10bf15 = _0x3f6c3f;
                                    else {
                                        if (_0x368f39 === 0x5c)
                                            _0x3bf5c8 = !![];
                                        else
                                            throw new SyntaxError('Unexpected\x20character\x20at\x20index\x20' + _0x3f6c3f);
                                    }
                                }
                            } else {
                                if (_0x368f39 === 0x22 && _0x248cfd['charCodeAt'](_0x3f6c3f - 0x1) === 0x3d)
                                    _0x34c3cf = !![];
                                else {
                                    if (_0x10bf15 === -0x1 && _0x44f8a4[_0x368f39] === 0x1) {
                                        if (_0x2489a4 === -0x1)
                                            _0x2489a4 = _0x3f6c3f;
                                    } else {
                                        if (_0x2489a4 !== -0x1 && (_0x368f39 === 0x20 || _0x368f39 === 0x9)) {
                                            if (_0x10bf15 === -0x1)
                                                _0x10bf15 = _0x3f6c3f;
                                        } else {
                                            if (_0x368f39 === 0x3b || _0x368f39 === 0x2c) {
                                                if (_0x2489a4 === -0x1)
                                                    throw new SyntaxError('Unexpected\x20character\x20at\x20index\x20' + _0x3f6c3f);
                                                if (_0x10bf15 === -0x1)
                                                    _0x10bf15 = _0x3f6c3f;
                                                let _0x50ba56 = _0x248cfd['slice'](_0x2489a4, _0x10bf15);
                                                _0x5d7736 && (_0x50ba56 = _0x50ba56['replace'](/\\/g, ''), _0x5d7736 = ![]), _0x27b4d2(_0x492b0d, _0x5ba618, _0x50ba56), _0x368f39 === 0x2c && (_0x27b4d2(_0x37a477, _0x4c013a, _0x492b0d), _0x492b0d = Object['create'](null), _0x4c013a = undefined), _0x5ba618 = undefined, _0x2489a4 = _0x10bf15 = -0x1;
                                            } else
                                                throw new SyntaxError('Unexpected\x20character\x20at\x20index\x20' + _0x3f6c3f);
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
            if (_0x2489a4 === -0x1 || _0x34c3cf || _0x368f39 === 0x20 || _0x368f39 === 0x9)
                throw new SyntaxError('Unexpected\x20end\x20of\x20input');
            if (_0x10bf15 === -0x1)
                _0x10bf15 = _0x3f6c3f;
            const _0x4504f5 = _0x248cfd['slice'](_0x2489a4, _0x10bf15);
            if (_0x4c013a === undefined)
                _0x27b4d2(_0x37a477, _0x4504f5, _0x492b0d);
            else {
                if (_0x5ba618 === undefined)
                    _0x27b4d2(_0x492b0d, _0x4504f5, !![]);
                else
                    _0x5d7736 ? _0x27b4d2(_0x492b0d, _0x5ba618, _0x4504f5['replace'](/\\/g, '')) : _0x27b4d2(_0x492b0d, _0x5ba618, _0x4504f5);
                _0x27b4d2(_0x37a477, _0x4c013a, _0x492b0d);
            }
            return _0x37a477;
        }
        function _0x1e9793(_0x262a05) {
            return Object['keys'](_0x262a05)['map'](_0x41ef38 => {
                let _0x41f549 = _0x262a05[_0x41ef38];
                if (!Array['isArray'](_0x41f549))
                    _0x41f549 = [_0x41f549];
                return _0x41f549['map'](_0xb7b6e9 => {
                    return [_0x41ef38]['concat'](Object['keys'](_0xb7b6e9)['map'](_0x24a988 => {
                        let _0x46ed3f = _0xb7b6e9[_0x24a988];
                        if (!Array['isArray'](_0x46ed3f))
                            _0x46ed3f = [_0x46ed3f];
                        return _0x46ed3f['map'](_0x1c6795 => _0x1c6795 === !![] ? _0x24a988 : _0x24a988 + '=' + _0x1c6795)['join'](';\x20');
                    }))['join'](';\x20');
                })['join'](',\x20');
            })['join'](',\x20');
        }
        _0x1ba02a['exports'] = {
            'format': _0x1e9793,
            'parse': _0x58e1c6
        };
    },
    0x869e: _0x361998 => {
        'use strict';
        const _0x33a3e8 = Symbol('kDone'), _0x172dc1 = Symbol('kRun');
        class _0x239bfc {
            constructor(_0x1f29b7) {
                this[_0x33a3e8] = () => {
                    this['pending']--, this[_0x172dc1]();
                }, this['concurrency'] = _0x1f29b7 || Infinity, this['jobs'] = [], this['pending'] = 0x0;
            }
            ['add'](_0x634624) {
                this['jobs']['push'](_0x634624), this[_0x172dc1]();
            }
            [_0x172dc1]() {
                if (this['pending'] === this['concurrency'])
                    return;
                if (this['jobs']['length']) {
                    const _0x4770d8 = this['jobs']['shift']();
                    this['pending']++, _0x4770d8(this[_0x33a3e8]);
                }
            }
        }
        _0x361998['exports'] = _0x239bfc;
    },
    0x9141: (_0xab17e1, _0xcc4c3f, _0x3ee3ee) => {
        'use strict';
        const _0x53b717 = _0x3ee3ee(0xe994), _0x16bbbf = _0x3ee3ee(0x1206a), _0x5b4c2a = _0x3ee3ee(0x869e), {kStatusCode: _0x505c03} = _0x3ee3ee(0x9d6d), _0x4baab1 = Buffer['from']([
                0x0,
                0x0,
                0xff,
                0xff
            ]), _0x493779 = Symbol('permessage-deflate'), _0xc0df0c = Symbol('total-length'), _0x4b9b5e = Symbol('callback'), _0x16688c = Symbol('buffers'), _0x4ba30d = Symbol('error');
        let _0x4781c7;
        class _0x53e0fd {
            constructor(_0x3e9c32, _0x392e05, _0x532606) {
                this['_maxPayload'] = _0x532606 | 0x0, this['_options'] = _0x3e9c32 || {}, this['_threshold'] = this['_options']['threshold'] !== undefined ? this['_options']['threshold'] : 0x400, this['_isServer'] = !!_0x392e05, this['_deflate'] = null, this['_inflate'] = null, this['params'] = null;
                if (!_0x4781c7) {
                    const _0x391bcd = this['_options']['concurrencyLimit'] !== undefined ? this['_options']['concurrencyLimit'] : 0xa;
                    _0x4781c7 = new _0x5b4c2a(_0x391bcd);
                }
            }
            static get ['extensionName']() {
                return 'permessage-deflate';
            }
            ['offer']() {
                const _0x175eb1 = {};
                this['_options']['serverNoContextTakeover'] && (_0x175eb1['server_no_context_takeover'] = !![]);
                this['_options']['clientNoContextTakeover'] && (_0x175eb1['client_no_context_takeover'] = !![]);
                this['_options']['serverMaxWindowBits'] && (_0x175eb1['server_max_window_bits'] = this['_options']['serverMaxWindowBits']);
                if (this['_options']['clientMaxWindowBits'])
                    _0x175eb1['client_max_window_bits'] = this['_options']['clientMaxWindowBits'];
                else
                    this['_options']['clientMaxWindowBits'] == null && (_0x175eb1['client_max_window_bits'] = !![]);
                return _0x175eb1;
            }
            ['accept'](_0x9672b5) {
                return _0x9672b5 = this['normalizeParams'](_0x9672b5), this['params'] = this['_isServer'] ? this['acceptAsServer'](_0x9672b5) : this['acceptAsClient'](_0x9672b5), this['params'];
            }
            ['cleanup']() {
                this['_inflate'] && (this['_inflate']['close'](), this['_inflate'] = null);
                if (this['_deflate']) {
                    const _0x44d8a6 = this['_deflate'][_0x4b9b5e];
                    this['_deflate']['close'](), this['_deflate'] = null, _0x44d8a6 && _0x44d8a6(new Error('The\x20deflate\x20stream\x20was\x20closed\x20while\x20data\x20was\x20being\x20processed'));
                }
            }
            ['acceptAsServer'](_0x212534) {
                const _0x75bd62 = this['_options'], _0x413807 = _0x212534['find'](_0x4ed287 => {
                        if (_0x75bd62['serverNoContextTakeover'] === ![] && _0x4ed287['server_no_context_takeover'] || _0x4ed287['server_max_window_bits'] && (_0x75bd62['serverMaxWindowBits'] === ![] || typeof _0x75bd62['serverMaxWindowBits'] === 'number' && _0x75bd62['serverMaxWindowBits'] > _0x4ed287['server_max_window_bits']) || typeof _0x75bd62['clientMaxWindowBits'] === 'number' && !_0x4ed287['client_max_window_bits'])
                            return ![];
                        return !![];
                    });
                if (!_0x413807)
                    throw new Error('None\x20of\x20the\x20extension\x20offers\x20can\x20be\x20accepted');
                _0x75bd62['serverNoContextTakeover'] && (_0x413807['server_no_context_takeover'] = !![]);
                _0x75bd62['clientNoContextTakeover'] && (_0x413807['client_no_context_takeover'] = !![]);
                typeof _0x75bd62['serverMaxWindowBits'] === 'number' && (_0x413807['server_max_window_bits'] = _0x75bd62['serverMaxWindowBits']);
                if (typeof _0x75bd62['clientMaxWindowBits'] === 'number')
                    _0x413807['client_max_window_bits'] = _0x75bd62['clientMaxWindowBits'];
                else
                    (_0x413807['client_max_window_bits'] === !![] || _0x75bd62['clientMaxWindowBits'] === ![]) && delete _0x413807['client_max_window_bits'];
                return _0x413807;
            }
            ['acceptAsClient'](_0x497403) {
                const _0x4feef7 = _0x497403[0x0];
                if (this['_options']['clientNoContextTakeover'] === ![] && _0x4feef7['client_no_context_takeover'])
                    throw new Error('Unexpected\x20parameter\x20\x22client_no_context_takeover\x22');
                if (!_0x4feef7['client_max_window_bits'])
                    typeof this['_options']['clientMaxWindowBits'] === 'number' && (_0x4feef7['client_max_window_bits'] = this['_options']['clientMaxWindowBits']);
                else {
                    if (this['_options']['clientMaxWindowBits'] === ![] || typeof this['_options']['clientMaxWindowBits'] === 'number' && _0x4feef7['client_max_window_bits'] > this['_options']['clientMaxWindowBits'])
                        throw new Error('Unexpected\x20or\x20invalid\x20parameter\x20\x22client_max_window_bits\x22');
                }
                return _0x4feef7;
            }
            ['normalizeParams'](_0x1b0a29) {
                return _0x1b0a29['forEach'](_0x4e5bcf => {
                    Object['keys'](_0x4e5bcf)['forEach'](_0xc72726 => {
                        let _0xef63dc = _0x4e5bcf[_0xc72726];
                        if (_0xef63dc['length'] > 0x1)
                            throw new Error('Parameter\x20\x22' + _0xc72726 + '\x22\x20must\x20have\x20only\x20a\x20single\x20value');
                        _0xef63dc = _0xef63dc[0x0];
                        if (_0xc72726 === 'client_max_window_bits') {
                            if (_0xef63dc !== !![]) {
                                const _0x4649b0 = +_0xef63dc;
                                if (!Number['isInteger'](_0x4649b0) || _0x4649b0 < 0x8 || _0x4649b0 > 0xf)
                                    throw new TypeError('Invalid\x20value\x20for\x20parameter\x20\x22' + _0xc72726 + '\x22:\x20' + _0xef63dc);
                                _0xef63dc = _0x4649b0;
                            } else {
                                if (!this['_isServer'])
                                    throw new TypeError('Invalid\x20value\x20for\x20parameter\x20\x22' + _0xc72726 + '\x22:\x20' + _0xef63dc);
                            }
                        } else {
                            if (_0xc72726 === 'server_max_window_bits') {
                                const _0x5cd64d = +_0xef63dc;
                                if (!Number['isInteger'](_0x5cd64d) || _0x5cd64d < 0x8 || _0x5cd64d > 0xf)
                                    throw new TypeError('Invalid\x20value\x20for\x20parameter\x20\x22' + _0xc72726 + '\x22:\x20' + _0xef63dc);
                                _0xef63dc = _0x5cd64d;
                            } else {
                                if (_0xc72726 === 'client_no_context_takeover' || _0xc72726 === 'server_no_context_takeover') {
                                    if (_0xef63dc !== !![])
                                        throw new TypeError('Invalid\x20value\x20for\x20parameter\x20\x22' + _0xc72726 + '\x22:\x20' + _0xef63dc);
                                } else
                                    throw new Error('Unknown\x20parameter\x20\x22' + _0xc72726 + '\x22');
                            }
                        }
                        _0x4e5bcf[_0xc72726] = _0xef63dc;
                    });
                }), _0x1b0a29;
            }
            ['decompress'](_0x12f38d, _0x147b4d, _0x4743b3) {
                _0x4781c7['add'](_0x54c466 => {
                    this['_decompress'](_0x12f38d, _0x147b4d, (_0x3362bf, _0x567100) => {
                        _0x54c466(), _0x4743b3(_0x3362bf, _0x567100);
                    });
                });
            }
            ['compress'](_0x1f8a26, _0x2cf8f9, _0x529ce1) {
                _0x4781c7['add'](_0xc48a2c => {
                    this['_compress'](_0x1f8a26, _0x2cf8f9, (_0x42c1bc, _0x3206b6) => {
                        _0xc48a2c(), _0x529ce1(_0x42c1bc, _0x3206b6);
                    });
                });
            }
            ['_decompress'](_0x1933b7, _0xae5171, _0x587f28) {
                const _0x2cb741 = this['_isServer'] ? 'client' : 'server';
                if (!this['_inflate']) {
                    const _0x1ff869 = _0x2cb741 + '_max_window_bits', _0x5abc77 = typeof this['params'][_0x1ff869] !== 'number' ? _0x53b717['Z_DEFAULT_WINDOWBITS'] : this['params'][_0x1ff869];
                    this['_inflate'] = _0x53b717['createInflateRaw']({
                        ...this['_options']['zlibInflateOptions'],
                        'windowBits': _0x5abc77
                    }), this['_inflate'][_0x493779] = this, this['_inflate'][_0xc0df0c] = 0x0, this['_inflate'][_0x16688c] = [], this['_inflate']['on']('error', _0x30ba6e), this['_inflate']['on']('data', _0x27da05);
                }
                this['_inflate'][_0x4b9b5e] = _0x587f28, this['_inflate']['write'](_0x1933b7);
                if (_0xae5171)
                    this['_inflate']['write'](_0x4baab1);
                this['_inflate']['flush'](() => {
                    const _0x2ee3ad = this['_inflate'][_0x4ba30d];
                    if (_0x2ee3ad) {
                        this['_inflate']['close'](), this['_inflate'] = null, _0x587f28(_0x2ee3ad);
                        return;
                    }
                    const _0xbbfc1e = _0x16bbbf['concat'](this['_inflate'][_0x16688c], this['_inflate'][_0xc0df0c]);
                    this['_inflate']['_readableState']['endEmitted'] ? (this['_inflate']['close'](), this['_inflate'] = null) : (this['_inflate'][_0xc0df0c] = 0x0, this['_inflate'][_0x16688c] = [], _0xae5171 && this['params'][_0x2cb741 + '_no_context_takeover'] && this['_inflate']['reset']()), _0x587f28(null, _0xbbfc1e);
                });
            }
            ['_compress'](_0x2d55b1, _0x443dd5, _0x59942b) {
                const _0x1f0565 = this['_isServer'] ? 'server' : 'client';
                if (!this['_deflate']) {
                    const _0x33a1bb = _0x1f0565 + '_max_window_bits', _0x4f9c1f = typeof this['params'][_0x33a1bb] !== 'number' ? _0x53b717['Z_DEFAULT_WINDOWBITS'] : this['params'][_0x33a1bb];
                    this['_deflate'] = _0x53b717['createDeflateRaw']({
                        ...this['_options']['zlibDeflateOptions'],
                        'windowBits': _0x4f9c1f
                    }), this['_deflate'][_0xc0df0c] = 0x0, this['_deflate'][_0x16688c] = [], this['_deflate']['on']('data', _0x3a23b);
                }
                this['_deflate'][_0x4b9b5e] = _0x59942b, this['_deflate']['write'](_0x2d55b1), this['_deflate']['flush'](_0x53b717['Z_SYNC_FLUSH'], () => {
                    if (!this['_deflate'])
                        return;
                    let _0x1aaee8 = _0x16bbbf['concat'](this['_deflate'][_0x16688c], this['_deflate'][_0xc0df0c]);
                    if (_0x443dd5)
                        _0x1aaee8 = _0x1aaee8['slice'](0x0, _0x1aaee8['length'] - 0x4);
                    this['_deflate'][_0x4b9b5e] = null, this['_deflate'][_0xc0df0c] = 0x0, this['_deflate'][_0x16688c] = [], _0x443dd5 && this['params'][_0x1f0565 + '_no_context_takeover'] && this['_deflate']['reset'](), _0x59942b(null, _0x1aaee8);
                });
            }
        }
        _0xab17e1['exports'] = _0x53e0fd;
        function _0x3a23b(_0x4c51e2) {
            this[_0x16688c]['push'](_0x4c51e2), this[_0xc0df0c] += _0x4c51e2['length'];
        }
        function _0x27da05(_0x390dad) {
            this[_0xc0df0c] += _0x390dad['length'];
            if (this[_0x493779]['_maxPayload'] < 0x1 || this[_0xc0df0c] <= this[_0x493779]['_maxPayload']) {
                this[_0x16688c]['push'](_0x390dad);
                return;
            }
            this[_0x4ba30d] = new RangeError('Max\x20payload\x20size\x20exceeded'), this[_0x4ba30d]['code'] = 'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH', this[_0x4ba30d][_0x505c03] = 0x3f1, this['removeListener']('data', _0x27da05), this['reset']();
        }
        function _0x30ba6e(_0x53ed79) {
            this[_0x493779]['_inflate'] = null, _0x53ed79[_0x505c03] = 0x3ef, this[_0x4b9b5e](_0x53ed79);
        }
    },
    0xf0a3: (_0x482d2d, _0x55ad76, _0x453028) => {
        'use strict';
        const {Writable: _0x45ae65} = _0x453028(0x31ed), _0x4c6fb4 = _0x453028(0x9141), {
                BINARY_TYPES: _0x3dbaaf,
                EMPTY_BUFFER: _0xc584d8,
                kStatusCode: _0x6059f5,
                kWebSocket: _0x1ffe4c
            } = _0x453028(0x9d6d), {
                concat: _0x7e520d,
                toArrayBuffer: _0x13cb72,
                unmask: _0x2a9d9e
            } = _0x453028(0x1206a), {
                isValidStatusCode: _0x1b5316,
                isValidUTF8: _0xbbd2fb
            } = _0x453028(0x1845), _0x54bb99 = 0x0, _0x2a0cc2 = 0x1, _0x530bd6 = 0x2, _0x45faaa = 0x3, _0x5c159d = 0x4, _0x399946 = 0x5;
        class _0x3d0df8 extends _0x45ae65 {
            constructor(_0xba428a = {}) {
                super(), this['_binaryType'] = _0xba428a['binaryType'] || _0x3dbaaf[0x0], this['_extensions'] = _0xba428a['extensions'] || {}, this['_isServer'] = !!_0xba428a['isServer'], this['_maxPayload'] = _0xba428a['maxPayload'] | 0x0, this['_skipUTF8Validation'] = !!_0xba428a['skipUTF8Validation'], this[_0x1ffe4c] = undefined, this['_bufferedBytes'] = 0x0, this['_buffers'] = [], this['_compressed'] = ![], this['_payloadLength'] = 0x0, this['_mask'] = undefined, this['_fragmented'] = 0x0, this['_masked'] = ![], this['_fin'] = ![], this['_opcode'] = 0x0, this['_totalPayloadLength'] = 0x0, this['_messageLength'] = 0x0, this['_fragments'] = [], this['_state'] = _0x54bb99, this['_loop'] = ![];
            }
            ['_write'](_0x5a5173, _0x2c3c96, _0x4b150b) {
                if (this['_opcode'] === 0x8 && this['_state'] == _0x54bb99)
                    return _0x4b150b();
                this['_bufferedBytes'] += _0x5a5173['length'], this['_buffers']['push'](_0x5a5173), this['startLoop'](_0x4b150b);
            }
            ['consume'](_0xb7c2de) {
                this['_bufferedBytes'] -= _0xb7c2de;
                if (_0xb7c2de === this['_buffers'][0x0]['length'])
                    return this['_buffers']['shift']();
                if (_0xb7c2de < this['_buffers'][0x0]['length']) {
                    const _0x331688 = this['_buffers'][0x0];
                    return this['_buffers'][0x0] = _0x331688['slice'](_0xb7c2de), _0x331688['slice'](0x0, _0xb7c2de);
                }
                const _0x54bdda = Buffer['allocUnsafe'](_0xb7c2de);
                do {
                    const _0x54513d = this['_buffers'][0x0], _0xbfac7f = _0x54bdda['length'] - _0xb7c2de;
                    _0xb7c2de >= _0x54513d['length'] ? _0x54bdda['set'](this['_buffers']['shift'](), _0xbfac7f) : (_0x54bdda['set'](new Uint8Array(_0x54513d['buffer'], _0x54513d['byteOffset'], _0xb7c2de), _0xbfac7f), this['_buffers'][0x0] = _0x54513d['slice'](_0xb7c2de)), _0xb7c2de -= _0x54513d['length'];
                } while (_0xb7c2de > 0x0);
                return _0x54bdda;
            }
            ['startLoop'](_0x1ccb30) {
                let _0x5076b5;
                this['_loop'] = !![];
                do {
                    switch (this['_state']) {
                    case _0x54bb99:
                        _0x5076b5 = this['getInfo']();
                        break;
                    case _0x2a0cc2:
                        _0x5076b5 = this['getPayloadLength16']();
                        break;
                    case _0x530bd6:
                        _0x5076b5 = this['getPayloadLength64']();
                        break;
                    case _0x45faaa:
                        this['getMask']();
                        break;
                    case _0x5c159d:
                        _0x5076b5 = this['getData'](_0x1ccb30);
                        break;
                    default:
                        this['_loop'] = ![];
                        return;
                    }
                } while (this['_loop']);
                _0x1ccb30(_0x5076b5);
            }
            ['getInfo']() {
                if (this['_bufferedBytes'] < 0x2) {
                    this['_loop'] = ![];
                    return;
                }
                const _0x57e95e = this['consume'](0x2);
                if ((_0x57e95e[0x0] & 0x30) !== 0x0)
                    return this['_loop'] = ![], _0x1bd713(RangeError, 'RSV2\x20and\x20RSV3\x20must\x20be\x20clear', !![], 0x3ea, 'WS_ERR_UNEXPECTED_RSV_2_3');
                const _0x222178 = (_0x57e95e[0x0] & 0x40) === 0x40;
                if (_0x222178 && !this['_extensions'][_0x4c6fb4['extensionName']])
                    return this['_loop'] = ![], _0x1bd713(RangeError, 'RSV1\x20must\x20be\x20clear', !![], 0x3ea, 'WS_ERR_UNEXPECTED_RSV_1');
                this['_fin'] = (_0x57e95e[0x0] & 0x80) === 0x80, this['_opcode'] = _0x57e95e[0x0] & 0xf, this['_payloadLength'] = _0x57e95e[0x1] & 0x7f;
                if (this['_opcode'] === 0x0) {
                    if (_0x222178)
                        return this['_loop'] = ![], _0x1bd713(RangeError, 'RSV1\x20must\x20be\x20clear', !![], 0x3ea, 'WS_ERR_UNEXPECTED_RSV_1');
                    if (!this['_fragmented'])
                        return this['_loop'] = ![], _0x1bd713(RangeError, 'invalid\x20opcode\x200', !![], 0x3ea, 'WS_ERR_INVALID_OPCODE');
                    this['_opcode'] = this['_fragmented'];
                } else {
                    if (this['_opcode'] === 0x1 || this['_opcode'] === 0x2) {
                        if (this['_fragmented'])
                            return this['_loop'] = ![], _0x1bd713(RangeError, 'invalid\x20opcode\x20' + this['_opcode'], !![], 0x3ea, 'WS_ERR_INVALID_OPCODE');
                        this['_compressed'] = _0x222178;
                    } else {
                        if (this['_opcode'] > 0x7 && this['_opcode'] < 0xb) {
                            if (!this['_fin'])
                                return this['_loop'] = ![], _0x1bd713(RangeError, 'FIN\x20must\x20be\x20set', !![], 0x3ea, 'WS_ERR_EXPECTED_FIN');
                            if (_0x222178)
                                return this['_loop'] = ![], _0x1bd713(RangeError, 'RSV1\x20must\x20be\x20clear', !![], 0x3ea, 'WS_ERR_UNEXPECTED_RSV_1');
                            if (this['_payloadLength'] > 0x7d)
                                return this['_loop'] = ![], _0x1bd713(RangeError, 'invalid\x20payload\x20length\x20' + this['_payloadLength'], !![], 0x3ea, 'WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH');
                        } else
                            return this['_loop'] = ![], _0x1bd713(RangeError, 'invalid\x20opcode\x20' + this['_opcode'], !![], 0x3ea, 'WS_ERR_INVALID_OPCODE');
                    }
                }
                if (!this['_fin'] && !this['_fragmented'])
                    this['_fragmented'] = this['_opcode'];
                this['_masked'] = (_0x57e95e[0x1] & 0x80) === 0x80;
                if (this['_isServer']) {
                    if (!this['_masked'])
                        return this['_loop'] = ![], _0x1bd713(RangeError, 'MASK\x20must\x20be\x20set', !![], 0x3ea, 'WS_ERR_EXPECTED_MASK');
                } else {
                    if (this['_masked'])
                        return this['_loop'] = ![], _0x1bd713(RangeError, 'MASK\x20must\x20be\x20clear', !![], 0x3ea, 'WS_ERR_UNEXPECTED_MASK');
                }
                if (this['_payloadLength'] === 0x7e)
                    this['_state'] = _0x2a0cc2;
                else {
                    if (this['_payloadLength'] === 0x7f)
                        this['_state'] = _0x530bd6;
                    else
                        return this['haveLength']();
                }
            }
            ['getPayloadLength16']() {
                if (this['_bufferedBytes'] < 0x2) {
                    this['_loop'] = ![];
                    return;
                }
                return this['_payloadLength'] = this['consume'](0x2)['readUInt16BE'](0x0), this['haveLength']();
            }
            ['getPayloadLength64']() {
                if (this['_bufferedBytes'] < 0x8) {
                    this['_loop'] = ![];
                    return;
                }
                const _0x4eeaa9 = this['consume'](0x8), _0x31e51c = _0x4eeaa9['readUInt32BE'](0x0);
                if (_0x31e51c > Math['pow'](0x2, 0x35 - 0x20) - 0x1)
                    return this['_loop'] = ![], _0x1bd713(RangeError, 'Unsupported\x20WebSocket\x20frame:\x20payload\x20length\x20>\x202^53\x20-\x201', ![], 0x3f1, 'WS_ERR_UNSUPPORTED_DATA_PAYLOAD_LENGTH');
                return this['_payloadLength'] = _0x31e51c * Math['pow'](0x2, 0x20) + _0x4eeaa9['readUInt32BE'](0x4), this['haveLength']();
            }
            ['haveLength']() {
                if (this['_payloadLength'] && this['_opcode'] < 0x8) {
                    this['_totalPayloadLength'] += this['_payloadLength'];
                    if (this['_totalPayloadLength'] > this['_maxPayload'] && this['_maxPayload'] > 0x0)
                        return this['_loop'] = ![], _0x1bd713(RangeError, 'Max\x20payload\x20size\x20exceeded', ![], 0x3f1, 'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH');
                }
                if (this['_masked'])
                    this['_state'] = _0x45faaa;
                else
                    this['_state'] = _0x5c159d;
            }
            ['getMask']() {
                if (this['_bufferedBytes'] < 0x4) {
                    this['_loop'] = ![];
                    return;
                }
                this['_mask'] = this['consume'](0x4), this['_state'] = _0x5c159d;
            }
            ['getData'](_0x522665) {
                let _0x163e6a = _0xc584d8;
                if (this['_payloadLength']) {
                    if (this['_bufferedBytes'] < this['_payloadLength']) {
                        this['_loop'] = ![];
                        return;
                    }
                    _0x163e6a = this['consume'](this['_payloadLength']);
                    if (this['_masked'])
                        _0x2a9d9e(_0x163e6a, this['_mask']);
                }
                if (this['_opcode'] > 0x7)
                    return this['controlMessage'](_0x163e6a);
                if (this['_compressed']) {
                    this['_state'] = _0x399946, this['decompress'](_0x163e6a, _0x522665);
                    return;
                }
                return _0x163e6a['length'] && (this['_messageLength'] = this['_totalPayloadLength'], this['_fragments']['push'](_0x163e6a)), this['dataMessage']();
            }
            ['decompress'](_0x354cd9, _0x1eb815) {
                const _0x4584c2 = this['_extensions'][_0x4c6fb4['extensionName']];
                _0x4584c2['decompress'](_0x354cd9, this['_fin'], (_0x68d2d3, _0x53f84f) => {
                    if (_0x68d2d3)
                        return _0x1eb815(_0x68d2d3);
                    if (_0x53f84f['length']) {
                        this['_messageLength'] += _0x53f84f['length'];
                        if (this['_messageLength'] > this['_maxPayload'] && this['_maxPayload'] > 0x0)
                            return _0x1eb815(_0x1bd713(RangeError, 'Max\x20payload\x20size\x20exceeded', ![], 0x3f1, 'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH'));
                        this['_fragments']['push'](_0x53f84f);
                    }
                    const _0x959a66 = this['dataMessage']();
                    if (_0x959a66)
                        return _0x1eb815(_0x959a66);
                    this['startLoop'](_0x1eb815);
                });
            }
            ['dataMessage']() {
                if (this['_fin']) {
                    const _0x42a498 = this['_messageLength'], _0x31211e = this['_fragments'];
                    this['_totalPayloadLength'] = 0x0, this['_messageLength'] = 0x0, this['_fragmented'] = 0x0, this['_fragments'] = [];
                    if (this['_opcode'] === 0x2) {
                        let _0x4e3f0f;
                        if (this['_binaryType'] === 'nodebuffer')
                            _0x4e3f0f = _0x7e520d(_0x31211e, _0x42a498);
                        else
                            this['_binaryType'] === 'arraybuffer' ? _0x4e3f0f = _0x13cb72(_0x7e520d(_0x31211e, _0x42a498)) : _0x4e3f0f = _0x31211e;
                        this['emit']('message', _0x4e3f0f, !![]);
                    } else {
                        const _0x319dd5 = _0x7e520d(_0x31211e, _0x42a498);
                        if (!this['_skipUTF8Validation'] && !_0xbbd2fb(_0x319dd5))
                            return this['_loop'] = ![], _0x1bd713(Error, 'invalid\x20UTF-8\x20sequence', !![], 0x3ef, 'WS_ERR_INVALID_UTF8');
                        this['emit']('message', _0x319dd5, ![]);
                    }
                }
                this['_state'] = _0x54bb99;
            }
            ['controlMessage'](_0x531425) {
                if (this['_opcode'] === 0x8) {
                    this['_loop'] = ![];
                    if (_0x531425['length'] === 0x0)
                        this['emit']('conclude', 0x3ed, _0xc584d8), this['end']();
                    else {
                        if (_0x531425['length'] === 0x1)
                            return _0x1bd713(RangeError, 'invalid\x20payload\x20length\x201', !![], 0x3ea, 'WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH');
                        else {
                            const _0xd8667 = _0x531425['readUInt16BE'](0x0);
                            if (!_0x1b5316(_0xd8667))
                                return _0x1bd713(RangeError, 'invalid\x20status\x20code\x20' + _0xd8667, !![], 0x3ea, 'WS_ERR_INVALID_CLOSE_CODE');
                            const _0x123b86 = _0x531425['slice'](0x2);
                            if (!this['_skipUTF8Validation'] && !_0xbbd2fb(_0x123b86))
                                return _0x1bd713(Error, 'invalid\x20UTF-8\x20sequence', !![], 0x3ef, 'WS_ERR_INVALID_UTF8');
                            this['emit']('conclude', _0xd8667, _0x123b86), this['end']();
                        }
                    }
                } else
                    this['_opcode'] === 0x9 ? this['emit']('ping', _0x531425) : this['emit']('pong', _0x531425);
                this['_state'] = _0x54bb99;
            }
        }
        _0x482d2d['exports'] = _0x3d0df8;
        function _0x1bd713(_0x297121, _0x4a6f11, _0x42ae98, _0x44ab51, _0x1a879b) {
            const _0x2b438a = new _0x297121(_0x42ae98 ? 'Invalid\x20WebSocket\x20frame:\x20' + _0x4a6f11 : _0x4a6f11);
            return Error['captureStackTrace'](_0x2b438a, _0x1bd713), _0x2b438a['code'] = _0x1a879b, _0x2b438a[_0x6059f5] = _0x44ab51, _0x2b438a;
        }
    },
    0x11ed9: (_0x1ca782, _0x48f5fa, _0x1d62c5) => {
        'use strict';
        const _0x5e988d = _0x1d62c5(0xa350), _0xd64800 = _0x1d62c5(0x5f54), {randomFillSync: _0x241e97} = _0x1d62c5(0x17e1), _0x368641 = _0x1d62c5(0x9141), {EMPTY_BUFFER: _0x40e501} = _0x1d62c5(0x9d6d), {isValidStatusCode: _0x18cf5d} = _0x1d62c5(0x1845), {
                mask: _0x35dcfb,
                toBuffer: _0x2c8498
            } = _0x1d62c5(0x1206a), _0x2358b5 = Buffer['alloc'](0x4);
        class _0x1c5d43 {
            constructor(_0x44d715, _0x3f271c) {
                this['_extensions'] = _0x3f271c || {}, this['_socket'] = _0x44d715, this['_firstFragment'] = !![], this['_compress'] = ![], this['_bufferedBytes'] = 0x0, this['_deflating'] = ![], this['_queue'] = [];
            }
            static ['frame'](_0xe98c41, _0x4eb665) {
                const _0x28f395 = _0x4eb665['mask'] && _0x4eb665['readOnly'];
                let _0x392e11 = _0x4eb665['mask'] ? 0x6 : 0x2, _0x42804 = _0xe98c41['length'];
                if (_0xe98c41['length'] >= 0x10000)
                    _0x392e11 += 0x8, _0x42804 = 0x7f;
                else
                    _0xe98c41['length'] > 0x7d && (_0x392e11 += 0x2, _0x42804 = 0x7e);
                const _0x49136b = Buffer['allocUnsafe'](_0x28f395 ? _0xe98c41['length'] + _0x392e11 : _0x392e11);
                _0x49136b[0x0] = _0x4eb665['fin'] ? _0x4eb665['opcode'] | 0x80 : _0x4eb665['opcode'];
                if (_0x4eb665['rsv1'])
                    _0x49136b[0x0] |= 0x40;
                _0x49136b[0x1] = _0x42804;
                if (_0x42804 === 0x7e)
                    _0x49136b['writeUInt16BE'](_0xe98c41['length'], 0x2);
                else
                    _0x42804 === 0x7f && (_0x49136b['writeUInt32BE'](0x0, 0x2), _0x49136b['writeUInt32BE'](_0xe98c41['length'], 0x6));
                if (!_0x4eb665['mask'])
                    return [
                        _0x49136b,
                        _0xe98c41
                    ];
                _0x241e97(_0x2358b5, 0x0, 0x4), _0x49136b[0x1] |= 0x80, _0x49136b[_0x392e11 - 0x4] = _0x2358b5[0x0], _0x49136b[_0x392e11 - 0x3] = _0x2358b5[0x1], _0x49136b[_0x392e11 - 0x2] = _0x2358b5[0x2], _0x49136b[_0x392e11 - 0x1] = _0x2358b5[0x3];
                if (_0x28f395)
                    return _0x35dcfb(_0xe98c41, _0x2358b5, _0x49136b, _0x392e11, _0xe98c41['length']), [_0x49136b];
                return _0x35dcfb(_0xe98c41, _0x2358b5, _0xe98c41, 0x0, _0xe98c41['length']), [
                    _0x49136b,
                    _0xe98c41
                ];
            }
            ['close'](_0x58a17f, _0x5c58b4, _0x58d904, _0x42b256) {
                let _0x128ee1;
                if (_0x58a17f === undefined)
                    _0x128ee1 = _0x40e501;
                else {
                    if (typeof _0x58a17f !== 'number' || !_0x18cf5d(_0x58a17f))
                        throw new TypeError('First\x20argument\x20must\x20be\x20a\x20valid\x20error\x20code\x20number');
                    else {
                        if (_0x5c58b4 === undefined || !_0x5c58b4['length'])
                            _0x128ee1 = Buffer['allocUnsafe'](0x2), _0x128ee1['writeUInt16BE'](_0x58a17f, 0x0);
                        else {
                            const _0x57d6ac = Buffer['byteLength'](_0x5c58b4);
                            if (_0x57d6ac > 0x7b)
                                throw new RangeError('The\x20message\x20must\x20not\x20be\x20greater\x20than\x20123\x20bytes');
                            _0x128ee1 = Buffer['allocUnsafe'](0x2 + _0x57d6ac), _0x128ee1['writeUInt16BE'](_0x58a17f, 0x0), typeof _0x5c58b4 === 'string' ? _0x128ee1['write'](_0x5c58b4, 0x2) : _0x128ee1['set'](_0x5c58b4, 0x2);
                        }
                    }
                }
                this['_deflating'] ? this['enqueue']([
                    this['doClose'],
                    _0x128ee1,
                    _0x58d904,
                    _0x42b256
                ]) : this['doClose'](_0x128ee1, _0x58d904, _0x42b256);
            }
            ['doClose'](_0x2ed8a0, _0x12f998, _0x459137) {
                this['sendFrame'](_0x1c5d43['frame'](_0x2ed8a0, {
                    'fin': !![],
                    'rsv1': ![],
                    'opcode': 0x8,
                    'mask': _0x12f998,
                    'readOnly': ![]
                }), _0x459137);
            }
            ['ping'](_0x4e3410, _0x45899b, _0x16c9f5) {
                const _0x1559f0 = _0x2c8498(_0x4e3410);
                if (_0x1559f0['length'] > 0x7d)
                    throw new RangeError('The\x20data\x20size\x20must\x20not\x20be\x20greater\x20than\x20125\x20bytes');
                this['_deflating'] ? this['enqueue']([
                    this['doPing'],
                    _0x1559f0,
                    _0x45899b,
                    _0x2c8498['readOnly'],
                    _0x16c9f5
                ]) : this['doPing'](_0x1559f0, _0x45899b, _0x2c8498['readOnly'], _0x16c9f5);
            }
            ['doPing'](_0x37c250, _0x2ec494, _0x2fe206, _0x3b4c07) {
                this['sendFrame'](_0x1c5d43['frame'](_0x37c250, {
                    'fin': !![],
                    'rsv1': ![],
                    'opcode': 0x9,
                    'mask': _0x2ec494,
                    'readOnly': _0x2fe206
                }), _0x3b4c07);
            }
            ['pong'](_0x642690, _0x48ec70, _0x562861) {
                const _0x3a3b77 = _0x2c8498(_0x642690);
                if (_0x3a3b77['length'] > 0x7d)
                    throw new RangeError('The\x20data\x20size\x20must\x20not\x20be\x20greater\x20than\x20125\x20bytes');
                this['_deflating'] ? this['enqueue']([
                    this['doPong'],
                    _0x3a3b77,
                    _0x48ec70,
                    _0x2c8498['readOnly'],
                    _0x562861
                ]) : this['doPong'](_0x3a3b77, _0x48ec70, _0x2c8498['readOnly'], _0x562861);
            }
            ['doPong'](_0x3480a9, _0x48f70e, _0x1bd8b8, _0x582b16) {
                this['sendFrame'](_0x1c5d43['frame'](_0x3480a9, {
                    'fin': !![],
                    'rsv1': ![],
                    'opcode': 0xa,
                    'mask': _0x48f70e,
                    'readOnly': _0x1bd8b8
                }), _0x582b16);
            }
            ['send'](_0x243038, _0x568b91, _0x46bd45) {
                const _0x51ab57 = _0x2c8498(_0x243038), _0x3e490b = this['_extensions'][_0x368641['extensionName']];
                let _0x226dee = _0x568b91['binary'] ? 0x2 : 0x1, _0x1ef2a8 = _0x568b91['compress'];
                this['_firstFragment'] ? (this['_firstFragment'] = ![], _0x1ef2a8 && _0x3e490b && _0x3e490b['params'][_0x3e490b['_isServer'] ? 'server_no_context_takeover' : 'client_no_context_takeover'] && (_0x1ef2a8 = _0x51ab57['length'] >= _0x3e490b['_threshold']), this['_compress'] = _0x1ef2a8) : (_0x1ef2a8 = ![], _0x226dee = 0x0);
                if (_0x568b91['fin'])
                    this['_firstFragment'] = !![];
                if (_0x3e490b) {
                    const _0x1748dc = {
                        'fin': _0x568b91['fin'],
                        'rsv1': _0x1ef2a8,
                        'opcode': _0x226dee,
                        'mask': _0x568b91['mask'],
                        'readOnly': _0x2c8498['readOnly']
                    };
                    this['_deflating'] ? this['enqueue']([
                        this['dispatch'],
                        _0x51ab57,
                        this['_compress'],
                        _0x1748dc,
                        _0x46bd45
                    ]) : this['dispatch'](_0x51ab57, this['_compress'], _0x1748dc, _0x46bd45);
                } else
                    this['sendFrame'](_0x1c5d43['frame'](_0x51ab57, {
                        'fin': _0x568b91['fin'],
                        'rsv1': ![],
                        'opcode': _0x226dee,
                        'mask': _0x568b91['mask'],
                        'readOnly': _0x2c8498['readOnly']
                    }), _0x46bd45);
            }
            ['dispatch'](_0x4c5656, _0x15ab91, _0x3251c8, _0x25f22e) {
                if (!_0x15ab91) {
                    this['sendFrame'](_0x1c5d43['frame'](_0x4c5656, _0x3251c8), _0x25f22e);
                    return;
                }
                const _0x59767e = this['_extensions'][_0x368641['extensionName']];
                this['_bufferedBytes'] += _0x4c5656['length'], this['_deflating'] = !![], _0x59767e['compress'](_0x4c5656, _0x3251c8['fin'], (_0x1ec608, _0x35ecf8) => {
                    if (this['_socket']['destroyed']) {
                        const _0x429559 = new Error('The\x20socket\x20was\x20closed\x20while\x20data\x20was\x20being\x20compressed');
                        if (typeof _0x25f22e === 'function')
                            _0x25f22e(_0x429559);
                        for (let _0x5f132a = 0x0; _0x5f132a < this['_queue']['length']; _0x5f132a++) {
                            const _0x1ebece = this['_queue'][_0x5f132a][0x4];
                            if (typeof _0x1ebece === 'function')
                                _0x1ebece(_0x429559);
                        }
                        return;
                    }
                    this['_bufferedBytes'] -= _0x4c5656['length'], this['_deflating'] = ![], _0x3251c8['readOnly'] = ![], this['sendFrame'](_0x1c5d43['frame'](_0x35ecf8, _0x3251c8), _0x25f22e), this['dequeue']();
                });
            }
            ['dequeue']() {
                while (!this['_deflating'] && this['_queue']['length']) {
                    const _0x518ba0 = this['_queue']['shift']();
                    this['_bufferedBytes'] -= _0x518ba0[0x1]['length'], Reflect['apply'](_0x518ba0[0x0], this, _0x518ba0['slice'](0x1));
                }
            }
            ['enqueue'](_0x569356) {
                this['_bufferedBytes'] += _0x569356[0x1]['length'], this['_queue']['push'](_0x569356);
            }
            ['sendFrame'](_0x57b93f, _0x579107) {
                _0x57b93f['length'] === 0x2 ? (this['_socket']['cork'](), this['_socket']['write'](_0x57b93f[0x0]), this['_socket']['write'](_0x57b93f[0x1], _0x579107), this['_socket']['uncork']()) : this['_socket']['write'](_0x57b93f[0x0], _0x579107);
            }
        }
        _0x1ca782['exports'] = _0x1c5d43;
    },
    0x166ed: (_0x314f3d, _0x4fc734, _0x5c718a) => {
        'use strict';
        const {Duplex: _0x5c9b61} = _0x5c718a(0x31ed);
        function _0x2a024f(_0x2c5a11) {
            _0x2c5a11['emit']('close');
        }
        function _0xda0d7d() {
            !this['destroyed'] && this['_writableState']['finished'] && this['destroy']();
        }
        function _0x2d997f(_0x2f1560) {
            this['removeListener']('error', _0x2d997f), this['destroy'](), this['listenerCount']('error') === 0x0 && this['emit']('error', _0x2f1560);
        }
        function _0x505b84(_0x5e4265, _0x15da3c) {
            let _0x1a7c3f = !![], _0x3277fb = !![];
            function _0x1bd573() {
                if (_0x1a7c3f)
                    _0x5e4265['_socket']['resume']();
            }
            _0x5e4265['readyState'] === _0x5e4265['CONNECTING'] ? _0x5e4265['once']('open', function _0x1281fc() {
                _0x5e4265['_receiver']['removeAllListeners']('drain'), _0x5e4265['_receiver']['on']('drain', _0x1bd573);
            }) : (_0x5e4265['_receiver']['removeAllListeners']('drain'), _0x5e4265['_receiver']['on']('drain', _0x1bd573));
            const _0x156538 = new _0x5c9b61({
                ..._0x15da3c,
                'autoDestroy': ![],
                'emitClose': ![],
                'objectMode': ![],
                'writableObjectMode': ![]
            });
            return _0x5e4265['on']('message', function _0x528a3d(_0x5e820c, _0x319e46) {
                const _0x44cd66 = !_0x319e46 && _0x156538['_readableState']['objectMode'] ? _0x5e820c['toString']() : _0x5e820c;
                !_0x156538['push'](_0x44cd66) && (_0x1a7c3f = ![], _0x5e4265['_socket']['pause']());
            }), _0x5e4265['once']('error', function _0x1ed91c(_0x4a4724) {
                if (_0x156538['destroyed'])
                    return;
                _0x3277fb = ![], _0x156538['destroy'](_0x4a4724);
            }), _0x5e4265['once']('close', function _0x142be8() {
                if (_0x156538['destroyed'])
                    return;
                _0x156538['push'](null);
            }), _0x156538['_destroy'] = function (_0x518dea, _0x3b661d) {
                if (_0x5e4265['readyState'] === _0x5e4265['CLOSED']) {
                    _0x3b661d(_0x518dea), process['nextTick'](_0x2a024f, _0x156538);
                    return;
                }
                let _0x22d260 = ![];
                _0x5e4265['once']('error', function _0x33c54c(_0x54ba39) {
                    _0x22d260 = !![], _0x3b661d(_0x54ba39);
                }), _0x5e4265['once']('close', function _0x17b220() {
                    if (!_0x22d260)
                        _0x3b661d(_0x518dea);
                    process['nextTick'](_0x2a024f, _0x156538);
                });
                if (_0x3277fb)
                    _0x5e4265['terminate']();
            }, _0x156538['_final'] = function (_0x3adf57) {
                if (_0x5e4265['readyState'] === _0x5e4265['CONNECTING']) {
                    _0x5e4265['once']('open', function _0x329fb2() {
                        _0x156538['_final'](_0x3adf57);
                    });
                    return;
                }
                if (_0x5e4265['_socket'] === null)
                    return;
                if (_0x5e4265['_socket']['_writableState']['finished']) {
                    _0x3adf57();
                    if (_0x156538['_readableState']['endEmitted'])
                        _0x156538['destroy']();
                } else
                    _0x5e4265['_socket']['once']('finish', function _0x3ceb12() {
                        _0x3adf57();
                    }), _0x5e4265['close']();
            }, _0x156538['_read'] = function () {
                if (_0x5e4265['readyState'] === _0x5e4265['OPEN'] && !_0x1a7c3f) {
                    _0x1a7c3f = !![];
                    if (!_0x5e4265['_receiver']['_writableState']['needDrain'])
                        _0x5e4265['_socket']['resume']();
                }
            }, _0x156538['_write'] = function (_0x305a7b, _0xa21275, _0x16077d) {
                if (_0x5e4265['readyState'] === _0x5e4265['CONNECTING']) {
                    _0x5e4265['once']('open', function _0x1be5dc() {
                        _0x156538['_write'](_0x305a7b, _0xa21275, _0x16077d);
                    });
                    return;
                }
                _0x5e4265['send'](_0x305a7b, _0x16077d);
            }, _0x156538['on']('end', _0xda0d7d), _0x156538['on']('error', _0x2d997f), _0x156538;
        }
        _0x314f3d['exports'] = _0x505b84;
    },
    0xd3df: (_0x5b5f38, _0x3bb189, _0x1d4b80) => {
        'use strict';
        const {tokenChars: _0x2a3c66} = _0x1d4b80(0x1845);
        function _0x8ad73d(_0x1fe265) {
            const _0x3d99cd = new Set();
            let _0xbd6ab1 = -0x1, _0xaaa1f = -0x1, _0x455ddc = 0x0;
            for (_0x455ddc; _0x455ddc < _0x1fe265['length']; _0x455ddc++) {
                const _0x53b426 = _0x1fe265['charCodeAt'](_0x455ddc);
                if (_0xaaa1f === -0x1 && _0x2a3c66[_0x53b426] === 0x1) {
                    if (_0xbd6ab1 === -0x1)
                        _0xbd6ab1 = _0x455ddc;
                } else {
                    if (_0x455ddc !== 0x0 && (_0x53b426 === 0x20 || _0x53b426 === 0x9)) {
                        if (_0xaaa1f === -0x1 && _0xbd6ab1 !== -0x1)
                            _0xaaa1f = _0x455ddc;
                    } else {
                        if (_0x53b426 === 0x2c) {
                            if (_0xbd6ab1 === -0x1)
                                throw new SyntaxError('Unexpected\x20character\x20at\x20index\x20' + _0x455ddc);
                            if (_0xaaa1f === -0x1)
                                _0xaaa1f = _0x455ddc;
                            const _0x5437a6 = _0x1fe265['slice'](_0xbd6ab1, _0xaaa1f);
                            if (_0x3d99cd['has'](_0x5437a6))
                                throw new SyntaxError('The\x20\x22' + _0x5437a6 + '\x22\x20subprotocol\x20is\x20duplicated');
                            _0x3d99cd['add'](_0x5437a6), _0xbd6ab1 = _0xaaa1f = -0x1;
                        } else
                            throw new SyntaxError('Unexpected\x20character\x20at\x20index\x20' + _0x455ddc);
                    }
                }
            }
            if (_0xbd6ab1 === -0x1 || _0xaaa1f !== -0x1)
                throw new SyntaxError('Unexpected\x20end\x20of\x20input');
            const _0x3069ba = _0x1fe265['slice'](_0xbd6ab1, _0x455ddc);
            if (_0x3d99cd['has'](_0x3069ba))
                throw new SyntaxError('The\x20\x22' + _0x3069ba + '\x22\x20subprotocol\x20is\x20duplicated');
            return _0x3d99cd['add'](_0x3069ba), _0x3d99cd;
        }
        _0x5b5f38['exports'] = { 'parse': _0x8ad73d };
    },
    0x1845: (_0x4c5eee, _0x1a939d, _0x5b84df) => {
        'use strict';
        const _0x5dd302 = [
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x1,
            0x0,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x0,
            0x0,
            0x1,
            0x1,
            0x0,
            0x1,
            0x1,
            0x0,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x0,
            0x0,
            0x0,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x0,
            0x1,
            0x0,
            0x1,
            0x0
        ];
        function _0x51bc20(_0x5976bd) {
            return _0x5976bd >= 0x3e8 && _0x5976bd <= 0x3f6 && _0x5976bd !== 0x3ec && _0x5976bd !== 0x3ed && _0x5976bd !== 0x3ee || _0x5976bd >= 0xbb8 && _0x5976bd <= 0x1387;
        }
        function _0x343328(_0x1ac84c) {
            const _0x47b6ac = _0x1ac84c['length'];
            let _0x530410 = 0x0;
            while (_0x530410 < _0x47b6ac) {
                if ((_0x1ac84c[_0x530410] & 0x80) === 0x0)
                    _0x530410++;
                else {
                    if ((_0x1ac84c[_0x530410] & 0xe0) === 0xc0) {
                        if (_0x530410 + 0x1 === _0x47b6ac || (_0x1ac84c[_0x530410 + 0x1] & 0xc0) !== 0x80 || (_0x1ac84c[_0x530410] & 0xfe) === 0xc0)
                            return ![];
                        _0x530410 += 0x2;
                    } else {
                        if ((_0x1ac84c[_0x530410] & 0xf0) === 0xe0) {
                            if (_0x530410 + 0x2 >= _0x47b6ac || (_0x1ac84c[_0x530410 + 0x1] & 0xc0) !== 0x80 || (_0x1ac84c[_0x530410 + 0x2] & 0xc0) !== 0x80 || _0x1ac84c[_0x530410] === 0xe0 && (_0x1ac84c[_0x530410 + 0x1] & 0xe0) === 0x80 || _0x1ac84c[_0x530410] === 0xed && (_0x1ac84c[_0x530410 + 0x1] & 0xe0) === 0xa0)
                                return ![];
                            _0x530410 += 0x3;
                        } else {
                            if ((_0x1ac84c[_0x530410] & 0xf8) === 0xf0) {
                                if (_0x530410 + 0x3 >= _0x47b6ac || (_0x1ac84c[_0x530410 + 0x1] & 0xc0) !== 0x80 || (_0x1ac84c[_0x530410 + 0x2] & 0xc0) !== 0x80 || (_0x1ac84c[_0x530410 + 0x3] & 0xc0) !== 0x80 || _0x1ac84c[_0x530410] === 0xf0 && (_0x1ac84c[_0x530410 + 0x1] & 0xf0) === 0x80 || _0x1ac84c[_0x530410] === 0xf4 && _0x1ac84c[_0x530410 + 0x1] > 0x8f || _0x1ac84c[_0x530410] > 0xf4)
                                    return ![];
                                _0x530410 += 0x4;
                            } else
                                return ![];
                        }
                    }
                }
            }
            return !![];
        }
        try {
            const _0xb02cdd = _0x5b84df(0x8f6f);
            _0x4c5eee['exports'] = {
                'isValidStatusCode': _0x51bc20,
                'isValidUTF8'(_0x933475) {
                    return _0x933475['length'] < 0x96 ? _0x343328(_0x933475) : _0xb02cdd(_0x933475);
                },
                'tokenChars': _0x5dd302
            };
        } catch (_0x1f5bf5) {
            _0x4c5eee['exports'] = {
                'isValidStatusCode': _0x51bc20,
                'isValidUTF8': _0x343328,
                'tokenChars': _0x5dd302
            };
        }
    },
    0xd5e0: (_0x4ce06f, _0x551591, _0x230c6f) => {
        'use strict';
        const _0x1c352a = _0x230c6f(0x141b9), _0x492c5e = _0x230c6f(0x3575), _0x48becc = _0x230c6f(0x175c7), _0x361d94 = _0x230c6f(0xa350), _0x355f02 = _0x230c6f(0x5f54), {createHash: _0x34662e} = _0x230c6f(0x17e1), _0x2d44c7 = _0x230c6f(0x11319), _0x26b46c = _0x230c6f(0x9141), _0x4fc55c = _0x230c6f(0xd3df), _0x10100a = _0x230c6f(0x1088f), {
                GUID: _0x2794c8,
                kWebSocket: _0xeac014
            } = _0x230c6f(0x9d6d), _0xa57430 = /^[+/0-9A-Za-z]{22}==$/, _0x58138b = 0x0, _0x5bd4dd = 0x1, _0x471171 = 0x2;
        class _0xb007e1 extends _0x1c352a {
            constructor(_0x289694, _0x5bf49e) {
                super(), _0x289694 = {
                    'maxPayload': 0x64 * 0x400 * 0x400,
                    'skipUTF8Validation': ![],
                    'perMessageDeflate': ![],
                    'handleProtocols': null,
                    'clientTracking': !![],
                    'verifyClient': null,
                    'noServer': ![],
                    'backlog': null,
                    'server': null,
                    'host': null,
                    'path': null,
                    'port': null,
                    ..._0x289694
                };
                if (_0x289694['port'] == null && !_0x289694['server'] && !_0x289694['noServer'] || _0x289694['port'] != null && (_0x289694['server'] || _0x289694['noServer']) || _0x289694['server'] && _0x289694['noServer'])
                    throw new TypeError('One\x20and\x20only\x20one\x20of\x20the\x20\x22port\x22,\x20\x22server\x22,\x20or\x20\x22noServer\x22\x20options\x20' + 'must\x20be\x20specified');
                if (_0x289694['port'] != null)
                    this['_server'] = _0x492c5e['createServer']((_0xc6651, _0x352f9a) => {
                        const _0x25396c = _0x492c5e['STATUS_CODES'][0x1aa];
                        _0x352f9a['writeHead'](0x1aa, {
                            'Content-Length': _0x25396c['length'],
                            'Content-Type': 'text/plain'
                        }), _0x352f9a['end'](_0x25396c);
                    }), this['_server']['listen'](_0x289694['port'], _0x289694['host'], _0x289694['backlog'], _0x5bf49e);
                else
                    _0x289694['server'] && (this['_server'] = _0x289694['server']);
                if (this['_server']) {
                    const _0x5edf41 = this['emit']['bind'](this, 'connection');
                    this['_removeListeners'] = _0x4bd618(this['_server'], {
                        'listening': this['emit']['bind'](this, 'listening'),
                        'error': this['emit']['bind'](this, 'error'),
                        'upgrade': (_0x52df20, _0x4f1474, _0x4847a1) => {
                            this['handleUpgrade'](_0x52df20, _0x4f1474, _0x4847a1, _0x5edf41);
                        }
                    });
                }
                if (_0x289694['perMessageDeflate'] === !![])
                    _0x289694['perMessageDeflate'] = {};
                _0x289694['clientTracking'] && (this['clients'] = new Set(), this['_shouldEmitClose'] = ![]), this['options'] = _0x289694, this['_state'] = _0x58138b;
            }
            ['address']() {
                if (this['options']['noServer'])
                    throw new Error('The\x20server\x20is\x20operating\x20in\x20\x22noServer\x22\x20mode');
                if (!this['_server'])
                    return null;
                return this['_server']['address']();
            }
            ['close'](_0x4cd493) {
                if (this['_state'] === _0x471171) {
                    _0x4cd493 && this['once']('close', () => {
                        _0x4cd493(new Error('The\x20server\x20is\x20not\x20running'));
                    });
                    process['nextTick'](_0x117fe6, this);
                    return;
                }
                if (_0x4cd493)
                    this['once']('close', _0x4cd493);
                if (this['_state'] === _0x5bd4dd)
                    return;
                this['_state'] = _0x5bd4dd;
                if (this['options']['noServer'] || this['options']['server'])
                    this['_server'] && (this['_removeListeners'](), this['_removeListeners'] = this['_server'] = null), this['clients'] ? !this['clients']['size'] ? process['nextTick'](_0x117fe6, this) : this['_shouldEmitClose'] = !![] : process['nextTick'](_0x117fe6, this);
                else {
                    const _0x234dea = this['_server'];
                    this['_removeListeners'](), this['_removeListeners'] = this['_server'] = null, _0x234dea['close'](() => {
                        _0x117fe6(this);
                    });
                }
            }
            ['shouldHandle'](_0x52dd14) {
                if (this['options']['path']) {
                    const _0x596616 = _0x52dd14['url']['indexOf']('?'), _0x18f16c = _0x596616 !== -0x1 ? _0x52dd14['url']['slice'](0x0, _0x596616) : _0x52dd14['url'];
                    if (_0x18f16c !== this['options']['path'])
                        return ![];
                }
                return !![];
            }
            ['handleUpgrade'](_0x545946, _0x44eb89, _0x2d3ee5, _0x955d1a) {
                _0x44eb89['on']('error', _0x34b543);
                const _0x17340b = _0x545946['headers']['sec-websocket-key'] !== undefined ? _0x545946['headers']['sec-websocket-key'] : ![], _0x2c921e = +_0x545946['headers']['sec-websocket-version'];
                if (_0x545946['method'] !== 'GET' || _0x545946['headers']['upgrade']['toLowerCase']() !== 'websocket' || !_0x17340b || !_0xa57430['test'](_0x17340b) || _0x2c921e !== 0x8 && _0x2c921e !== 0xd || !this['shouldHandle'](_0x545946))
                    return _0x38bac8(_0x44eb89, 0x190);
                const _0x5d88dd = _0x545946['headers']['sec-websocket-protocol'];
                let _0x1dc36a = new Set();
                if (_0x5d88dd !== undefined)
                    try {
                        _0x1dc36a = _0x4fc55c['parse'](_0x5d88dd);
                    } catch (_0x50c380) {
                        return _0x38bac8(_0x44eb89, 0x190);
                    }
                const _0x370930 = _0x545946['headers']['sec-websocket-extensions'], _0x4e6f80 = {};
                if (this['options']['perMessageDeflate'] && _0x370930 !== undefined) {
                    const _0x21d152 = new _0x26b46c(this['options']['perMessageDeflate'], !![], this['options']['maxPayload']);
                    try {
                        const _0x7ec406 = _0x2d44c7['parse'](_0x370930);
                        _0x7ec406[_0x26b46c['extensionName']] && (_0x21d152['accept'](_0x7ec406[_0x26b46c['extensionName']]), _0x4e6f80[_0x26b46c['extensionName']] = _0x21d152);
                    } catch (_0x312a86) {
                        return _0x38bac8(_0x44eb89, 0x190);
                    }
                }
                if (this['options']['verifyClient']) {
                    const _0xde9c15 = {
                        'origin': _0x545946['headers']['' + (_0x2c921e === 0x8 ? 'sec-websocket-origin' : 'origin')],
                        'secure': !!(_0x545946['socket']['authorized'] || _0x545946['socket']['encrypted']),
                        'req': _0x545946
                    };
                    if (this['options']['verifyClient']['length'] === 0x2) {
                        this['options']['verifyClient'](_0xde9c15, (_0x5d91bc, _0x2b1267, _0x41b761, _0x21da51) => {
                            if (!_0x5d91bc)
                                return _0x38bac8(_0x44eb89, _0x2b1267 || 0x191, _0x41b761, _0x21da51);
                            this['completeUpgrade'](_0x4e6f80, _0x17340b, _0x1dc36a, _0x545946, _0x44eb89, _0x2d3ee5, _0x955d1a);
                        });
                        return;
                    }
                    if (!this['options']['verifyClient'](_0xde9c15))
                        return _0x38bac8(_0x44eb89, 0x191);
                }
                this['completeUpgrade'](_0x4e6f80, _0x17340b, _0x1dc36a, _0x545946, _0x44eb89, _0x2d3ee5, _0x955d1a);
            }
            ['completeUpgrade'](_0x37c612, _0xd06981, _0x273d71, _0x1fb655, _0x5963ec, _0x24a67a, _0x56ffcb) {
                if (!_0x5963ec['readable'] || !_0x5963ec['writable'])
                    return _0x5963ec['destroy']();
                if (_0x5963ec[_0xeac014])
                    throw new Error('server.handleUpgrade()\x20was\x20called\x20more\x20than\x20once\x20with\x20the\x20same\x20' + 'socket,\x20possibly\x20due\x20to\x20a\x20misconfiguration');
                if (this['_state'] > _0x58138b)
                    return _0x38bac8(_0x5963ec, 0x1f7);
                const _0x93d372 = _0x34662e('sha1')['update'](_0xd06981 + _0x2794c8)['digest']('base64'), _0x4d19d5 = [
                        'HTTP/1.1\x20101\x20Switching\x20Protocols',
                        'Upgrade:\x20websocket',
                        'Connection:\x20Upgrade',
                        'Sec-WebSocket-Accept:\x20' + _0x93d372
                    ], _0x52026a = new _0x10100a(null);
                if (_0x273d71['size']) {
                    const _0x30188e = this['options']['handleProtocols'] ? this['options']['handleProtocols'](_0x273d71, _0x1fb655) : _0x273d71['values']()['next']()['value'];
                    _0x30188e && (_0x4d19d5['push']('Sec-WebSocket-Protocol:\x20' + _0x30188e), _0x52026a['_protocol'] = _0x30188e);
                }
                if (_0x37c612[_0x26b46c['extensionName']]) {
                    const _0x3de557 = _0x37c612[_0x26b46c['extensionName']]['params'], _0x1c5823 = _0x2d44c7['format']({ [_0x26b46c['extensionName']]: [_0x3de557] });
                    _0x4d19d5['push']('Sec-WebSocket-Extensions:\x20' + _0x1c5823), _0x52026a['_extensions'] = _0x37c612;
                }
                this['emit']('headers', _0x4d19d5, _0x1fb655), _0x5963ec['write'](_0x4d19d5['concat']('\x0d\x0a')['join']('\x0d\x0a')), _0x5963ec['removeListener']('error', _0x34b543), _0x52026a['setSocket'](_0x5963ec, _0x24a67a, {
                    'maxPayload': this['options']['maxPayload'],
                    'skipUTF8Validation': this['options']['skipUTF8Validation']
                }), this['clients'] && (this['clients']['add'](_0x52026a), _0x52026a['on']('close', () => {
                    this['clients']['delete'](_0x52026a), this['_shouldEmitClose'] && !this['clients']['size'] && process['nextTick'](_0x117fe6, this);
                })), _0x56ffcb(_0x52026a, _0x1fb655);
            }
        }
        _0x4ce06f['exports'] = _0xb007e1;
        function _0x4bd618(_0x4cb66b, _0x503853) {
            for (const _0x50835c of Object['keys'](_0x503853))
                _0x4cb66b['on'](_0x50835c, _0x503853[_0x50835c]);
            return function _0x5351d3() {
                for (const _0x175154 of Object['keys'](_0x503853)) {
                    _0x4cb66b['removeListener'](_0x175154, _0x503853[_0x175154]);
                }
            };
        }
        function _0x117fe6(_0x4a2c38) {
            _0x4a2c38['_state'] = _0x471171, _0x4a2c38['emit']('close');
        }
        function _0x34b543() {
            this['destroy']();
        }
        function _0x38bac8(_0x16a70c, _0x2e7981, _0x1932b5, _0x3fbb64) {
            _0x16a70c['writable'] && (_0x1932b5 = _0x1932b5 || _0x492c5e['STATUS_CODES'][_0x2e7981], _0x3fbb64 = {
                'Connection': 'close',
                'Content-Type': 'text/html',
                'Content-Length': Buffer['byteLength'](_0x1932b5),
                ..._0x3fbb64
            }, _0x16a70c['write']('HTTP/1.1\x20' + _0x2e7981 + '\x20' + _0x492c5e['STATUS_CODES'][_0x2e7981] + '\x0d\x0a' + Object['keys'](_0x3fbb64)['map'](_0x1596cd => _0x1596cd + ':\x20' + _0x3fbb64[_0x1596cd])['join']('\x0d\x0a') + '\x0d\x0a\x0d\x0a' + _0x1932b5)), _0x16a70c['removeListener']('error', _0x34b543), _0x16a70c['destroy']();
        }
    },
    0x1088f: (_0x120019, _0x14859c, _0x4d171b) => {
        'use strict';
        const _0x5bf7a0 = _0x4d171b(0x141b9), _0x559da8 = _0x4d171b(0x175c7), _0x50f233 = _0x4d171b(0x3575), _0x3f6c4e = _0x4d171b(0xa350), _0xd20046 = _0x4d171b(0x5f54), {
                randomBytes: _0x173fd1,
                createHash: _0x31a872
            } = _0x4d171b(0x17e1), {Readable: _0x4f9507} = _0x4d171b(0x31ed), {URL: _0x152eba} = _0x4d171b(0xdfde), _0x5d1c5a = _0x4d171b(0x9141), _0x46d7e3 = _0x4d171b(0xf0a3), _0x184ec2 = _0x4d171b(0x11ed9), {
                BINARY_TYPES: _0x187aca,
                EMPTY_BUFFER: _0x21b6d9,
                GUID: _0x371858,
                kForOnEventAttribute: _0x86af42,
                kListener: _0x479d66,
                kStatusCode: _0x9e479f,
                kWebSocket: _0x37ec00,
                NOOP: _0x237654
            } = _0x4d171b(0x9d6d), {
                EventTarget: {
                    addEventListener: _0x170643,
                    removeEventListener: _0x5c96df
                }
            } = _0x4d171b(0x9695), {
                format: _0x50d22c,
                parse: _0x4c2c78
            } = _0x4d171b(0x11319), {toBuffer: _0x50ab95} = _0x4d171b(0x1206a), _0x4f0c06 = [
                'CONNECTING',
                'OPEN',
                'CLOSING',
                'CLOSED'
            ], _0x33b4a3 = /^[!#$%&'*+\-.0-9A-Z^_`|a-z~]+$/, _0x37571c = [
                0x8,
                0xd
            ], _0xcf5fea = 0x1e * 0x3e8;
        class _0x357112 extends _0x5bf7a0 {
            constructor(_0x490671, _0x58e59a, _0x638325) {
                super(), this['_binaryType'] = _0x187aca[0x0], this['_closeCode'] = 0x3ee, this['_closeFrameReceived'] = ![], this['_closeFrameSent'] = ![], this['_closeMessage'] = _0x21b6d9, this['_closeTimer'] = null, this['_extensions'] = {}, this['_protocol'] = '', this['_readyState'] = _0x357112['CONNECTING'], this['_receiver'] = null, this['_sender'] = null, this['_socket'] = null;
                if (_0x490671 !== null) {
                    this['_bufferedAmount'] = 0x0, this['_isServer'] = ![], this['_redirects'] = 0x0;
                    if (_0x58e59a === undefined)
                        _0x58e59a = [];
                    else
                        !Array['isArray'](_0x58e59a) && (typeof _0x58e59a === 'object' && _0x58e59a !== null ? (_0x638325 = _0x58e59a, _0x58e59a = []) : _0x58e59a = [_0x58e59a]);
                    _0x2dee2a(this, _0x490671, _0x58e59a, _0x638325);
                } else
                    this['_isServer'] = !![];
            }
            get ['binaryType']() {
                return this['_binaryType'];
            }
            set ['binaryType'](_0x3497e4) {
                if (!_0x187aca['includes'](_0x3497e4))
                    return;
                this['_binaryType'] = _0x3497e4;
                if (this['_receiver'])
                    this['_receiver']['_binaryType'] = _0x3497e4;
            }
            get ['bufferedAmount']() {
                if (!this['_socket'])
                    return this['_bufferedAmount'];
                return this['_socket']['_writableState']['length'] + this['_sender']['_bufferedBytes'];
            }
            get ['extensions']() {
                return Object['keys'](this['_extensions'])['join']();
            }
            get ['onclose']() {
                return null;
            }
            get ['onerror']() {
                return null;
            }
            get ['onopen']() {
                return null;
            }
            get ['onmessage']() {
                return null;
            }
            get ['protocol']() {
                return this['_protocol'];
            }
            get ['readyState']() {
                return this['_readyState'];
            }
            get ['url']() {
                return this['_url'];
            }
            ['setSocket'](_0x100fb6, _0x3cb0fb, _0x19e2f5) {
                const _0x3518ea = new _0x46d7e3({
                    'binaryType': this['binaryType'],
                    'extensions': this['_extensions'],
                    'isServer': this['_isServer'],
                    'maxPayload': _0x19e2f5['maxPayload'],
                    'skipUTF8Validation': _0x19e2f5['skipUTF8Validation']
                });
                this['_sender'] = new _0x184ec2(_0x100fb6, this['_extensions']), this['_receiver'] = _0x3518ea, this['_socket'] = _0x100fb6, _0x3518ea[_0x37ec00] = this, _0x100fb6[_0x37ec00] = this, _0x3518ea['on']('conclude', _0x5e7917), _0x3518ea['on']('drain', _0x5a304d), _0x3518ea['on']('error', _0x501b18), _0x3518ea['on']('message', _0x373429), _0x3518ea['on']('ping', _0x34afa6), _0x3518ea['on']('pong', _0xa36f5f), _0x100fb6['setTimeout'](0x0), _0x100fb6['setNoDelay']();
                if (_0x3cb0fb['length'] > 0x0)
                    _0x100fb6['unshift'](_0x3cb0fb);
                _0x100fb6['on']('close', _0x4baec1), _0x100fb6['on']('data', _0x49e0ca), _0x100fb6['on']('end', _0xfd2c06), _0x100fb6['on']('error', _0x2597c4), this['_readyState'] = _0x357112['OPEN'], this['emit']('open');
            }
            ['emitClose']() {
                if (!this['_socket']) {
                    this['_readyState'] = _0x357112['CLOSED'], this['emit']('close', this['_closeCode'], this['_closeMessage']);
                    return;
                }
                this['_extensions'][_0x5d1c5a['extensionName']] && this['_extensions'][_0x5d1c5a['extensionName']]['cleanup'](), this['_receiver']['removeAllListeners'](), this['_readyState'] = _0x357112['CLOSED'], this['emit']('close', this['_closeCode'], this['_closeMessage']);
            }
            ['close'](_0x27edf7, _0x2ec6c9) {
                if (this['readyState'] === _0x357112['CLOSED'])
                    return;
                if (this['readyState'] === _0x357112['CONNECTING']) {
                    const _0xee7411 = 'WebSocket\x20was\x20closed\x20before\x20the\x20connection\x20was\x20established';
                    return _0x41c8d7(this, this['_req'], _0xee7411);
                }
                if (this['readyState'] === _0x357112['CLOSING']) {
                    this['_closeFrameSent'] && (this['_closeFrameReceived'] || this['_receiver']['_writableState']['errorEmitted']) && this['_socket']['end']();
                    return;
                }
                this['_readyState'] = _0x357112['CLOSING'], this['_sender']['close'](_0x27edf7, _0x2ec6c9, !this['_isServer'], _0x148976 => {
                    if (_0x148976)
                        return;
                    this['_closeFrameSent'] = !![], (this['_closeFrameReceived'] || this['_receiver']['_writableState']['errorEmitted']) && this['_socket']['end']();
                }), this['_closeTimer'] = setTimeout(this['_socket']['destroy']['bind'](this['_socket']), _0xcf5fea);
            }
            ['ping'](_0x422ee3, _0x4b4d6d, _0x31b7ff) {
                if (this['readyState'] === _0x357112['CONNECTING'])
                    throw new Error('WebSocket\x20is\x20not\x20open:\x20readyState\x200\x20(CONNECTING)');
                if (typeof _0x422ee3 === 'function')
                    _0x31b7ff = _0x422ee3, _0x422ee3 = _0x4b4d6d = undefined;
                else
                    typeof _0x4b4d6d === 'function' && (_0x31b7ff = _0x4b4d6d, _0x4b4d6d = undefined);
                if (typeof _0x422ee3 === 'number')
                    _0x422ee3 = _0x422ee3['toString']();
                if (this['readyState'] !== _0x357112['OPEN']) {
                    _0x4e879a(this, _0x422ee3, _0x31b7ff);
                    return;
                }
                if (_0x4b4d6d === undefined)
                    _0x4b4d6d = !this['_isServer'];
                this['_sender']['ping'](_0x422ee3 || _0x21b6d9, _0x4b4d6d, _0x31b7ff);
            }
            ['pong'](_0x2a993f, _0x90e76d, _0x22857f) {
                if (this['readyState'] === _0x357112['CONNECTING'])
                    throw new Error('WebSocket\x20is\x20not\x20open:\x20readyState\x200\x20(CONNECTING)');
                if (typeof _0x2a993f === 'function')
                    _0x22857f = _0x2a993f, _0x2a993f = _0x90e76d = undefined;
                else
                    typeof _0x90e76d === 'function' && (_0x22857f = _0x90e76d, _0x90e76d = undefined);
                if (typeof _0x2a993f === 'number')
                    _0x2a993f = _0x2a993f['toString']();
                if (this['readyState'] !== _0x357112['OPEN']) {
                    _0x4e879a(this, _0x2a993f, _0x22857f);
                    return;
                }
                if (_0x90e76d === undefined)
                    _0x90e76d = !this['_isServer'];
                this['_sender']['pong'](_0x2a993f || _0x21b6d9, _0x90e76d, _0x22857f);
            }
            ['send'](_0x4f46c3, _0xc9c1a4, _0x132253) {
                if (this['readyState'] === _0x357112['CONNECTING'])
                    throw new Error('WebSocket\x20is\x20not\x20open:\x20readyState\x200\x20(CONNECTING)');
                typeof _0xc9c1a4 === 'function' && (_0x132253 = _0xc9c1a4, _0xc9c1a4 = {});
                if (typeof _0x4f46c3 === 'number')
                    _0x4f46c3 = _0x4f46c3['toString']();
                if (this['readyState'] !== _0x357112['OPEN']) {
                    _0x4e879a(this, _0x4f46c3, _0x132253);
                    return;
                }
                const _0x2e203a = {
                    'binary': typeof _0x4f46c3 !== 'string',
                    'mask': !this['_isServer'],
                    'compress': !![],
                    'fin': !![],
                    ..._0xc9c1a4
                };
                !this['_extensions'][_0x5d1c5a['extensionName']] && (_0x2e203a['compress'] = ![]), this['_sender']['send'](_0x4f46c3 || _0x21b6d9, _0x2e203a, _0x132253);
            }
            ['terminate']() {
                if (this['readyState'] === _0x357112['CLOSED'])
                    return;
                if (this['readyState'] === _0x357112['CONNECTING']) {
                    const _0x30c789 = 'WebSocket\x20was\x20closed\x20before\x20the\x20connection\x20was\x20established';
                    return _0x41c8d7(this, this['_req'], _0x30c789);
                }
                this['_socket'] && (this['_readyState'] = _0x357112['CLOSING'], this['_socket']['destroy']());
            }
        }
        Object['defineProperty'](_0x357112, 'CONNECTING', {
            'enumerable': !![],
            'value': _0x4f0c06['indexOf']('CONNECTING')
        }), Object['defineProperty'](_0x357112['prototype'], 'CONNECTING', {
            'enumerable': !![],
            'value': _0x4f0c06['indexOf']('CONNECTING')
        }), Object['defineProperty'](_0x357112, 'OPEN', {
            'enumerable': !![],
            'value': _0x4f0c06['indexOf']('OPEN')
        }), Object['defineProperty'](_0x357112['prototype'], 'OPEN', {
            'enumerable': !![],
            'value': _0x4f0c06['indexOf']('OPEN')
        }), Object['defineProperty'](_0x357112, 'CLOSING', {
            'enumerable': !![],
            'value': _0x4f0c06['indexOf']('CLOSING')
        }), Object['defineProperty'](_0x357112['prototype'], 'CLOSING', {
            'enumerable': !![],
            'value': _0x4f0c06['indexOf']('CLOSING')
        }), Object['defineProperty'](_0x357112, 'CLOSED', {
            'enumerable': !![],
            'value': _0x4f0c06['indexOf']('CLOSED')
        }), Object['defineProperty'](_0x357112['prototype'], 'CLOSED', {
            'enumerable': !![],
            'value': _0x4f0c06['indexOf']('CLOSED')
        }), [
            'binaryType',
            'bufferedAmount',
            'extensions',
            'protocol',
            'readyState',
            'url'
        ]['forEach'](_0xab6bcb => {
            Object['defineProperty'](_0x357112['prototype'], _0xab6bcb, { 'enumerable': !![] });
        }), [
            'open',
            'error',
            'close',
            'message'
        ]['forEach'](_0x6580d6 => {
            Object['defineProperty'](_0x357112['prototype'], 'on' + _0x6580d6, {
                'enumerable': !![],
                'get'() {
                    for (const _0x381483 of this['listeners'](_0x6580d6)) {
                        if (_0x381483[_0x86af42])
                            return _0x381483[_0x479d66];
                    }
                    return null;
                },
                'set'(_0x58d29f) {
                    for (const _0x335a73 of this['listeners'](_0x6580d6)) {
                        if (_0x335a73[_0x86af42]) {
                            this['removeListener'](_0x6580d6, _0x335a73);
                            break;
                        }
                    }
                    if (typeof _0x58d29f !== 'function')
                        return;
                    this['addEventListener'](_0x6580d6, _0x58d29f, { [_0x86af42]: !![] });
                }
            });
        }), _0x357112['prototype']['addEventListener'] = _0x170643, _0x357112['prototype']['removeEventListener'] = _0x5c96df, _0x120019['exports'] = _0x357112;
        function _0x2dee2a(_0x190c51, _0x273fd2, _0x29ae2c, _0x3aa10f) {
            const _0x2e071b = {
                'protocolVersion': _0x37571c[0x1],
                'maxPayload': 0x64 * 0x400 * 0x400,
                'skipUTF8Validation': ![],
                'perMessageDeflate': !![],
                'followRedirects': ![],
                'maxRedirects': 0xa,
                ..._0x3aa10f,
                'createConnection': undefined,
                'socketPath': undefined,
                'hostname': undefined,
                'protocol': undefined,
                'timeout': undefined,
                'method': undefined,
                'host': undefined,
                'path': undefined,
                'port': undefined
            };
            if (!_0x37571c['includes'](_0x2e071b['protocolVersion']))
                throw new RangeError('Unsupported\x20protocol\x20version:\x20' + _0x2e071b['protocolVersion'] + '\x20' + ('(supported\x20versions:\x20' + _0x37571c['join'](',\x20') + ')'));
            let _0x146360;
            if (_0x273fd2 instanceof _0x152eba)
                _0x146360 = _0x273fd2, _0x190c51['_url'] = _0x273fd2['href'];
            else {
                try {
                    _0x146360 = new _0x152eba(_0x273fd2);
                } catch (_0x108df7) {
                    throw new SyntaxError('Invalid\x20URL:\x20' + _0x273fd2);
                }
                _0x190c51['_url'] = _0x273fd2;
            }
            const _0x3f00cf = _0x146360['protocol'] === 'wss:', _0x3ef52b = _0x146360['protocol'] === 'ws+unix:';
            if (_0x146360['protocol'] !== 'ws:' && !_0x3f00cf && !_0x3ef52b)
                throw new SyntaxError('The\x20URL\x27s\x20protocol\x20must\x20be\x20one\x20of\x20\x22ws:\x22,\x20\x22wss:\x22,\x20or\x20\x22ws+unix:\x22');
            if (_0x3ef52b && !_0x146360['pathname'])
                throw new SyntaxError('The\x20URL\x27s\x20pathname\x20is\x20empty');
            if (_0x146360['hash'])
                throw new SyntaxError('The\x20URL\x20contains\x20a\x20fragment\x20identifier');
            const _0x18678d = _0x3f00cf ? 0x1bb : 0x50, _0x3c02c8 = _0x173fd1(0x10)['toString']('base64'), _0x362174 = _0x3f00cf ? _0x559da8['get'] : _0x50f233['get'], _0x16de6c = new Set();
            let _0x53a785;
            _0x2e071b['createConnection'] = _0x3f00cf ? _0x2b243b : _0x584ba6, _0x2e071b['defaultPort'] = _0x2e071b['defaultPort'] || _0x18678d, _0x2e071b['port'] = _0x146360['port'] || _0x18678d, _0x2e071b['host'] = _0x146360['hostname']['startsWith']('[') ? _0x146360['hostname']['slice'](0x1, -0x1) : _0x146360['hostname'], _0x2e071b['headers'] = {
                'Sec-WebSocket-Version': _0x2e071b['protocolVersion'],
                'Sec-WebSocket-Key': _0x3c02c8,
                'Connection': 'Upgrade',
                'Upgrade': 'websocket',
                ..._0x2e071b['headers']
            }, _0x2e071b['path'] = _0x146360['pathname'] + _0x146360['search'], _0x2e071b['timeout'] = _0x2e071b['handshakeTimeout'];
            _0x2e071b['perMessageDeflate'] && (_0x53a785 = new _0x5d1c5a(_0x2e071b['perMessageDeflate'] !== !![] ? _0x2e071b['perMessageDeflate'] : {}, ![], _0x2e071b['maxPayload']), _0x2e071b['headers']['Sec-WebSocket-Extensions'] = _0x50d22c({ [_0x5d1c5a['extensionName']]: _0x53a785['offer']() }));
            if (_0x29ae2c['length']) {
                for (const _0x375450 of _0x29ae2c) {
                    if (typeof _0x375450 !== 'string' || !_0x33b4a3['test'](_0x375450) || _0x16de6c['has'](_0x375450))
                        throw new SyntaxError('An\x20invalid\x20or\x20duplicated\x20subprotocol\x20was\x20specified');
                    _0x16de6c['add'](_0x375450);
                }
                _0x2e071b['headers']['Sec-WebSocket-Protocol'] = _0x29ae2c['join'](',');
            }
            _0x2e071b['origin'] && (_0x2e071b['protocolVersion'] < 0xd ? _0x2e071b['headers']['Sec-WebSocket-Origin'] = _0x2e071b['origin'] : _0x2e071b['headers']['Origin'] = _0x2e071b['origin']);
            (_0x146360['username'] || _0x146360['password']) && (_0x2e071b['auth'] = _0x146360['username'] + ':' + _0x146360['password']);
            if (_0x3ef52b) {
                const _0x465d1f = _0x2e071b['path']['split'](':');
                _0x2e071b['socketPath'] = _0x465d1f[0x0], _0x2e071b['path'] = _0x465d1f[0x1];
            }
            let _0x128a34 = _0x190c51['_req'] = _0x362174(_0x2e071b);
            _0x2e071b['timeout'] && _0x128a34['on']('timeout', () => {
                _0x41c8d7(_0x190c51, _0x128a34, 'Opening\x20handshake\x20has\x20timed\x20out');
            }), _0x128a34['on']('error', _0x1cebf7 => {
                if (_0x128a34 === null || _0x128a34['aborted'])
                    return;
                _0x128a34 = _0x190c51['_req'] = null, _0x190c51['_readyState'] = _0x357112['CLOSING'], _0x190c51['emit']('error', _0x1cebf7), _0x190c51['emitClose']();
            }), _0x128a34['on']('response', _0x5a7861 => {
                const _0x2ed750 = _0x5a7861['headers']['location'], _0x2921d5 = _0x5a7861['statusCode'];
                if (_0x2ed750 && _0x2e071b['followRedirects'] && _0x2921d5 >= 0x12c && _0x2921d5 < 0x190) {
                    if (++_0x190c51['_redirects'] > _0x2e071b['maxRedirects']) {
                        _0x41c8d7(_0x190c51, _0x128a34, 'Maximum\x20redirects\x20exceeded');
                        return;
                    }
                    _0x128a34['abort']();
                    const _0x3bdd5 = new _0x152eba(_0x2ed750, _0x273fd2);
                    _0x2dee2a(_0x190c51, _0x3bdd5, _0x29ae2c, _0x3aa10f);
                } else
                    !_0x190c51['emit']('unexpected-response', _0x128a34, _0x5a7861) && _0x41c8d7(_0x190c51, _0x128a34, 'Unexpected\x20server\x20response:\x20' + _0x5a7861['statusCode']);
            }), _0x128a34['on']('upgrade', (_0x470e90, _0x1ab0b6, _0x40dfec) => {
                _0x190c51['emit']('upgrade', _0x470e90);
                if (_0x190c51['readyState'] !== _0x357112['CONNECTING'])
                    return;
                _0x128a34 = _0x190c51['_req'] = null;
                const _0x313aed = _0x31a872('sha1')['update'](_0x3c02c8 + _0x371858)['digest']('base64');
                if (_0x470e90['headers']['sec-websocket-accept'] !== _0x313aed) {
                    _0x41c8d7(_0x190c51, _0x1ab0b6, 'Invalid\x20Sec-WebSocket-Accept\x20header');
                    return;
                }
                const _0x5428b2 = _0x470e90['headers']['sec-websocket-protocol'];
                let _0x43d18f;
                if (_0x5428b2 !== undefined) {
                    if (!_0x16de6c['size'])
                        _0x43d18f = 'Server\x20sent\x20a\x20subprotocol\x20but\x20none\x20was\x20requested';
                    else
                        !_0x16de6c['has'](_0x5428b2) && (_0x43d18f = 'Server\x20sent\x20an\x20invalid\x20subprotocol');
                } else
                    _0x16de6c['size'] && (_0x43d18f = 'Server\x20sent\x20no\x20subprotocol');
                if (_0x43d18f) {
                    _0x41c8d7(_0x190c51, _0x1ab0b6, _0x43d18f);
                    return;
                }
                if (_0x5428b2)
                    _0x190c51['_protocol'] = _0x5428b2;
                const _0x4acc6b = _0x470e90['headers']['sec-websocket-extensions'];
                if (_0x4acc6b !== undefined) {
                    if (!_0x53a785) {
                        const _0x5776ac = 'Server\x20sent\x20a\x20Sec-WebSocket-Extensions\x20header\x20but\x20no\x20extension\x20' + 'was\x20requested';
                        _0x41c8d7(_0x190c51, _0x1ab0b6, _0x5776ac);
                        return;
                    }
                    let _0x480257;
                    try {
                        _0x480257 = _0x4c2c78(_0x4acc6b);
                    } catch (_0x4dced4) {
                        const _0x8ff647 = 'Invalid\x20Sec-WebSocket-Extensions\x20header';
                        _0x41c8d7(_0x190c51, _0x1ab0b6, _0x8ff647);
                        return;
                    }
                    const _0x555590 = Object['keys'](_0x480257);
                    if (_0x555590['length'] !== 0x1 || _0x555590[0x0] !== _0x5d1c5a['extensionName']) {
                        const _0x2223f1 = 'Server\x20indicated\x20an\x20extension\x20that\x20was\x20not\x20requested';
                        _0x41c8d7(_0x190c51, _0x1ab0b6, _0x2223f1);
                        return;
                    }
                    try {
                        _0x53a785['accept'](_0x480257[_0x5d1c5a['extensionName']]);
                    } catch (_0x1b1f1d) {
                        const _0x47ceb1 = 'Invalid\x20Sec-WebSocket-Extensions\x20header';
                        _0x41c8d7(_0x190c51, _0x1ab0b6, _0x47ceb1);
                        return;
                    }
                    _0x190c51['_extensions'][_0x5d1c5a['extensionName']] = _0x53a785;
                }
                _0x190c51['setSocket'](_0x1ab0b6, _0x40dfec, {
                    'maxPayload': _0x2e071b['maxPayload'],
                    'skipUTF8Validation': _0x2e071b['skipUTF8Validation']
                });
            });
        }
        function _0x584ba6(_0x4ab115) {
            return _0x4ab115['path'] = _0x4ab115['socketPath'], _0x3f6c4e['connect'](_0x4ab115);
        }
        function _0x2b243b(_0x9906dc) {
            return _0x9906dc['path'] = undefined, !_0x9906dc['servername'] && _0x9906dc['servername'] !== '' && (_0x9906dc['servername'] = _0x3f6c4e['isIP'](_0x9906dc['host']) ? '' : _0x9906dc['host']), _0xd20046['connect'](_0x9906dc);
        }
        function _0x41c8d7(_0x58e6c6, _0x22d9d0, _0xd29487) {
            _0x58e6c6['_readyState'] = _0x357112['CLOSING'];
            const _0x49f060 = new Error(_0xd29487);
            Error['captureStackTrace'](_0x49f060, _0x41c8d7), _0x22d9d0['setHeader'] ? (_0x22d9d0['abort'](), _0x22d9d0['socket'] && !_0x22d9d0['socket']['destroyed'] && _0x22d9d0['socket']['destroy'](), _0x22d9d0['once']('abort', _0x58e6c6['emitClose']['bind'](_0x58e6c6)), _0x58e6c6['emit']('error', _0x49f060)) : (_0x22d9d0['destroy'](_0x49f060), _0x22d9d0['once']('error', _0x58e6c6['emit']['bind'](_0x58e6c6, 'error')), _0x22d9d0['once']('close', _0x58e6c6['emitClose']['bind'](_0x58e6c6)));
        }
        function _0x4e879a(_0x5b8825, _0x20bd93, _0x5ea90d) {
            if (_0x20bd93) {
                const _0x586593 = _0x50ab95(_0x20bd93)['length'];
                if (_0x5b8825['_socket'])
                    _0x5b8825['_sender']['_bufferedBytes'] += _0x586593;
                else
                    _0x5b8825['_bufferedAmount'] += _0x586593;
            }
            if (_0x5ea90d) {
                const _0x3b8f93 = new Error('WebSocket\x20is\x20not\x20open:\x20readyState\x20' + _0x5b8825['readyState'] + '\x20' + ('(' + _0x4f0c06[_0x5b8825['readyState']] + ')'));
                _0x5ea90d(_0x3b8f93);
            }
        }
        function _0x5e7917(_0x3e1eab, _0x21e2f0) {
            const _0xe477d4 = this[_0x37ec00];
            _0xe477d4['_closeFrameReceived'] = !![], _0xe477d4['_closeMessage'] = _0x21e2f0, _0xe477d4['_closeCode'] = _0x3e1eab;
            if (_0xe477d4['_socket'][_0x37ec00] === undefined)
                return;
            _0xe477d4['_socket']['removeListener']('data', _0x49e0ca), process['nextTick'](_0x899f49, _0xe477d4['_socket']);
            if (_0x3e1eab === 0x3ed)
                _0xe477d4['close']();
            else
                _0xe477d4['close'](_0x3e1eab, _0x21e2f0);
        }
        function _0x5a304d() {
            this[_0x37ec00]['_socket']['resume']();
        }
        function _0x501b18(_0x89e769) {
            const _0x270b71 = this[_0x37ec00];
            _0x270b71['_socket'][_0x37ec00] !== undefined && (_0x270b71['_socket']['removeListener']('data', _0x49e0ca), process['nextTick'](_0x899f49, _0x270b71['_socket']), _0x270b71['close'](_0x89e769[_0x9e479f])), _0x270b71['emit']('error', _0x89e769);
        }
        function _0xb083ec() {
            this[_0x37ec00]['emitClose']();
        }
        function _0x373429(_0x11bcd5, _0x1af050) {
            this[_0x37ec00]['emit']('message', _0x11bcd5, _0x1af050);
        }
        function _0x34afa6(_0x49e0d3) {
            const _0x5dbedb = this[_0x37ec00];
            _0x5dbedb['pong'](_0x49e0d3, !_0x5dbedb['_isServer'], _0x237654), _0x5dbedb['emit']('ping', _0x49e0d3);
        }
        function _0xa36f5f(_0x37e83c) {
            this[_0x37ec00]['emit']('pong', _0x37e83c);
        }
        function _0x899f49(_0x49156a) {
            _0x49156a['resume']();
        }
        function _0x4baec1() {
            const _0x59207d = this[_0x37ec00];
            this['removeListener']('close', _0x4baec1), this['removeListener']('data', _0x49e0ca), this['removeListener']('end', _0xfd2c06), _0x59207d['_readyState'] = _0x357112['CLOSING'];
            let _0x6198f4;
            !this['_readableState']['endEmitted'] && !_0x59207d['_closeFrameReceived'] && !_0x59207d['_receiver']['_writableState']['errorEmitted'] && (_0x6198f4 = _0x59207d['_socket']['read']()) !== null && _0x59207d['_receiver']['write'](_0x6198f4), _0x59207d['_receiver']['end'](), this[_0x37ec00] = undefined, clearTimeout(_0x59207d['_closeTimer']), _0x59207d['_receiver']['_writableState']['finished'] || _0x59207d['_receiver']['_writableState']['errorEmitted'] ? _0x59207d['emitClose']() : (_0x59207d['_receiver']['on']('error', _0xb083ec), _0x59207d['_receiver']['on']('finish', _0xb083ec));
        }
        function _0x49e0ca(_0x15599f) {
            !this[_0x37ec00]['_receiver']['write'](_0x15599f) && this['pause']();
        }
        function _0xfd2c06() {
            const _0x231c71 = this[_0x37ec00];
            _0x231c71['_readyState'] = _0x357112['CLOSING'], _0x231c71['_receiver']['end'](), this['end']();
        }
        function _0x2597c4() {
            const _0x4874ea = this[_0x37ec00];
            this['removeListener']('error', _0x2597c4), this['on']('error', _0x237654), _0x4874ea && (_0x4874ea['_readyState'] = _0x357112['CLOSING'], this['destroy']());
        }
    },
    0x48e1: (_0x7b7ec6, _0x4b9262) => {
        'use strict';
        Object['defineProperty'](_0x4b9262, '__esModule', { 'value': !![] }), _0x4b9262['ERROR_PACKET'] = _0x4b9262['PACKET_TYPES_REVERSE'] = _0x4b9262['PACKET_TYPES'] = void 0x0;
        const _0x2e4c7c = Object['create'](null);
        _0x4b9262['PACKET_TYPES'] = _0x2e4c7c, _0x2e4c7c['open'] = '0', _0x2e4c7c['close'] = '1', _0x2e4c7c['ping'] = '2', _0x2e4c7c['pong'] = '3', _0x2e4c7c['message'] = '4', _0x2e4c7c['upgrade'] = '5', _0x2e4c7c['noop'] = '6';
        const _0x50a3e3 = Object['create'](null);
        _0x4b9262['PACKET_TYPES_REVERSE'] = _0x50a3e3, Object['keys'](_0x2e4c7c)['forEach'](_0x557c2d => {
            _0x50a3e3[_0x2e4c7c[_0x557c2d]] = _0x557c2d;
        });
        const _0x390577 = {
            'type': 'error',
            'data': 'parser\x20error'
        };
        _0x4b9262['ERROR_PACKET'] = _0x390577;
    },
    0xb378: (_0x24b71b, _0x504af0, _0x3cfa88) => {
        'use strict';
        Object['defineProperty'](_0x504af0, '__esModule', { 'value': !![] });
        const _0x143f1a = _0x3cfa88(0x48e1), _0x26dbbd = (_0x3dfb06, _0x22e770) => {
                if (typeof _0x3dfb06 !== 'string')
                    return {
                        'type': 'message',
                        'data': _0x5c310c(_0x3dfb06, _0x22e770)
                    };
                const _0x312e3d = _0x3dfb06['charAt'](0x0);
                if (_0x312e3d === 'b') {
                    const _0x361a44 = Buffer['from'](_0x3dfb06['substring'](0x1), 'base64');
                    return {
                        'type': 'message',
                        'data': _0x5c310c(_0x361a44, _0x22e770)
                    };
                }
                if (!_0x143f1a['PACKET_TYPES_REVERSE'][_0x312e3d])
                    return _0x143f1a['ERROR_PACKET'];
                return _0x3dfb06['length'] > 0x1 ? {
                    'type': _0x143f1a['PACKET_TYPES_REVERSE'][_0x312e3d],
                    'data': _0x3dfb06['substring'](0x1)
                } : { 'type': _0x143f1a['PACKET_TYPES_REVERSE'][_0x312e3d] };
            }, _0x5c310c = (_0x3ccd13, _0x420f15) => {
                const _0x3032fc = Buffer['isBuffer'](_0x3ccd13);
                switch (_0x420f15) {
                case 'arraybuffer':
                    return _0x3032fc ? _0x538b49(_0x3ccd13) : _0x3ccd13;
                case 'nodebuffer':
                default:
                    return _0x3ccd13;
                }
            }, _0x538b49 = _0x1df68e => {
                const _0x3c3ac6 = new ArrayBuffer(_0x1df68e['length']), _0x16301c = new Uint8Array(_0x3c3ac6);
                for (let _0x5f58a1 = 0x0; _0x5f58a1 < _0x1df68e['length']; _0x5f58a1++) {
                    _0x16301c[_0x5f58a1] = _0x1df68e[_0x5f58a1];
                }
                return _0x3c3ac6;
            };
        _0x504af0['default'] = _0x26dbbd;
    },
    0x12b07: (_0x1523ea, _0x5e7dd7, _0x557b3c) => {
        'use strict';
        Object['defineProperty'](_0x5e7dd7, '__esModule', { 'value': !![] });
        const _0x59b1ef = _0x557b3c(0x48e1), _0x250c5a = ({
                type: _0x6c27d5,
                data: _0x1e4751
            }, _0x38293d, _0x3d1675) => {
                if (_0x1e4751 instanceof ArrayBuffer || ArrayBuffer['isView'](_0x1e4751)) {
                    const _0x3df19b = _0x197093(_0x1e4751);
                    return _0x3d1675(_0x352d50(_0x3df19b, _0x38293d));
                }
                return _0x3d1675(_0x59b1ef['PACKET_TYPES'][_0x6c27d5] + (_0x1e4751 || ''));
            }, _0x197093 = _0x2c13e9 => {
                if (Buffer['isBuffer'](_0x2c13e9))
                    return _0x2c13e9;
                else
                    return _0x2c13e9 instanceof ArrayBuffer ? Buffer['from'](_0x2c13e9) : Buffer['from'](_0x2c13e9['buffer'], _0x2c13e9['byteOffset'], _0x2c13e9['byteLength']);
            }, _0x352d50 = (_0x186617, _0x2a2d7e) => {
                return _0x2a2d7e ? _0x186617 : 'b' + _0x186617['toString']('base64');
            };
        _0x5e7dd7['default'] = _0x250c5a;
    },
    0xd949: (_0x2fb710, _0x4c443c, _0x56d936) => {
        'use strict';
        Object['defineProperty'](_0x4c443c, '__esModule', { 'value': !![] }), _0x4c443c['decodePayload'] = _0x4c443c['decodePacket'] = _0x4c443c['encodePayload'] = _0x4c443c['encodePacket'] = _0x4c443c['protocol'] = void 0x0;
        const _0xab2d2f = _0x56d936(0x12b07);
        _0x4c443c['encodePacket'] = _0xab2d2f['default'];
        const _0x570aac = _0x56d936(0xb378);
        _0x4c443c['decodePacket'] = _0x570aac['default'];
        const _0x5c59af = String['fromCharCode'](0x1e), _0x44e81c = (_0x3f0884, _0x2751e2) => {
                const _0x10cd86 = _0x3f0884['length'], _0x234e57 = new Array(_0x10cd86);
                let _0x1060f7 = 0x0;
                _0x3f0884['forEach']((_0x5e39b0, _0x5bc4d5) => {
                    (0x0, _0xab2d2f['default'])(_0x5e39b0, ![], _0x2a80d8 => {
                        _0x234e57[_0x5bc4d5] = _0x2a80d8, ++_0x1060f7 === _0x10cd86 && _0x2751e2(_0x234e57['join'](_0x5c59af));
                    });
                });
            };
        _0x4c443c['encodePayload'] = _0x44e81c;
        const _0x136fd6 = (_0x37f4af, _0x468fa8) => {
            const _0x624862 = _0x37f4af['split'](_0x5c59af), _0x399a88 = [];
            for (let _0x31ce8f = 0x0; _0x31ce8f < _0x624862['length']; _0x31ce8f++) {
                const _0x30bc56 = (0x0, _0x570aac['default'])(_0x624862[_0x31ce8f], _0x468fa8);
                _0x399a88['push'](_0x30bc56);
                if (_0x30bc56['type'] === 'error')
                    break;
            }
            return _0x399a88;
        };
        _0x4c443c['decodePayload'] = _0x136fd6, _0x4c443c['protocol'] = 0x4;
    },
    0xde23: (_0x53bf1e, _0x5480e2, _0x15abf9) => {
        'use strict';
        Object['defineProperty'](_0x5480e2, '__esModule', { 'value': !![] }), _0x5480e2['protocol'] = _0x5480e2['Transport'] = _0x5480e2['Socket'] = _0x5480e2['uServer'] = _0x5480e2['parser'] = _0x5480e2['attach'] = _0x5480e2['listen'] = _0x5480e2['transports'] = _0x5480e2['Server'] = void 0x0;
        const _0x2940a5 = _0x15abf9(0x3575), _0x470307 = _0x15abf9(0x4c03);
        Object['defineProperty'](_0x5480e2, 'Server', {
            'enumerable': !![],
            'get': function () {
                return _0x470307['Server'];
            }
        });
        const _0x3cc4b4 = _0x15abf9(0x2205);
        _0x5480e2['transports'] = _0x3cc4b4['default'];
        const _0x445f47 = _0x15abf9(0xd949);
        _0x5480e2['parser'] = _0x445f47;
        var _0xffb6bb = _0x15abf9(0xfbdd);
        Object['defineProperty'](_0x5480e2, 'uServer', {
            'enumerable': !![],
            'get': function () {
                return _0xffb6bb['uServer'];
            }
        });
        var _0x3a02be = _0x15abf9(0xc263);
        Object['defineProperty'](_0x5480e2, 'Socket', {
            'enumerable': !![],
            'get': function () {
                return _0x3a02be['Socket'];
            }
        });
        var _0x4eaaf3 = _0x15abf9(0x2f5a);
        Object['defineProperty'](_0x5480e2, 'Transport', {
            'enumerable': !![],
            'get': function () {
                return _0x4eaaf3['Transport'];
            }
        }), _0x5480e2['protocol'] = _0x445f47['protocol'];
        function _0x327255(_0x43417c, _0x366c2e, _0x2f5b3c) {
            'function' === typeof _0x366c2e && (_0x2f5b3c = _0x366c2e, _0x366c2e = {});
            const _0x38c5fa = (0x0, _0x2940a5['createServer'])(function (_0x1cda86, _0x2e6733) {
                    _0x2e6733['writeHead'](0x1f5), _0x2e6733['end']('Not\x20Implemented');
                }), _0x41cf04 = _0x2d2f0f(_0x38c5fa, _0x366c2e);
            return _0x41cf04['httpServer'] = _0x38c5fa, _0x38c5fa['listen'](_0x43417c, _0x2f5b3c), _0x41cf04;
        }
        _0x5480e2['listen'] = _0x327255;
        function _0x2d2f0f(_0x18a49e, _0x299061) {
            const _0x280ba6 = new _0x470307['Server'](_0x299061);
            return _0x280ba6['attach'](_0x18a49e, _0x299061), _0x280ba6;
        }
        _0x5480e2['attach'] = _0x2d2f0f;
    },
    0x3c42: (_0x1925c4, _0x30a8bd, _0x205785) => {
        'use strict';
        Object['defineProperty'](_0x30a8bd, '__esModule', { 'value': !![] }), _0x30a8bd['decodePayloadAsBinary'] = _0x30a8bd['encodePayloadAsBinary'] = _0x30a8bd['decodePayload'] = _0x30a8bd['encodePayload'] = _0x30a8bd['decodeBase64Packet'] = _0x30a8bd['decodePacket'] = _0x30a8bd['encodeBase64Packet'] = _0x30a8bd['encodePacket'] = _0x30a8bd['packets'] = _0x30a8bd['protocol'] = void 0x0;
        var _0x5f295e = _0x205785(0x161ad);
        _0x30a8bd['protocol'] = 0x3;
        const _0x46c10e = _0x359fa8 => {
            for (const _0x4495ba of _0x359fa8) {
                if (_0x4495ba['data'] instanceof ArrayBuffer || ArrayBuffer['isView'](_0x4495ba['data']))
                    return !![];
            }
            return ![];
        };
        _0x30a8bd['packets'] = {
            'open': 0x0,
            'close': 0x1,
            'ping': 0x2,
            'pong': 0x3,
            'message': 0x4,
            'upgrade': 0x5,
            'noop': 0x6
        };
        var _0x256fc2 = Object['keys'](_0x30a8bd['packets']), _0x6b8ec0 = {
                'type': 'error',
                'data': 'parser\x20error'
            };
        const _0x174457 = Buffer['concat']([]);
        function _0x4cc06e(_0xb0287b, _0x1229a9, _0xcde0f1, _0x42ee3f) {
            typeof _0x1229a9 === 'function' && (_0x42ee3f = _0x1229a9, _0x1229a9 = null);
            typeof _0xcde0f1 === 'function' && (_0x42ee3f = _0xcde0f1, _0xcde0f1 = null);
            if (Buffer['isBuffer'](_0xb0287b['data']))
                return _0x36b4d9(_0xb0287b, _0x1229a9, _0x42ee3f);
            else {
                if (_0xb0287b['data'] && (_0xb0287b['data']['buffer'] || _0xb0287b['data']) instanceof ArrayBuffer)
                    return _0x36b4d9({
                        'type': _0xb0287b['type'],
                        'data': _0x211555(_0xb0287b['data'])
                    }, _0x1229a9, _0x42ee3f);
            }
            var _0x280fe4 = _0x30a8bd['packets'][_0xb0287b['type']];
            return undefined !== _0xb0287b['data'] && (_0x280fe4 += _0xcde0f1 ? _0x5f295e['encode'](String(_0xb0287b['data']), { 'strict': ![] }) : String(_0xb0287b['data'])), _0x42ee3f('' + _0x280fe4);
        }
        _0x30a8bd['encodePacket'] = _0x4cc06e;
        ;
        function _0x36b4d9(_0x519290, _0x49c7a8, _0x536376) {
            if (!_0x49c7a8)
                return _0x7f18b3(_0x519290, _0x536376);
            var _0x3e1426 = _0x519290['data'], _0x3508b7 = Buffer['allocUnsafe'](0x1);
            return _0x3508b7[0x0] = _0x30a8bd['packets'][_0x519290['type']], _0x536376(Buffer['concat']([
                _0x3508b7,
                _0x3e1426
            ]));
        }
        function _0x7f18b3(_0x313cfd, _0x24b3db) {
            var _0x2e7b5f = Buffer['isBuffer'](_0x313cfd['data']) ? _0x313cfd['data'] : _0x211555(_0x313cfd['data']), _0x336ded = 'b' + _0x30a8bd['packets'][_0x313cfd['type']];
            return _0x336ded += _0x2e7b5f['toString']('base64'), _0x24b3db(_0x336ded);
        }
        _0x30a8bd['encodeBase64Packet'] = _0x7f18b3;
        ;
        function _0x4a778e(_0x3b1380, _0xaf68fe, _0x3364a2) {
            if (_0x3b1380 === undefined)
                return _0x6b8ec0;
            var _0x1cf6d7;
            if (typeof _0x3b1380 === 'string') {
                _0x1cf6d7 = _0x3b1380['charAt'](0x0);
                if (_0x1cf6d7 === 'b')
                    return _0x44e9ef(_0x3b1380['substr'](0x1), _0xaf68fe);
                if (_0x3364a2) {
                    _0x3b1380 = _0x585472(_0x3b1380);
                    if (_0x3b1380 === ![])
                        return _0x6b8ec0;
                }
                if (Number(_0x1cf6d7) != _0x1cf6d7 || !_0x256fc2[_0x1cf6d7])
                    return _0x6b8ec0;
                return _0x3b1380['length'] > 0x1 ? {
                    'type': _0x256fc2[_0x1cf6d7],
                    'data': _0x3b1380['substring'](0x1)
                } : { 'type': _0x256fc2[_0x1cf6d7] };
            }
            if (_0xaf68fe === 'arraybuffer') {
                var _0x410d8f = new Uint8Array(_0x3b1380);
                return _0x1cf6d7 = _0x410d8f[0x0], {
                    'type': _0x256fc2[_0x1cf6d7],
                    'data': _0x410d8f['buffer']['slice'](0x1)
                };
            }
            return _0x3b1380 instanceof ArrayBuffer && (_0x3b1380 = _0x211555(_0x3b1380)), _0x1cf6d7 = _0x3b1380[0x0], {
                'type': _0x256fc2[_0x1cf6d7],
                'data': _0x3b1380['slice'](0x1)
            };
        }
        _0x30a8bd['decodePacket'] = _0x4a778e;
        ;
        function _0x585472(_0x59031a) {
            try {
                _0x59031a = _0x5f295e['decode'](_0x59031a, { 'strict': ![] });
            } catch (_0x552192) {
                return ![];
            }
            return _0x59031a;
        }
        function _0x44e9ef(_0xf51e4d, _0xace3b6) {
            var _0x25c42c = _0x256fc2[_0xf51e4d['charAt'](0x0)], _0x1b6a8 = Buffer['from'](_0xf51e4d['substr'](0x1), 'base64');
            if (_0xace3b6 === 'arraybuffer') {
                var _0x271ce9 = new Uint8Array(_0x1b6a8['length']);
                for (var _0x49a377 = 0x0; _0x49a377 < _0x271ce9['length']; _0x49a377++) {
                    _0x271ce9[_0x49a377] = _0x1b6a8[_0x49a377];
                }
                _0x1b6a8 = _0x271ce9['buffer'];
            }
            return {
                'type': _0x25c42c,
                'data': _0x1b6a8
            };
        }
        _0x30a8bd['decodeBase64Packet'] = _0x44e9ef;
        ;
        function _0x588709(_0x3c2bb1, _0x29772d, _0x17a9c6) {
            typeof _0x29772d === 'function' && (_0x17a9c6 = _0x29772d, _0x29772d = null);
            if (_0x29772d && _0x46c10e(_0x3c2bb1))
                return _0x2c3f69(_0x3c2bb1, _0x17a9c6);
            if (!_0x3c2bb1['length'])
                return _0x17a9c6('0:');
            function _0x458a1b(_0x4e904c, _0x9a206a) {
                _0x4cc06e(_0x4e904c, _0x29772d, ![], function (_0x2df554) {
                    _0x9a206a(null, _0x336312(_0x2df554));
                });
            }
            _0x359c5f(_0x3c2bb1, _0x458a1b, function (_0xf96391, _0x33720e) {
                return _0x17a9c6(_0x33720e['join'](''));
            });
        }
        _0x30a8bd['encodePayload'] = _0x588709;
        ;
        function _0x336312(_0x3ab383) {
            return _0x3ab383['length'] + ':' + _0x3ab383;
        }
        function _0x359c5f(_0x31e755, _0x338d4, _0x306638) {
            const _0x5e53c0 = new Array(_0x31e755['length']);
            let _0x5b4c24 = 0x0;
            for (let _0x311ceb = 0x0; _0x311ceb < _0x31e755['length']; _0x311ceb++) {
                _0x338d4(_0x31e755[_0x311ceb], (_0x5b1d7e, _0x3aab79) => {
                    _0x5e53c0[_0x311ceb] = _0x3aab79, ++_0x5b4c24 === _0x31e755['length'] && _0x306638(null, _0x5e53c0);
                });
            }
        }
        function _0x380c9e(_0x3576f2, _0x1f63ab, _0x4a2b02) {
            if (typeof _0x3576f2 !== 'string')
                return _0x20245a(_0x3576f2, _0x1f63ab, _0x4a2b02);
            typeof _0x1f63ab === 'function' && (_0x4a2b02 = _0x1f63ab, _0x1f63ab = null);
            if (_0x3576f2 === '')
                return _0x4a2b02(_0x6b8ec0, 0x0, 0x1);
            var _0x830fc4 = '', _0x2c27db, _0x2c7c62, _0x1a20c0;
            for (var _0x4861c2 = 0x0, _0x53c47f = _0x3576f2['length']; _0x4861c2 < _0x53c47f; _0x4861c2++) {
                var _0x158517 = _0x3576f2['charAt'](_0x4861c2);
                if (_0x158517 !== ':') {
                    _0x830fc4 += _0x158517;
                    continue;
                }
                if (_0x830fc4 === '' || _0x830fc4 != (_0x2c27db = Number(_0x830fc4)))
                    return _0x4a2b02(_0x6b8ec0, 0x0, 0x1);
                _0x2c7c62 = _0x3576f2['substr'](_0x4861c2 + 0x1, _0x2c27db);
                if (_0x830fc4 != _0x2c7c62['length'])
                    return _0x4a2b02(_0x6b8ec0, 0x0, 0x1);
                if (_0x2c7c62['length']) {
                    _0x1a20c0 = _0x4a778e(_0x2c7c62, _0x1f63ab, ![]);
                    if (_0x6b8ec0['type'] === _0x1a20c0['type'] && _0x6b8ec0['data'] === _0x1a20c0['data'])
                        return _0x4a2b02(_0x6b8ec0, 0x0, 0x1);
                    var _0x8d738 = _0x4a2b02(_0x1a20c0, _0x4861c2 + _0x2c27db, _0x53c47f);
                    if (![] === _0x8d738)
                        return;
                }
                _0x4861c2 += _0x2c27db, _0x830fc4 = '';
            }
            if (_0x830fc4 !== '')
                return _0x4a2b02(_0x6b8ec0, 0x0, 0x1);
        }
        _0x30a8bd['decodePayload'] = _0x380c9e;
        ;
        function _0x243f23(_0xd5a1d7) {
            var _0x5c0520 = '';
            for (var _0x36fd74 = 0x0, _0x3bbe7a = _0xd5a1d7['length']; _0x36fd74 < _0x3bbe7a; _0x36fd74++) {
                _0x5c0520 += String['fromCharCode'](_0xd5a1d7[_0x36fd74]);
            }
            return _0x5c0520;
        }
        function _0x367bd1(_0x434687) {
            var _0x2bf8f8 = Buffer['allocUnsafe'](_0x434687['length']);
            for (var _0x727d43 = 0x0, _0x571b34 = _0x434687['length']; _0x727d43 < _0x571b34; _0x727d43++) {
                _0x2bf8f8['writeUInt8'](_0x434687['charCodeAt'](_0x727d43), _0x727d43);
            }
            return _0x2bf8f8;
        }
        function _0x211555(_0x4556e6) {
            var _0xd460e8 = _0x4556e6['byteLength'] || _0x4556e6['length'], _0x4d867f = _0x4556e6['byteOffset'] || 0x0;
            return Buffer['from'](_0x4556e6['buffer'] || _0x4556e6, _0x4d867f, _0xd460e8);
        }
        function _0x2c3f69(_0x494f51, _0xc0f741) {
            if (!_0x494f51['length'])
                return _0xc0f741(_0x174457);
            _0x359c5f(_0x494f51, _0x316e21, function (_0x78dc94, _0x109afa) {
                return _0xc0f741(Buffer['concat'](_0x109afa));
            });
        }
        _0x30a8bd['encodePayloadAsBinary'] = _0x2c3f69;
        ;
        function _0x316e21(_0x5cc13d, _0x30a172) {
            function _0x13beb1(_0x700217) {
                var _0x1dfb3d = '' + _0x700217['length'], _0x5b7137;
                if (typeof _0x700217 === 'string') {
                    _0x5b7137 = Buffer['allocUnsafe'](_0x1dfb3d['length'] + 0x2), _0x5b7137[0x0] = 0x0;
                    for (var _0x78b8ba = 0x0; _0x78b8ba < _0x1dfb3d['length']; _0x78b8ba++) {
                        _0x5b7137[_0x78b8ba + 0x1] = parseInt(_0x1dfb3d[_0x78b8ba], 0xa);
                    }
                    return _0x5b7137[_0x5b7137['length'] - 0x1] = 0xff, _0x30a172(null, Buffer['concat']([
                        _0x5b7137,
                        _0x367bd1(_0x700217)
                    ]));
                }
                _0x5b7137 = Buffer['allocUnsafe'](_0x1dfb3d['length'] + 0x2), _0x5b7137[0x0] = 0x1;
                for (var _0x78b8ba = 0x0; _0x78b8ba < _0x1dfb3d['length']; _0x78b8ba++) {
                    _0x5b7137[_0x78b8ba + 0x1] = parseInt(_0x1dfb3d[_0x78b8ba], 0xa);
                }
                _0x5b7137[_0x5b7137['length'] - 0x1] = 0xff, _0x30a172(null, Buffer['concat']([
                    _0x5b7137,
                    _0x700217
                ]));
            }
            _0x4cc06e(_0x5cc13d, !![], !![], _0x13beb1);
        }
        function _0x20245a(_0x49cab6, _0x456b0c, _0x3878f9) {
            typeof _0x456b0c === 'function' && (_0x3878f9 = _0x456b0c, _0x456b0c = null);
            var _0x48245c = _0x49cab6, _0x1dd853 = [], _0x45192c;
            while (_0x48245c['length'] > 0x0) {
                var _0x1d98a0 = '', _0x445f31 = _0x48245c[0x0] === 0x0;
                for (_0x45192c = 0x1;; _0x45192c++) {
                    if (_0x48245c[_0x45192c] === 0xff)
                        break;
                    if (_0x1d98a0['length'] > 0x136)
                        return _0x3878f9(_0x6b8ec0, 0x0, 0x1);
                    _0x1d98a0 += '' + _0x48245c[_0x45192c];
                }
                _0x48245c = _0x48245c['slice'](_0x1d98a0['length'] + 0x1);
                var _0x4c949c = parseInt(_0x1d98a0, 0xa), _0x2535a3 = _0x48245c['slice'](0x1, _0x4c949c + 0x1);
                if (_0x445f31)
                    _0x2535a3 = _0x243f23(_0x2535a3);
                _0x1dd853['push'](_0x2535a3), _0x48245c = _0x48245c['slice'](_0x4c949c + 0x1);
            }
            var _0x39dd9c = _0x1dd853['length'];
            for (_0x45192c = 0x0; _0x45192c < _0x39dd9c; _0x45192c++) {
                var _0x1dbc97 = _0x1dd853[_0x45192c];
                _0x3878f9(_0x4a778e(_0x1dbc97, _0x456b0c, !![]), _0x45192c, _0x39dd9c);
            }
        }
        _0x30a8bd['decodePayloadAsBinary'] = _0x20245a;
        ;
    },
    0x161ad: _0xb3f0d2 => {
        var _0x2a0995 = String['fromCharCode'];
        function _0x452bef(_0x1f0837) {
            var _0x434682 = [], _0x43685a = 0x0, _0x392eea = _0x1f0837['length'], _0x482fb9, _0x5026ef;
            while (_0x43685a < _0x392eea) {
                _0x482fb9 = _0x1f0837['charCodeAt'](_0x43685a++), _0x482fb9 >= 0xd800 && _0x482fb9 <= 0xdbff && _0x43685a < _0x392eea ? (_0x5026ef = _0x1f0837['charCodeAt'](_0x43685a++), (_0x5026ef & 0xfc00) == 0xdc00 ? _0x434682['push'](((_0x482fb9 & 0x3ff) << 0xa) + (_0x5026ef & 0x3ff) + 0x10000) : (_0x434682['push'](_0x482fb9), _0x43685a--)) : _0x434682['push'](_0x482fb9);
            }
            return _0x434682;
        }
        function _0x58ceb9(_0xa0a261) {
            var _0x664822 = _0xa0a261['length'], _0xcf1c4c = -0x1, _0x2e646c, _0x1c7f17 = '';
            while (++_0xcf1c4c < _0x664822) {
                _0x2e646c = _0xa0a261[_0xcf1c4c], _0x2e646c > 0xffff && (_0x2e646c -= 0x10000, _0x1c7f17 += _0x2a0995(_0x2e646c >>> 0xa & 0x3ff | 0xd800), _0x2e646c = 0xdc00 | _0x2e646c & 0x3ff), _0x1c7f17 += _0x2a0995(_0x2e646c);
            }
            return _0x1c7f17;
        }
        function _0x4a25a7(_0x1b9e15, _0x1920b4) {
            if (_0x1b9e15 >= 0xd800 && _0x1b9e15 <= 0xdfff) {
                if (_0x1920b4)
                    throw Error('Lone\x20surrogate\x20U+' + _0x1b9e15['toString'](0x10)['toUpperCase']() + '\x20is\x20not\x20a\x20scalar\x20value');
                return ![];
            }
            return !![];
        }
        function _0x2382b2(_0xfa09b0, _0x1805f7) {
            return _0x2a0995(_0xfa09b0 >> _0x1805f7 & 0x3f | 0x80);
        }
        function _0x59de62(_0x34680a, _0xcbd7d5) {
            if ((_0x34680a & 0xffffff80) == 0x0)
                return _0x2a0995(_0x34680a);
            var _0x345c4c = '';
            if ((_0x34680a & 0xfffff800) == 0x0)
                _0x345c4c = _0x2a0995(_0x34680a >> 0x6 & 0x1f | 0xc0);
            else {
                if ((_0x34680a & 0xffff0000) == 0x0)
                    !_0x4a25a7(_0x34680a, _0xcbd7d5) && (_0x34680a = 0xfffd), _0x345c4c = _0x2a0995(_0x34680a >> 0xc & 0xf | 0xe0), _0x345c4c += _0x2382b2(_0x34680a, 0x6);
                else
                    (_0x34680a & 0xffe00000) == 0x0 && (_0x345c4c = _0x2a0995(_0x34680a >> 0x12 & 0x7 | 0xf0), _0x345c4c += _0x2382b2(_0x34680a, 0xc), _0x345c4c += _0x2382b2(_0x34680a, 0x6));
            }
            return _0x345c4c += _0x2a0995(_0x34680a & 0x3f | 0x80), _0x345c4c;
        }
        function _0x34d676(_0x31d10c, _0x52c61a) {
            _0x52c61a = _0x52c61a || {};
            var _0x517258 = ![] !== _0x52c61a['strict'], _0x186242 = _0x452bef(_0x31d10c), _0x442e33 = _0x186242['length'], _0x36d917 = -0x1, _0x2ae810, _0x4d69ef = '';
            while (++_0x36d917 < _0x442e33) {
                _0x2ae810 = _0x186242[_0x36d917], _0x4d69ef += _0x59de62(_0x2ae810, _0x517258);
            }
            return _0x4d69ef;
        }
        function _0x446717() {
            if (_0x2d336b >= _0x2f9e6b)
                throw Error('Invalid\x20byte\x20index');
            var _0x51e2a7 = _0x27ce9c[_0x2d336b] & 0xff;
            _0x2d336b++;
            if ((_0x51e2a7 & 0xc0) == 0x80)
                return _0x51e2a7 & 0x3f;
            throw Error('Invalid\x20continuation\x20byte');
        }
        function _0xc42f91(_0x132924) {
            var _0x11083e, _0x3765f9, _0x238357, _0x3af36d, _0x1e99d5;
            if (_0x2d336b > _0x2f9e6b)
                throw Error('Invalid\x20byte\x20index');
            if (_0x2d336b == _0x2f9e6b)
                return ![];
            _0x11083e = _0x27ce9c[_0x2d336b] & 0xff, _0x2d336b++;
            if ((_0x11083e & 0x80) == 0x0)
                return _0x11083e;
            if ((_0x11083e & 0xe0) == 0xc0) {
                _0x3765f9 = _0x446717(), _0x1e99d5 = (_0x11083e & 0x1f) << 0x6 | _0x3765f9;
                if (_0x1e99d5 >= 0x80)
                    return _0x1e99d5;
                else
                    throw Error('Invalid\x20continuation\x20byte');
            }
            if ((_0x11083e & 0xf0) == 0xe0) {
                _0x3765f9 = _0x446717(), _0x238357 = _0x446717(), _0x1e99d5 = (_0x11083e & 0xf) << 0xc | _0x3765f9 << 0x6 | _0x238357;
                if (_0x1e99d5 >= 0x800)
                    return _0x4a25a7(_0x1e99d5, _0x132924) ? _0x1e99d5 : 0xfffd;
                else
                    throw Error('Invalid\x20continuation\x20byte');
            }
            if ((_0x11083e & 0xf8) == 0xf0) {
                _0x3765f9 = _0x446717(), _0x238357 = _0x446717(), _0x3af36d = _0x446717(), _0x1e99d5 = (_0x11083e & 0x7) << 0x12 | _0x3765f9 << 0xc | _0x238357 << 0x6 | _0x3af36d;
                if (_0x1e99d5 >= 0x10000 && _0x1e99d5 <= 0x10ffff)
                    return _0x1e99d5;
            }
            throw Error('Invalid\x20UTF-8\x20detected');
        }
        var _0x27ce9c, _0x2f9e6b, _0x2d336b;
        function _0x19108d(_0xf086, _0x11273b) {
            _0x11273b = _0x11273b || {};
            var _0x32c56e = ![] !== _0x11273b['strict'];
            _0x27ce9c = _0x452bef(_0xf086), _0x2f9e6b = _0x27ce9c['length'], _0x2d336b = 0x0;
            var _0x13cef0 = [], _0x20e30a;
            while ((_0x20e30a = _0xc42f91(_0x32c56e)) !== ![]) {
                _0x13cef0['push'](_0x20e30a);
            }
            return _0x58ceb9(_0x13cef0);
        }
        _0xb3f0d2['exports'] = {
            'version': '2.1.2',
            'encode': _0x34d676,
            'decode': _0x19108d
        };
    },
    0x4c03: (_0x1df39c, _0x5f5c61, _0x368a1b) => {
        'use strict';
        Object['defineProperty'](_0x5f5c61, '__esModule', { 'value': !![] }), _0x5f5c61['Server'] = _0x5f5c61['BaseServer'] = void 0x0;
        const _0x38888a = _0x368a1b(0xf7f5), _0x443ab7 = _0x368a1b(0xdfde), _0x44e9f5 = _0x368a1b(0x7384), _0x50f708 = _0x368a1b(0x2205), _0x3313b4 = _0x368a1b(0x141b9), _0x48af38 = _0x368a1b(0xc263), _0x10a2df = _0x368a1b(0x566b), _0x3770e7 = _0x368a1b(0x16c04), _0xc6bf86 = _0x368a1b(0xe61c), _0x23b55c = (0x0, _0x10a2df['default'])('engine');
        class _0x423fe6 extends _0x3313b4['EventEmitter'] {
            constructor(_0x4cab23 = {}) {
                super(), this['clients'] = {}, this['clientsCount'] = 0x0, this['opts'] = Object['assign']({
                    'wsEngine': _0xc6bf86['Server'],
                    'pingTimeout': 0x4e20,
                    'pingInterval': 0x61a8,
                    'upgradeTimeout': 0x2710,
                    'maxHttpBufferSize': 0xf4240,
                    'transports': Object['keys'](_0x50f708['default']),
                    'allowUpgrades': !![],
                    'httpCompression': { 'threshold': 0x400 },
                    'cors': ![],
                    'allowEIO3': ![]
                }, _0x4cab23), _0x4cab23['cookie'] && (this['opts']['cookie'] = Object['assign']({
                    'name': 'io',
                    'path': '/',
                    'httpOnly': _0x4cab23['cookie']['path'] !== ![],
                    'sameSite': 'lax'
                }, _0x4cab23['cookie'])), this['opts']['cors'] && (this['corsMiddleware'] = _0x368a1b(0x1642d)(this['opts']['cors'])), _0x4cab23['perMessageDeflate'] && (this['opts']['perMessageDeflate'] = Object['assign']({ 'threshold': 0x400 }, _0x4cab23['perMessageDeflate'])), this['init']();
            }
            ['upgrades'](_0x636ad1) {
                if (!this['opts']['allowUpgrades'])
                    return [];
                return _0x50f708['default'][_0x636ad1]['upgradesTo'] || [];
            }
            ['verify'](_0x323a56, _0x1aff57, _0x34ca88) {
                const _0x1acb6d = _0x323a56['_query']['transport'];
                if (!~this['opts']['transports']['indexOf'](_0x1acb6d))
                    return _0x23b55c('unknown\x20transport\x20\x22%s\x22', _0x1acb6d), _0x34ca88(_0x51deb4['errors']['UNKNOWN_TRANSPORT'], { 'transport': _0x1acb6d });
                const _0x40e246 = _0x1cebb8(_0x323a56['headers']['origin']);
                if (_0x40e246) {
                    const _0x4284e0 = _0x323a56['headers']['origin'];
                    return _0x323a56['headers']['origin'] = null, _0x23b55c('origin\x20header\x20invalid'), _0x34ca88(_0x51deb4['errors']['BAD_REQUEST'], {
                        'name': 'INVALID_ORIGIN',
                        'origin': _0x4284e0
                    });
                }
                const _0x49b6fa = _0x323a56['_query']['sid'];
                if (_0x49b6fa) {
                    if (!this['clients']['hasOwnProperty'](_0x49b6fa))
                        return _0x23b55c('unknown\x20sid\x20\x22%s\x22', _0x49b6fa), _0x34ca88(_0x51deb4['errors']['UNKNOWN_SID'], { 'sid': _0x49b6fa });
                    const _0x275641 = this['clients'][_0x49b6fa]['transport']['name'];
                    if (!_0x1aff57 && _0x275641 !== _0x1acb6d)
                        return _0x23b55c('bad\x20request:\x20unexpected\x20transport\x20without\x20upgrade'), _0x34ca88(_0x51deb4['errors']['BAD_REQUEST'], {
                            'name': 'TRANSPORT_MISMATCH',
                            'transport': _0x1acb6d,
                            'previousTransport': _0x275641
                        });
                } else {
                    if ('GET' !== _0x323a56['method'])
                        return _0x34ca88(_0x51deb4['errors']['BAD_HANDSHAKE_METHOD'], { 'method': _0x323a56['method'] });
                    if (_0x1acb6d === 'websocket' && !_0x1aff57)
                        return _0x23b55c('invalid\x20transport\x20upgrade'), _0x34ca88(_0x51deb4['errors']['BAD_REQUEST'], { 'name': 'TRANSPORT_HANDSHAKE_ERROR' });
                    if (!this['opts']['allowRequest'])
                        return _0x34ca88();
                    return this['opts']['allowRequest'](_0x323a56, (_0x3a9e6c, _0x11cb45) => {
                        if (!_0x11cb45)
                            return _0x34ca88(_0x51deb4['errors']['FORBIDDEN'], { 'message': _0x3a9e6c });
                        _0x34ca88();
                    });
                }
                _0x34ca88();
            }
            ['close']() {
                _0x23b55c('closing\x20all\x20open\x20clients');
                for (let _0x21f015 in this['clients']) {
                    this['clients']['hasOwnProperty'](_0x21f015) && this['clients'][_0x21f015]['close'](!![]);
                }
                return this['cleanup'](), this;
            }
            ['generateId'](_0x57453c) {
                return _0x44e9f5['generateId']();
            }
            async ['handshake'](_0x1d2017, _0x4f0dfb, _0x3aad1f) {
                const _0x153e28 = _0x4f0dfb['_query']['EIO'] === '4' ? 0x4 : 0x3;
                if (_0x153e28 === 0x3 && !this['opts']['allowEIO3']) {
                    _0x23b55c('unsupported\x20protocol\x20version'), this['emit']('connection_error', {
                        'req': _0x4f0dfb,
                        'code': _0x51deb4['errors']['UNSUPPORTED_PROTOCOL_VERSION'],
                        'message': _0x51deb4['errorMessages'][_0x51deb4['errors']['UNSUPPORTED_PROTOCOL_VERSION']],
                        'context': { 'protocol': _0x153e28 }
                    }), _0x3aad1f(_0x51deb4['errors']['UNSUPPORTED_PROTOCOL_VERSION']);
                    return;
                }
                let _0x319773;
                try {
                    _0x319773 = await this['generateId'](_0x4f0dfb);
                } catch (_0x19f16d) {
                    _0x23b55c('error\x20while\x20generating\x20an\x20id'), this['emit']('connection_error', {
                        'req': _0x4f0dfb,
                        'code': _0x51deb4['errors']['BAD_REQUEST'],
                        'message': _0x51deb4['errorMessages'][_0x51deb4['errors']['BAD_REQUEST']],
                        'context': {
                            'name': 'ID_GENERATION_ERROR',
                            'error': _0x19f16d
                        }
                    }), _0x3aad1f(_0x51deb4['errors']['BAD_REQUEST']);
                    return;
                }
                _0x23b55c('handshaking\x20client\x20\x22%s\x22', _0x319773);
                try {
                    var _0x4a839e = this['createTransport'](_0x1d2017, _0x4f0dfb);
                    if ('polling' === _0x1d2017)
                        _0x4a839e['maxHttpBufferSize'] = this['opts']['maxHttpBufferSize'], _0x4a839e['httpCompression'] = this['opts']['httpCompression'];
                    else
                        'websocket' === _0x1d2017 && (_0x4a839e['perMessageDeflate'] = this['opts']['perMessageDeflate']);
                    _0x4f0dfb['_query'] && _0x4f0dfb['_query']['b64'] ? _0x4a839e['supportsBinary'] = ![] : _0x4a839e['supportsBinary'] = !![];
                } catch (_0x48aca4) {
                    _0x23b55c('error\x20handshaking\x20to\x20transport\x20\x22%s\x22', _0x1d2017), this['emit']('connection_error', {
                        'req': _0x4f0dfb,
                        'code': _0x51deb4['errors']['BAD_REQUEST'],
                        'message': _0x51deb4['errorMessages'][_0x51deb4['errors']['BAD_REQUEST']],
                        'context': {
                            'name': 'TRANSPORT_HANDSHAKE_ERROR',
                            'error': _0x48aca4
                        }
                    }), _0x3aad1f(_0x51deb4['errors']['BAD_REQUEST']);
                    return;
                }
                const _0x5efca7 = new _0x48af38['Socket'](_0x319773, this, _0x4a839e, _0x4f0dfb, _0x153e28);
                return _0x4a839e['on']('headers', (_0x3f98c8, _0x2813be) => {
                    const _0x17cf17 = !_0x2813be['_query']['sid'];
                    _0x17cf17 && (this['opts']['cookie'] && (_0x3f98c8['Set-Cookie'] = [(0x0, _0x3770e7['serialize'])(this['opts']['cookie']['name'], _0x319773, this['opts']['cookie'])]), this['emit']('initial_headers', _0x3f98c8, _0x2813be)), this['emit']('headers', _0x3f98c8, _0x2813be);
                }), _0x4a839e['onRequest'](_0x4f0dfb), this['clients'][_0x319773] = _0x5efca7, this['clientsCount']++, _0x5efca7['once']('close', () => {
                    delete this['clients'][_0x319773], this['clientsCount']--;
                }), this['emit']('connection', _0x5efca7), _0x4a839e;
            }
        }
        _0x5f5c61['BaseServer'] = _0x423fe6, _0x423fe6['errors'] = {
            'UNKNOWN_TRANSPORT': 0x0,
            'UNKNOWN_SID': 0x1,
            'BAD_HANDSHAKE_METHOD': 0x2,
            'BAD_REQUEST': 0x3,
            'FORBIDDEN': 0x4,
            'UNSUPPORTED_PROTOCOL_VERSION': 0x5
        }, _0x423fe6['errorMessages'] = {
            0x0: 'Transport\x20unknown',
            0x1: 'Session\x20ID\x20unknown',
            0x2: 'Bad\x20handshake\x20method',
            0x3: 'Bad\x20request',
            0x4: 'Forbidden',
            0x5: 'Unsupported\x20protocol\x20version'
        };
        class _0x51deb4 extends _0x423fe6 {
            ['init']() {
                if (!~this['opts']['transports']['indexOf']('websocket'))
                    return;
                if (this['ws'])
                    this['ws']['close']();
                this['ws'] = new this['opts']['wsEngine']({
                    'noServer': !![],
                    'clientTracking': ![],
                    'perMessageDeflate': this['opts']['perMessageDeflate'],
                    'maxPayload': this['opts']['maxHttpBufferSize']
                }), typeof this['ws']['on'] === 'function' && this['ws']['on']('headers', (_0x47b54d, _0x567bb5) => {
                    const _0x19482e = {}, _0x16d9e1 = !_0x567bb5['_query']['sid'];
                    _0x16d9e1 && this['emit']('initial_headers', _0x19482e, _0x567bb5), this['emit']('headers', _0x19482e, _0x567bb5), Object['keys'](_0x19482e)['forEach'](_0x5ee67b => {
                        _0x47b54d['push'](_0x5ee67b + ':\x20' + _0x19482e[_0x5ee67b]);
                    });
                });
            }
            ['cleanup']() {
                this['ws'] && (_0x23b55c('closing\x20webSocketServer'), this['ws']['close']());
            }
            ['prepare'](_0x31bc3a) {
                !_0x31bc3a['_query'] && (_0x31bc3a['_query'] = ~_0x31bc3a['url']['indexOf']('?') ? _0x38888a['parse']((0x0, _0x443ab7['parse'])(_0x31bc3a['url'])['query']) : {});
            }
            ['createTransport'](_0xb415f6, _0x5bfd30) {
                return new _0x50f708['default'][_0xb415f6](_0x5bfd30);
            }
            ['handleRequest'](_0x2c35e5, _0x2f1b35) {
                _0x23b55c('handling\x20\x22%s\x22\x20http\x20request\x20\x22%s\x22', _0x2c35e5['method'], _0x2c35e5['url']), this['prepare'](_0x2c35e5), _0x2c35e5['res'] = _0x2f1b35;
                const _0xbda11d = (_0x2f6c07, _0x436e7d) => {
                    if (_0x2f6c07 !== undefined) {
                        this['emit']('connection_error', {
                            'req': _0x2c35e5,
                            'code': _0x2f6c07,
                            'message': _0x51deb4['errorMessages'][_0x2f6c07],
                            'context': _0x436e7d
                        }), _0x1991f7(_0x2f1b35, _0x2f6c07, _0x436e7d);
                        return;
                    }
                    if (_0x2c35e5['_query']['sid'])
                        _0x23b55c('setting\x20new\x20request\x20for\x20existing\x20client'), this['clients'][_0x2c35e5['_query']['sid']]['transport']['onRequest'](_0x2c35e5);
                    else {
                        const _0x46e905 = (_0x165ba1, _0x4dc6bb) => _0x1991f7(_0x2f1b35, _0x165ba1, _0x4dc6bb);
                        this['handshake'](_0x2c35e5['_query']['transport'], _0x2c35e5, _0x46e905);
                    }
                };
                this['corsMiddleware'] ? this['corsMiddleware']['call'](null, _0x2c35e5, _0x2f1b35, () => {
                    this['verify'](_0x2c35e5, ![], _0xbda11d);
                }) : this['verify'](_0x2c35e5, ![], _0xbda11d);
            }
            ['handleUpgrade'](_0x3f1b62, _0x19d7d1, _0x15b84f) {
                this['prepare'](_0x3f1b62), this['verify'](_0x3f1b62, !![], (_0x5ad166, _0x3f91e0) => {
                    if (_0x5ad166) {
                        this['emit']('connection_error', {
                            'req': _0x3f1b62,
                            'code': _0x5ad166,
                            'message': _0x51deb4['errorMessages'][_0x5ad166],
                            'context': _0x3f91e0
                        }), _0x5459f7(_0x19d7d1, _0x5ad166, _0x3f91e0);
                        return;
                    }
                    const _0x238502 = Buffer['from'](_0x15b84f);
                    _0x15b84f = null, this['ws']['handleUpgrade'](_0x3f1b62, _0x19d7d1, _0x238502, _0x4fab1f => {
                        this['onWebSocket'](_0x3f1b62, _0x19d7d1, _0x4fab1f);
                    });
                });
            }
            ['onWebSocket'](_0x24b8f9, _0xbd505f, _0x2eb95b) {
                _0x2eb95b['on']('error', _0x784aab);
                if (_0x50f708['default'][_0x24b8f9['_query']['transport']] !== undefined && !_0x50f708['default'][_0x24b8f9['_query']['transport']]['prototype']['handlesUpgrades']) {
                    _0x23b55c('transport\x20doesnt\x20handle\x20upgraded\x20requests'), _0x2eb95b['close']();
                    return;
                }
                const _0x3e2942 = _0x24b8f9['_query']['sid'];
                _0x24b8f9['websocket'] = _0x2eb95b;
                if (_0x3e2942) {
                    const _0x4ef021 = this['clients'][_0x3e2942];
                    if (!_0x4ef021)
                        _0x23b55c('upgrade\x20attempt\x20for\x20closed\x20client'), _0x2eb95b['close']();
                    else {
                        if (_0x4ef021['upgrading'])
                            _0x23b55c('transport\x20has\x20already\x20been\x20trying\x20to\x20upgrade'), _0x2eb95b['close']();
                        else {
                            if (_0x4ef021['upgraded'])
                                _0x23b55c('transport\x20had\x20already\x20been\x20upgraded'), _0x2eb95b['close']();
                            else {
                                _0x23b55c('upgrading\x20existing\x20transport'), _0x2eb95b['removeListener']('error', _0x784aab);
                                const _0x55c206 = this['createTransport'](_0x24b8f9['_query']['transport'], _0x24b8f9);
                                _0x24b8f9['_query'] && _0x24b8f9['_query']['b64'] ? _0x55c206['supportsBinary'] = ![] : _0x55c206['supportsBinary'] = !![], _0x55c206['perMessageDeflate'] = this['opts']['perMessageDeflate'], _0x4ef021['maybeUpgrade'](_0x55c206);
                            }
                        }
                    }
                } else {
                    const _0x255367 = (_0x1acf1d, _0x2bff0) => _0x5459f7(_0xbd505f, _0x1acf1d, _0x2bff0);
                    this['handshake'](_0x24b8f9['_query']['transport'], _0x24b8f9, _0x255367);
                }
                function _0x784aab() {
                    _0x23b55c('websocket\x20error\x20before\x20upgrade');
                }
            }
            ['attach'](_0x434008, _0x4e1c31 = {}) {
                let _0x47af49 = (_0x4e1c31['path'] || '/engine.io')['replace'](/\/$/, '');
                const _0x51c7d1 = _0x4e1c31['destroyUpgradeTimeout'] || 0x3e8;
                _0x47af49 += '/';
                function _0x175714(_0x2ad9e4) {
                    return _0x47af49 === _0x2ad9e4['url']['substr'](0x0, _0x47af49['length']);
                }
                const _0x58fdcc = _0x434008['listeners']('request')['slice'](0x0);
                _0x434008['removeAllListeners']('request'), _0x434008['on']('close', this['close']['bind'](this)), _0x434008['on']('listening', this['init']['bind'](this)), _0x434008['on']('request', (_0x58ba76, _0x2df925) => {
                    if (_0x175714(_0x58ba76))
                        _0x23b55c('intercepting\x20request\x20for\x20path\x20\x22%s\x22', _0x47af49), this['handleRequest'](_0x58ba76, _0x2df925);
                    else {
                        let _0x18327c = 0x0;
                        const _0x30d32d = _0x58fdcc['length'];
                        for (; _0x18327c < _0x30d32d; _0x18327c++) {
                            _0x58fdcc[_0x18327c]['call'](_0x434008, _0x58ba76, _0x2df925);
                        }
                    }
                }), ~this['opts']['transports']['indexOf']('websocket') && _0x434008['on']('upgrade', (_0x7dae7c, _0x5b8189, _0x7d962a) => {
                    if (_0x175714(_0x7dae7c))
                        this['handleUpgrade'](_0x7dae7c, _0x5b8189, _0x7d962a);
                    else
                        ![] !== _0x4e1c31['destroyUpgrade'] && setTimeout(function () {
                            if (_0x5b8189['writable'] && _0x5b8189['bytesWritten'] <= 0x0)
                                return _0x5b8189['end']();
                        }, _0x51c7d1);
                });
            }
        }
        _0x5f5c61['Server'] = _0x51deb4;
        function _0x1991f7(_0x46ddfb, _0x4d9ac4, _0x45ebfa) {
            const _0x12c61b = _0x4d9ac4 === _0x51deb4['errors']['FORBIDDEN'] ? 0x193 : 0x190, _0x22e772 = _0x45ebfa && _0x45ebfa['message'] ? _0x45ebfa['message'] : _0x51deb4['errorMessages'][_0x4d9ac4];
            _0x46ddfb['writeHead'](_0x12c61b, { 'Content-Type': 'application/json' }), _0x46ddfb['end'](JSON['stringify']({
                'code': _0x4d9ac4,
                'message': _0x22e772
            }));
        }
        function _0x5459f7(_0x56713a, _0x85510d, _0x384693 = {}) {
            _0x56713a['on']('error', () => {
                _0x23b55c('ignoring\x20error\x20from\x20closed\x20connection');
            });
            if (_0x56713a['writable']) {
                const _0x277837 = _0x384693['message'] || _0x51deb4['errorMessages'][_0x85510d], _0x29692f = Buffer['byteLength'](_0x277837);
                _0x56713a['write']('HTTP/1.1\x20400\x20Bad\x20Request\x0d\x0a' + 'Connection:\x20close\x0d\x0a' + 'Content-type:\x20text/html\x0d\x0a' + 'Content-Length:\x20' + _0x29692f + '\x0d\x0a' + '\x0d\x0a' + _0x277837);
            }
            _0x56713a['destroy']();
        }
        const _0x41e5f3 = [
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x1,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x0,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x0,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1,
            0x1
        ];
        function _0x1cebb8(_0x58505a) {
            _0x58505a += '';
            if (_0x58505a['length'] < 0x1)
                return ![];
            if (!_0x41e5f3[_0x58505a['charCodeAt'](0x0)])
                return _0x23b55c('invalid\x20header,\x20index\x200,\x20char\x20\x22%s\x22', _0x58505a['charCodeAt'](0x0)), !![];
            if (_0x58505a['length'] < 0x2)
                return ![];
            if (!_0x41e5f3[_0x58505a['charCodeAt'](0x1)])
                return _0x23b55c('invalid\x20header,\x20index\x201,\x20char\x20\x22%s\x22', _0x58505a['charCodeAt'](0x1)), !![];
            if (_0x58505a['length'] < 0x3)
                return ![];
            if (!_0x41e5f3[_0x58505a['charCodeAt'](0x2)])
                return _0x23b55c('invalid\x20header,\x20index\x202,\x20char\x20\x22%s\x22', _0x58505a['charCodeAt'](0x2)), !![];
            if (_0x58505a['length'] < 0x4)
                return ![];
            if (!_0x41e5f3[_0x58505a['charCodeAt'](0x3)])
                return _0x23b55c('invalid\x20header,\x20index\x203,\x20char\x20\x22%s\x22', _0x58505a['charCodeAt'](0x3)), !![];
            for (let _0x319d94 = 0x4; _0x319d94 < _0x58505a['length']; ++_0x319d94) {
                if (!_0x41e5f3[_0x58505a['charCodeAt'](_0x319d94)])
                    return _0x23b55c('invalid\x20header,\x20index\x20\x22%i\x22,\x20char\x20\x22%s\x22', _0x319d94, _0x58505a['charCodeAt'](_0x319d94)), !![];
            }
            return ![];
        }
    },
    0xc263: (_0x333943, _0x1273ba, _0x49e6ae) => {
        'use strict';
        Object['defineProperty'](_0x1273ba, '__esModule', { 'value': !![] }), _0x1273ba['Socket'] = void 0x0;
        const _0x38ed4d = _0x49e6ae(0x141b9), _0x11b8ea = _0x49e6ae(0x566b), _0x247b84 = _0x49e6ae(0x9a58), _0x5a0db8 = (0x0, _0x11b8ea['default'])('engine:socket');
        class _0x592f51 extends _0x38ed4d['EventEmitter'] {
            constructor(_0x3e773a, _0x47b64a, _0x45e234, _0x5e6045, _0x3f6791) {
                super(), this['id'] = _0x3e773a, this['server'] = _0x47b64a, this['upgrading'] = ![], this['upgraded'] = ![], this['readyState'] = 'opening', this['writeBuffer'] = [], this['packetsFn'] = [], this['sentCallbackFn'] = [], this['cleanupFn'] = [], this['request'] = _0x5e6045, this['protocol'] = _0x3f6791, _0x5e6045['websocket'] && _0x5e6045['websocket']['_socket'] ? this['remoteAddress'] = _0x5e6045['websocket']['_socket']['remoteAddress'] : this['remoteAddress'] = _0x5e6045['connection']['remoteAddress'], this['checkIntervalTimer'] = null, this['upgradeTimeoutTimer'] = null, this['pingTimeoutTimer'] = null, this['pingIntervalTimer'] = null, this['setTransport'](_0x45e234), this['onOpen']();
            }
            get ['readyState']() {
                return this['_readyState'];
            }
            set ['readyState'](_0x39f9be) {
                _0x5a0db8('readyState\x20updated\x20from\x20%s\x20to\x20%s', this['_readyState'], _0x39f9be), this['_readyState'] = _0x39f9be;
            }
            ['onOpen']() {
                this['readyState'] = 'open', this['transport']['sid'] = this['id'], this['sendPacket']('open', JSON['stringify']({
                    'sid': this['id'],
                    'upgrades': this['getAvailableUpgrades'](),
                    'pingInterval': this['server']['opts']['pingInterval'],
                    'pingTimeout': this['server']['opts']['pingTimeout'],
                    'maxPayload': this['server']['opts']['maxHttpBufferSize']
                })), this['server']['opts']['initialPacket'] && this['sendPacket']('message', this['server']['opts']['initialPacket']), this['emit']('open'), this['protocol'] === 0x3 ? this['resetPingTimeout'](this['server']['opts']['pingInterval'] + this['server']['opts']['pingTimeout']) : this['schedulePing']();
            }
            ['onPacket'](_0x2f30a5) {
                if ('open' !== this['readyState'])
                    return _0x5a0db8('packet\x20received\x20with\x20closed\x20socket');
                _0x5a0db8('received\x20packet\x20' + _0x2f30a5['type']), this['emit']('packet', _0x2f30a5), this['resetPingTimeout'](this['server']['opts']['pingInterval'] + this['server']['opts']['pingTimeout']);
                switch (_0x2f30a5['type']) {
                case 'ping':
                    if (this['transport']['protocol'] !== 0x3) {
                        this['onError']('invalid\x20heartbeat\x20direction');
                        return;
                    }
                    _0x5a0db8('got\x20ping'), this['sendPacket']('pong'), this['emit']('heartbeat');
                    break;
                case 'pong':
                    if (this['transport']['protocol'] === 0x3) {
                        this['onError']('invalid\x20heartbeat\x20direction');
                        return;
                    }
                    _0x5a0db8('got\x20pong'), this['pingIntervalTimer']['refresh'](), this['emit']('heartbeat');
                    break;
                case 'error':
                    this['onClose']('parse\x20error');
                    break;
                case 'message':
                    this['emit']('data', _0x2f30a5['data']), this['emit']('message', _0x2f30a5['data']);
                    break;
                }
            }
            ['onError'](_0x17a123) {
                _0x5a0db8('transport\x20error'), this['onClose']('transport\x20error', _0x17a123);
            }
            ['schedulePing']() {
                this['pingIntervalTimer'] = (0x0, _0x247b84['setTimeout'])(() => {
                    _0x5a0db8('writing\x20ping\x20packet\x20-\x20expecting\x20pong\x20within\x20%sms', this['server']['opts']['pingTimeout']), this['sendPacket']('ping'), this['resetPingTimeout'](this['server']['opts']['pingTimeout']);
                }, this['server']['opts']['pingInterval']);
            }
            ['resetPingTimeout'](_0x558ffb) {
                (0x0, _0x247b84['clearTimeout'])(this['pingTimeoutTimer']), this['pingTimeoutTimer'] = (0x0, _0x247b84['setTimeout'])(() => {
                    if (this['readyState'] === 'closed')
                        return;
                    this['onClose']('ping\x20timeout');
                }, _0x558ffb);
            }
            ['setTransport'](_0x2a3f28) {
                const _0xe20ecc = this['onError']['bind'](this), _0x4db43b = this['onPacket']['bind'](this), _0x43421a = this['flush']['bind'](this), _0x284943 = this['onClose']['bind'](this, 'transport\x20close');
                this['transport'] = _0x2a3f28, this['transport']['once']('error', _0xe20ecc), this['transport']['on']('packet', _0x4db43b), this['transport']['on']('drain', _0x43421a), this['transport']['once']('close', _0x284943), this['setupSendCallback'](), this['cleanupFn']['push'](function () {
                    _0x2a3f28['removeListener']('error', _0xe20ecc), _0x2a3f28['removeListener']('packet', _0x4db43b), _0x2a3f28['removeListener']('drain', _0x43421a), _0x2a3f28['removeListener']('close', _0x284943);
                });
            }
            ['maybeUpgrade'](_0x3d922d) {
                _0x5a0db8('might\x20upgrade\x20socket\x20transport\x20from\x20\x22%s\x22\x20to\x20\x22%s\x22', this['transport']['name'], _0x3d922d['name']), this['upgrading'] = !![], this['upgradeTimeoutTimer'] = (0x0, _0x247b84['setTimeout'])(() => {
                    _0x5a0db8('client\x20did\x20not\x20complete\x20upgrade\x20-\x20closing\x20transport'), _0xd1df3f(), 'open' === _0x3d922d['readyState'] && _0x3d922d['close']();
                }, this['server']['opts']['upgradeTimeout']);
                const _0x302c62 = _0x4e8d5b => {
                        if ('ping' === _0x4e8d5b['type'] && 'probe' === _0x4e8d5b['data'])
                            _0x5a0db8('got\x20probe\x20ping\x20packet,\x20sending\x20pong'), _0x3d922d['send']([{
                                    'type': 'pong',
                                    'data': 'probe'
                                }]), this['emit']('upgrading', _0x3d922d), clearInterval(this['checkIntervalTimer']), this['checkIntervalTimer'] = setInterval(_0x37629f, 0x64);
                        else
                            'upgrade' === _0x4e8d5b['type'] && this['readyState'] !== 'closed' ? (_0x5a0db8('got\x20upgrade\x20packet\x20-\x20upgrading'), _0xd1df3f(), this['transport']['discard'](), this['upgraded'] = !![], this['clearTransport'](), this['setTransport'](_0x3d922d), this['emit']('upgrade', _0x3d922d), this['flush'](), this['readyState'] === 'closing' && _0x3d922d['close'](() => {
                                this['onClose']('forced\x20close');
                            })) : (_0xd1df3f(), _0x3d922d['close']());
                    }, _0x37629f = () => {
                        'polling' === this['transport']['name'] && this['transport']['writable'] && (_0x5a0db8('writing\x20a\x20noop\x20packet\x20to\x20polling\x20for\x20fast\x20upgrade'), this['transport']['send']([{ 'type': 'noop' }]));
                    }, _0xd1df3f = () => {
                        this['upgrading'] = ![], clearInterval(this['checkIntervalTimer']), this['checkIntervalTimer'] = null, (0x0, _0x247b84['clearTimeout'])(this['upgradeTimeoutTimer']), this['upgradeTimeoutTimer'] = null, _0x3d922d['removeListener']('packet', _0x302c62), _0x3d922d['removeListener']('close', _0x5ea352), _0x3d922d['removeListener']('error', _0x20e9c4), this['removeListener']('close', _0x4bda92);
                    }, _0x20e9c4 = _0x35f4b3 => {
                        _0x5a0db8('client\x20did\x20not\x20complete\x20upgrade\x20-\x20%s', _0x35f4b3), _0xd1df3f(), _0x3d922d['close'](), _0x3d922d = null;
                    }, _0x5ea352 = () => {
                        _0x20e9c4('transport\x20closed');
                    }, _0x4bda92 = () => {
                        _0x20e9c4('socket\x20closed');
                    };
                _0x3d922d['on']('packet', _0x302c62), _0x3d922d['once']('close', _0x5ea352), _0x3d922d['once']('error', _0x20e9c4), this['once']('close', _0x4bda92);
            }
            ['clearTransport']() {
                let _0x443872;
                const _0x3122a6 = this['cleanupFn']['length'];
                for (let _0x559ce8 = 0x0; _0x559ce8 < _0x3122a6; _0x559ce8++) {
                    _0x443872 = this['cleanupFn']['shift'](), _0x443872();
                }
                this['transport']['on']('error', function () {
                    _0x5a0db8('error\x20triggered\x20by\x20discarded\x20transport');
                }), this['transport']['close'](), (0x0, _0x247b84['clearTimeout'])(this['pingTimeoutTimer']);
            }
            ['onClose'](_0x1b8ef5, _0x4e2240) {
                'closed' !== this['readyState'] && (this['readyState'] = 'closed', (0x0, _0x247b84['clearTimeout'])(this['pingIntervalTimer']), (0x0, _0x247b84['clearTimeout'])(this['pingTimeoutTimer']), clearInterval(this['checkIntervalTimer']), this['checkIntervalTimer'] = null, (0x0, _0x247b84['clearTimeout'])(this['upgradeTimeoutTimer']), process['nextTick'](() => {
                    this['writeBuffer'] = [];
                }), this['packetsFn'] = [], this['sentCallbackFn'] = [], this['clearTransport'](), this['emit']('close', _0x1b8ef5, _0x4e2240));
            }
            ['setupSendCallback']() {
                const _0x1223fc = () => {
                    if (this['sentCallbackFn']['length'] > 0x0) {
                        const _0x331610 = this['sentCallbackFn']['splice'](0x0, 0x1)[0x0];
                        if ('function' === typeof _0x331610)
                            _0x5a0db8('executing\x20send\x20callback'), _0x331610(this['transport']);
                        else {
                            if (Array['isArray'](_0x331610)) {
                                _0x5a0db8('executing\x20batch\x20send\x20callback');
                                const _0x557138 = _0x331610['length'];
                                let _0x33f6c8 = 0x0;
                                for (; _0x33f6c8 < _0x557138; _0x33f6c8++) {
                                    'function' === typeof _0x331610[_0x33f6c8] && _0x331610[_0x33f6c8](this['transport']);
                                }
                            }
                        }
                    }
                };
                this['transport']['on']('drain', _0x1223fc), this['cleanupFn']['push'](() => {
                    this['transport']['removeListener']('drain', _0x1223fc);
                });
            }
            ['send'](_0xb5bee8, _0x425708, _0x392853) {
                return this['sendPacket']('message', _0xb5bee8, _0x425708, _0x392853), this;
            }
            ['write'](_0x540164, _0x2484af, _0x5261d8) {
                return this['sendPacket']('message', _0x540164, _0x2484af, _0x5261d8), this;
            }
            ['sendPacket'](_0x23c20a, _0x357afa, _0x40c7b4, _0x581600) {
                'function' === typeof _0x40c7b4 && (_0x581600 = _0x40c7b4, _0x40c7b4 = null);
                _0x40c7b4 = _0x40c7b4 || {}, _0x40c7b4['compress'] = ![] !== _0x40c7b4['compress'];
                if ('closing' !== this['readyState'] && 'closed' !== this['readyState']) {
                    _0x5a0db8('sending\x20packet\x20\x22%s\x22\x20(%s)', _0x23c20a, _0x357afa);
                    const _0x34d978 = {
                        'type': _0x23c20a,
                        'options': _0x40c7b4
                    };
                    if (_0x357afa)
                        _0x34d978['data'] = _0x357afa;
                    this['emit']('packetCreate', _0x34d978), this['writeBuffer']['push'](_0x34d978);
                    if (_0x581600)
                        this['packetsFn']['push'](_0x581600);
                    this['flush']();
                }
            }
            ['flush']() {
                if ('closed' !== this['readyState'] && this['transport']['writable'] && this['writeBuffer']['length']) {
                    _0x5a0db8('flushing\x20buffer\x20to\x20transport'), this['emit']('flush', this['writeBuffer']), this['server']['emit']('flush', this, this['writeBuffer']);
                    const _0x97f914 = this['writeBuffer'];
                    this['writeBuffer'] = [], !this['transport']['supportsFraming'] ? this['sentCallbackFn']['push'](this['packetsFn']) : this['sentCallbackFn']['push']['apply'](this['sentCallbackFn'], this['packetsFn']), this['packetsFn'] = [], this['transport']['send'](_0x97f914), this['emit']('drain'), this['server']['emit']('drain', this);
                }
            }
            ['getAvailableUpgrades']() {
                const _0x246bc5 = [], _0xa45abf = this['server']['upgrades'](this['transport']['name']);
                let _0x402954 = 0x0;
                const _0x4d5e2b = _0xa45abf['length'];
                for (; _0x402954 < _0x4d5e2b; ++_0x402954) {
                    const _0x5cf995 = _0xa45abf[_0x402954];
                    this['server']['opts']['transports']['indexOf'](_0x5cf995) !== -0x1 && _0x246bc5['push'](_0x5cf995);
                }
                return _0x246bc5;
            }
            ['close'](_0x1ca224) {
                if ('open' !== this['readyState'])
                    return;
                this['readyState'] = 'closing';
                if (this['writeBuffer']['length']) {
                    this['once']('drain', this['closeTransport']['bind'](this, _0x1ca224));
                    return;
                }
                this['closeTransport'](_0x1ca224);
            }
            ['closeTransport'](_0x4ffdf7) {
                if (_0x4ffdf7)
                    this['transport']['discard']();
                this['transport']['close'](this['onClose']['bind'](this, 'forced\x20close'));
            }
        }
        _0x1273ba['Socket'] = _0x592f51;
    },
    0x2f5a: (_0x489aa0, _0x4e3d74, _0x1285d3) => {
        'use strict';
        Object['defineProperty'](_0x4e3d74, '__esModule', { 'value': !![] }), _0x4e3d74['Transport'] = void 0x0;
        const _0x1d813d = _0x1285d3(0x141b9), _0x1c88cd = _0x1285d3(0xd949), _0x325818 = _0x1285d3(0x3c42), _0x578280 = _0x1285d3(0x566b), _0x50a413 = (0x0, _0x578280['default'])('engine:transport');
        function _0x59ef2d() {
        }
        class _0x556875 extends _0x1d813d['EventEmitter'] {
            constructor(_0x50ed1e) {
                super(), this['readyState'] = 'open', this['discarded'] = ![], this['protocol'] = _0x50ed1e['_query']['EIO'] === '4' ? 0x4 : 0x3, this['parser'] = this['protocol'] === 0x4 ? _0x1c88cd : _0x325818;
            }
            get ['readyState']() {
                return this['_readyState'];
            }
            set ['readyState'](_0x4c906d) {
                _0x50a413('readyState\x20updated\x20from\x20%s\x20to\x20%s\x20(%s)', this['_readyState'], _0x4c906d, this['name']), this['_readyState'] = _0x4c906d;
            }
            ['discard']() {
                this['discarded'] = !![];
            }
            ['onRequest'](_0x4531a1) {
                _0x50a413('setting\x20request'), this['req'] = _0x4531a1;
            }
            ['close'](_0x4d81e8) {
                if ('closed' === this['readyState'] || 'closing' === this['readyState'])
                    return;
                this['readyState'] = 'closing', this['doClose'](_0x4d81e8 || _0x59ef2d);
            }
            ['onError'](_0x4c18c4, _0x18eba2) {
                if (this['listeners']('error')['length']) {
                    const _0x2195ca = new Error(_0x4c18c4);
                    _0x2195ca['type'] = 'TransportError', _0x2195ca['description'] = _0x18eba2, this['emit']('error', _0x2195ca);
                } else
                    _0x50a413('ignored\x20transport\x20error\x20%s\x20(%s)', _0x4c18c4, _0x18eba2);
            }
            ['onPacket'](_0x226b4b) {
                this['emit']('packet', _0x226b4b);
            }
            ['onData'](_0x3dc14c) {
                this['onPacket'](this['parser']['decodePacket'](_0x3dc14c));
            }
            ['onClose']() {
                this['readyState'] = 'closed', this['emit']('close');
            }
        }
        _0x4e3d74['Transport'] = _0x556875;
    },
    0xd33e: (_0x294bdf, _0x531969, _0x5e157a) => {
        'use strict';
        Object['defineProperty'](_0x531969, '__esModule', { 'value': !![] });
        const _0x2e3a2 = _0x5e157a(0xc86), _0x54b8c0 = _0x5e157a(0x1849);
        _0x531969['default'] = {
            'polling': _0x2e3a2['Polling'],
            'websocket': _0x54b8c0['WebSocket']
        };
    },
    0xc86: (_0x1b7a54, _0x51dbb4, _0x3eaa92) => {
        'use strict';
        Object['defineProperty'](_0x51dbb4, '__esModule', { 'value': !![] }), _0x51dbb4['Polling'] = void 0x0;
        const _0x1f5722 = _0x3eaa92(0x2f5a), _0x56858c = _0x3eaa92(0xe994), _0x1e465b = _0x3eaa92(0x12bf4), _0x286c59 = _0x3eaa92(0x566b), _0x150590 = (0x0, _0x286c59['default'])('engine:polling'), _0x3be662 = {
                'gzip': _0x56858c['createGzip'],
                'deflate': _0x56858c['createDeflate']
            };
        class _0x12a959 extends _0x1f5722['Transport'] {
            constructor(_0x1bfb4d) {
                super(_0x1bfb4d), this['closeTimeout'] = 0x1e * 0x3e8;
            }
            get ['name']() {
                return 'polling';
            }
            get ['supportsFraming']() {
                return ![];
            }
            ['onRequest'](_0x5950ad) {
                const _0x18b89f = _0x5950ad['res'];
                if (_0x5950ad['getMethod']() === 'get')
                    this['onPollRequest'](_0x5950ad, _0x18b89f);
                else
                    _0x5950ad['getMethod']() === 'post' ? this['onDataRequest'](_0x5950ad, _0x18b89f) : (_0x18b89f['writeStatus']('500\x20Internal\x20Server\x20Error'), _0x18b89f['end']());
            }
            ['onPollRequest'](_0xf5cb47, _0x3ad637) {
                if (this['req']) {
                    _0x150590('request\x20overlap'), this['onError']('overlap\x20from\x20client'), _0x3ad637['writeStatus']('500\x20Internal\x20Server\x20Error'), _0x3ad637['end']();
                    return;
                }
                _0x150590('setting\x20request'), this['req'] = _0xf5cb47, this['res'] = _0x3ad637;
                const _0x3ac8ed = () => {
                        this['writable'] = ![], this['onError']('poll\x20connection\x20closed\x20prematurely');
                    }, _0x4117ee = () => {
                        this['req'] = this['res'] = null;
                    };
                _0xf5cb47['cleanup'] = _0x4117ee, _0x3ad637['onAborted'](_0x3ac8ed), this['writable'] = !![], this['emit']('drain'), this['writable'] && this['shouldClose'] && (_0x150590('triggering\x20empty\x20send\x20to\x20append\x20close\x20packet'), this['send']([{ 'type': 'noop' }]));
            }
            ['onDataRequest'](_0x2fbf98, _0x2997b8) {
                if (this['dataReq']) {
                    this['onError']('data\x20request\x20overlap\x20from\x20client'), _0x2997b8['writeStatus']('500\x20Internal\x20Server\x20Error'), _0x2997b8['end']();
                    return;
                }
                const _0xc96bbd = Number(_0x2fbf98['headers']['content-length']);
                if (!_0xc96bbd) {
                    this['onError']('content-length\x20header\x20required'), _0x2997b8['writeStatus']('411\x20Length\x20Required')['end']();
                    return;
                }
                if (_0xc96bbd > this['maxHttpBufferSize']) {
                    this['onError']('payload\x20too\x20large'), _0x2997b8['writeStatus']('413\x20Payload\x20Too\x20Large')['end']();
                    return;
                }
                const _0x4589f0 = 'application/octet-stream' === _0x2fbf98['headers']['content-type'];
                if (_0x4589f0 && this['protocol'] === 0x4)
                    return this['onError']('invalid\x20content');
                this['dataReq'] = _0x2fbf98, this['dataRes'] = _0x2997b8;
                let _0x3176c9, _0x39b127 = 0x0;
                const _0x448ef5 = { 'Content-Type': 'text/html' };
                this['headers'](_0x2fbf98, _0x448ef5);
                for (let _0x848687 in _0x448ef5) {
                    _0x2997b8['writeHeader'](_0x848687, String(_0x448ef5[_0x848687]));
                }
                const _0x74835f = _0x595565 => {
                    this['onData'](_0x595565['toString']()), this['onDataRequestCleanup'](), _0x2997b8['end']('ok');
                };
                _0x2997b8['onAborted'](() => {
                    this['onDataRequestCleanup'](), this['onError']('data\x20request\x20connection\x20closed\x20prematurely');
                }), _0x2997b8['onData']((_0x93c597, _0x42f9a7) => {
                    const _0x180dc3 = _0x39b127 + _0x93c597['byteLength'];
                    if (_0x180dc3 > _0xc96bbd) {
                        this['onError']('content-length\x20mismatch'), _0x2997b8['close']();
                        return;
                    }
                    if (!_0x3176c9) {
                        if (_0x42f9a7) {
                            _0x74835f(Buffer['from'](_0x93c597));
                            return;
                        }
                        _0x3176c9 = Buffer['allocUnsafe'](_0xc96bbd);
                    }
                    Buffer['from'](_0x93c597)['copy'](_0x3176c9, _0x39b127);
                    if (_0x42f9a7) {
                        if (_0x180dc3 != _0xc96bbd) {
                            this['onError']('content-length\x20mismatch'), _0x2997b8['writeStatus']('400\x20Content-Length\x20Mismatch')['end'](), this['onDataRequestCleanup']();
                            return;
                        }
                        _0x74835f(_0x3176c9);
                        return;
                    }
                    _0x39b127 = _0x180dc3;
                });
            }
            ['onDataRequestCleanup']() {
                this['dataReq'] = this['dataRes'] = null;
            }
            ['onData'](_0x52379f) {
                _0x150590('received\x20\x22%s\x22', _0x52379f);
                const _0x3405a1 = _0x277f9c => {
                    if ('close' === _0x277f9c['type'])
                        return _0x150590('got\x20xhr\x20close\x20packet'), this['onClose'](), ![];
                    this['onPacket'](_0x277f9c);
                };
                this['protocol'] === 0x3 ? this['parser']['decodePayload'](_0x52379f, _0x3405a1) : this['parser']['decodePayload'](_0x52379f)['forEach'](_0x3405a1);
            }
            ['onClose']() {
                this['writable'] && this['send']([{ 'type': 'noop' }]), super['onClose']();
            }
            ['send'](_0x42c2a0) {
                this['writable'] = ![];
                this['shouldClose'] && (_0x150590('appending\x20close\x20packet\x20to\x20payload'), _0x42c2a0['push']({ 'type': 'close' }), this['shouldClose'](), this['shouldClose'] = null);
                const _0x39bc80 = _0x435638 => {
                    const _0xea7905 = _0x42c2a0['some'](_0x55f545 => {
                        return _0x55f545['options'] && _0x55f545['options']['compress'];
                    });
                    this['write'](_0x435638, { 'compress': _0xea7905 });
                };
                this['protocol'] === 0x3 ? this['parser']['encodePayload'](_0x42c2a0, this['supportsBinary'], _0x39bc80) : this['parser']['encodePayload'](_0x42c2a0, _0x39bc80);
            }
            ['write'](_0x41dccb, _0x5b204f) {
                _0x150590('writing\x20\x22%s\x22', _0x41dccb), this['doWrite'](_0x41dccb, _0x5b204f, () => {
                    this['req']['cleanup']();
                });
            }
            ['doWrite'](_0x20bd08, _0x5105e1, _0x26843a) {
                const _0x3664d3 = typeof _0x20bd08 === 'string', _0x12850d = _0x3664d3 ? 'text/plain;\x20charset=UTF-8' : 'application/octet-stream', _0x405283 = { 'Content-Type': _0x12850d }, _0x4d564e = _0x2a920f => {
                        this['headers'](this['req'], _0x405283), Object['keys'](_0x405283)['forEach'](_0x518239 => {
                            this['res']['writeHeader'](_0x518239, String(_0x405283[_0x518239]));
                        }), this['res']['end'](_0x2a920f), _0x26843a();
                    };
                if (!this['httpCompression'] || !_0x5105e1['compress']) {
                    _0x4d564e(_0x20bd08);
                    return;
                }
                const _0x480a83 = _0x3664d3 ? Buffer['byteLength'](_0x20bd08) : _0x20bd08['length'];
                if (_0x480a83 < this['httpCompression']['threshold']) {
                    _0x4d564e(_0x20bd08);
                    return;
                }
                const _0x37c28f = _0x1e465b(this['req'])['encodings']([
                    'gzip',
                    'deflate'
                ]);
                if (!_0x37c28f) {
                    _0x4d564e(_0x20bd08);
                    return;
                }
                this['compress'](_0x20bd08, _0x37c28f, (_0x2a44cf, _0x2f1619) => {
                    if (_0x2a44cf) {
                        this['res']['writeStatus']('500\x20Internal\x20Server\x20Error'), this['res']['end'](), _0x26843a(_0x2a44cf);
                        return;
                    }
                    _0x405283['Content-Encoding'] = _0x37c28f, _0x4d564e(_0x2f1619);
                });
            }
            ['compress'](_0x5d6598, _0xd92341, _0x5b5e97) {
                _0x150590('compressing');
                const _0x2acd7d = [];
                let _0x5f200e = 0x0;
                _0x3be662[_0xd92341](this['httpCompression'])['on']('error', _0x5b5e97)['on']('data', function (_0x4d45e1) {
                    _0x2acd7d['push'](_0x4d45e1), _0x5f200e += _0x4d45e1['length'];
                })['on']('end', function () {
                    _0x5b5e97(null, Buffer['concat'](_0x2acd7d, _0x5f200e));
                })['end'](_0x5d6598);
            }
            ['doClose'](_0x3b7db8) {
                _0x150590('closing');
                let _0x5a9380;
                const _0x1de9ae = () => {
                    clearTimeout(_0x5a9380), _0x3b7db8(), this['onClose']();
                };
                if (this['writable'])
                    _0x150590('transport\x20writable\x20-\x20closing\x20right\x20away'), this['send']([{ 'type': 'close' }]), _0x1de9ae();
                else
                    this['discarded'] ? (_0x150590('transport\x20discarded\x20-\x20closing\x20right\x20away'), _0x1de9ae()) : (_0x150590('transport\x20not\x20writable\x20-\x20buffering\x20orderly\x20close'), this['shouldClose'] = _0x1de9ae, _0x5a9380 = setTimeout(_0x1de9ae, this['closeTimeout']));
            }
            ['headers'](_0x444ff0, _0x156aff) {
                _0x156aff = _0x156aff || {};
                const _0x3cd514 = _0x444ff0['headers']['user-agent'];
                return _0x3cd514 && (~_0x3cd514['indexOf'](';MSIE') || ~_0x3cd514['indexOf']('Trident/')) && (_0x156aff['X-XSS-Protection'] = '0'), this['emit']('headers', _0x156aff, _0x444ff0), _0x156aff;
            }
        }
        _0x51dbb4['Polling'] = _0x12a959;
    },
    0x1849: (_0x1e2801, _0x56c542, _0x2fd8c3) => {
        'use strict';
        Object['defineProperty'](_0x56c542, '__esModule', { 'value': !![] }), _0x56c542['WebSocket'] = void 0x0;
        const _0x4f2299 = _0x2fd8c3(0x2f5a), _0x9382cc = _0x2fd8c3(0x566b), _0x3fdb90 = (0x0, _0x9382cc['default'])('engine:ws');
        class _0x4e99e4 extends _0x4f2299['Transport'] {
            constructor(_0x3dd926) {
                super(_0x3dd926), this['writable'] = ![], this['perMessageDeflate'] = null;
            }
            get ['name']() {
                return 'websocket';
            }
            get ['handlesUpgrades']() {
                return !![];
            }
            get ['supportsFraming']() {
                return !![];
            }
            ['send'](_0x1e6143) {
                const _0x3d0d1e = _0x1e6143['shift']();
                if (typeof _0x3d0d1e === 'undefined') {
                    this['writable'] = !![], this['emit']('drain');
                    return;
                }
                const _0x54d537 = {};
                _0x3d0d1e['options'] && (_0x54d537['compress'] = _0x3d0d1e['options']['compress']);
                const _0x5b9e6f = _0x261bd0 => {
                    const _0x17d625 = typeof _0x261bd0 !== 'string', _0xfa3c8c = this['perMessageDeflate'] && Buffer['byteLength'](_0x261bd0) > this['perMessageDeflate']['threshold'];
                    _0x3fdb90('writing\x20\x22%s\x22', _0x261bd0), this['writable'] = ![], this['socket']['send'](_0x261bd0, _0x17d625, _0xfa3c8c), this['send'](_0x1e6143);
                };
                _0x3d0d1e['options'] && typeof _0x3d0d1e['options']['wsPreEncoded'] === 'string' ? _0x5b9e6f(_0x3d0d1e['options']['wsPreEncoded']) : this['parser']['encodePacket'](_0x3d0d1e, this['supportsBinary'], _0x5b9e6f);
            }
            ['doClose'](_0x33348b) {
                _0x3fdb90('closing'), _0x33348b && _0x33348b(), this['socket']['close']();
            }
        }
        _0x56c542['WebSocket'] = _0x4e99e4;
    },
    0x2205: (_0x10c75d, _0x1a50d5, _0x118ced) => {
        'use strict';
        Object['defineProperty'](_0x1a50d5, '__esModule', { 'value': !![] });
        const _0x1f7fc7 = _0x118ced(0x15203), _0x45afef = _0x118ced(0x16dcc), _0xcc73dc = _0x118ced(0x157ba);
        _0x1a50d5['default'] = {
            'polling': _0x389cfb,
            'websocket': _0xcc73dc['WebSocket']
        };
        function _0x389cfb(_0x36778e) {
            return 'string' === typeof _0x36778e['_query']['j'] ? new _0x45afef['JSONP'](_0x36778e) : new _0x1f7fc7['Polling'](_0x36778e);
        }
        _0x389cfb['upgradesTo'] = ['websocket'];
    },
    0x16dcc: (_0xe0a0d5, _0x365712, _0x5da061) => {
        'use strict';
        Object['defineProperty'](_0x365712, '__esModule', { 'value': !![] }), _0x365712['JSONP'] = void 0x0;
        const _0x3bad9e = _0x5da061(0x15203), _0x22c444 = _0x5da061(0xf7f5), _0x2f73f0 = /\\\\n/g, _0x4e9d9b = /(\\)?\\n/g;
        class _0x4d49d5 extends _0x3bad9e['Polling'] {
            constructor(_0x1cedf9) {
                super(_0x1cedf9), this['head'] = '___eio[' + (_0x1cedf9['_query']['j'] || '')['replace'](/[^0-9]/g, '') + '](', this['foot'] = ');';
            }
            ['onData'](_0x2e9099) {
                _0x2e9099 = _0x22c444['parse'](_0x2e9099)['d'], 'string' === typeof _0x2e9099 && (_0x2e9099 = _0x2e9099['replace'](_0x4e9d9b, function (_0x2dd8d2, _0x56944e) {
                    return _0x56944e ? _0x2dd8d2 : '\x0a';
                }), super['onData'](_0x2e9099['replace'](_0x2f73f0, '\x5cn')));
            }
            ['doWrite'](_0x35fb94, _0x5d6b02, _0x5df0ad) {
                const _0xa50c1e = JSON['stringify'](_0x35fb94)['replace'](/\u2028/g, '\x5cu2028')['replace'](/\u2029/g, '\x5cu2029');
                _0x35fb94 = this['head'] + _0xa50c1e + this['foot'], super['doWrite'](_0x35fb94, _0x5d6b02, _0x5df0ad);
            }
        }
        _0x365712['JSONP'] = _0x4d49d5;
    },
    0x15203: (_0x1c4a0f, _0xfaa157, _0xcd4963) => {
        'use strict';
        Object['defineProperty'](_0xfaa157, '__esModule', { 'value': !![] }), _0xfaa157['Polling'] = void 0x0;
        const _0x5206f8 = _0xcd4963(0x2f5a), _0x5a71cb = _0xcd4963(0xe994), _0x34dec2 = _0xcd4963(0x12bf4), _0x3e2632 = _0xcd4963(0x566b), _0x33b09b = (0x0, _0x3e2632['default'])('engine:polling'), _0x3bd217 = {
                'gzip': _0x5a71cb['createGzip'],
                'deflate': _0x5a71cb['createDeflate']
            };
        class _0x624b5a extends _0x5206f8['Transport'] {
            constructor(_0x278002) {
                super(_0x278002), this['closeTimeout'] = 0x1e * 0x3e8;
            }
            get ['name']() {
                return 'polling';
            }
            get ['supportsFraming']() {
                return ![];
            }
            ['onRequest'](_0x4b91fa) {
                const _0x515121 = _0x4b91fa['res'];
                if ('GET' === _0x4b91fa['method'])
                    this['onPollRequest'](_0x4b91fa, _0x515121);
                else
                    'POST' === _0x4b91fa['method'] ? this['onDataRequest'](_0x4b91fa, _0x515121) : (_0x515121['writeHead'](0x1f4), _0x515121['end']());
            }
            ['onPollRequest'](_0x112bcf, _0x5dd3de) {
                if (this['req']) {
                    _0x33b09b('request\x20overlap'), this['onError']('overlap\x20from\x20client'), _0x5dd3de['writeHead'](0x1f4), _0x5dd3de['end']();
                    return;
                }
                _0x33b09b('setting\x20request'), this['req'] = _0x112bcf, this['res'] = _0x5dd3de;
                const _0x189865 = () => {
                        this['onError']('poll\x20connection\x20closed\x20prematurely');
                    }, _0x1847c1 = () => {
                        _0x112bcf['removeListener']('close', _0x189865), this['req'] = this['res'] = null;
                    };
                _0x112bcf['cleanup'] = _0x1847c1, _0x112bcf['on']('close', _0x189865), this['writable'] = !![], this['emit']('drain'), this['writable'] && this['shouldClose'] && (_0x33b09b('triggering\x20empty\x20send\x20to\x20append\x20close\x20packet'), this['send']([{ 'type': 'noop' }]));
            }
            ['onDataRequest'](_0x5170f8, _0x5e823c) {
                if (this['dataReq']) {
                    this['onError']('data\x20request\x20overlap\x20from\x20client'), _0x5e823c['writeHead'](0x1f4), _0x5e823c['end']();
                    return;
                }
                const _0x200c95 = 'application/octet-stream' === _0x5170f8['headers']['content-type'];
                if (_0x200c95 && this['protocol'] === 0x4)
                    return this['onError']('invalid\x20content');
                this['dataReq'] = _0x5170f8, this['dataRes'] = _0x5e823c;
                let _0x133a81 = _0x200c95 ? Buffer['concat']([]) : '';
                const _0x538ac6 = () => {
                        _0x5170f8['removeListener']('data', _0x1cc741), _0x5170f8['removeListener']('end', _0x369f4d), _0x5170f8['removeListener']('close', _0x52a40d), this['dataReq'] = this['dataRes'] = _0x133a81 = null;
                    }, _0x52a40d = () => {
                        _0x538ac6(), this['onError']('data\x20request\x20connection\x20closed\x20prematurely');
                    }, _0x1cc741 = _0x140ae3 => {
                        let _0x392d0a;
                        _0x200c95 ? (_0x133a81 = Buffer['concat']([
                            _0x133a81,
                            _0x140ae3
                        ]), _0x392d0a = _0x133a81['length']) : (_0x133a81 += _0x140ae3, _0x392d0a = Buffer['byteLength'](_0x133a81)), _0x392d0a > this['maxHttpBufferSize'] && (_0x5e823c['writeHead'](0x19d)['end'](), _0x538ac6());
                    }, _0x369f4d = () => {
                        this['onData'](_0x133a81);
                        const _0x52ca15 = {
                            'Content-Type': 'text/html',
                            'Content-Length': 0x2
                        };
                        _0x5e823c['writeHead'](0xc8, this['headers'](_0x5170f8, _0x52ca15)), _0x5e823c['end']('ok'), _0x538ac6();
                    };
                _0x5170f8['on']('close', _0x52a40d);
                if (!_0x200c95)
                    _0x5170f8['setEncoding']('utf8');
                _0x5170f8['on']('data', _0x1cc741), _0x5170f8['on']('end', _0x369f4d);
            }
            ['onData'](_0x2cb037) {
                _0x33b09b('received\x20\x22%s\x22', _0x2cb037);
                const _0x174fc1 = _0x3edba8 => {
                    if ('close' === _0x3edba8['type'])
                        return _0x33b09b('got\x20xhr\x20close\x20packet'), this['onClose'](), ![];
                    this['onPacket'](_0x3edba8);
                };
                this['protocol'] === 0x3 ? this['parser']['decodePayload'](_0x2cb037, _0x174fc1) : this['parser']['decodePayload'](_0x2cb037)['forEach'](_0x174fc1);
            }
            ['onClose']() {
                this['writable'] && this['send']([{ 'type': 'noop' }]), super['onClose']();
            }
            ['send'](_0x3dabc0) {
                this['writable'] = ![];
                this['shouldClose'] && (_0x33b09b('appending\x20close\x20packet\x20to\x20payload'), _0x3dabc0['push']({ 'type': 'close' }), this['shouldClose'](), this['shouldClose'] = null);
                const _0x4b4715 = _0x57713f => {
                    const _0x1f76b6 = _0x3dabc0['some'](_0x38fab2 => {
                        return _0x38fab2['options'] && _0x38fab2['options']['compress'];
                    });
                    this['write'](_0x57713f, { 'compress': _0x1f76b6 });
                };
                this['protocol'] === 0x3 ? this['parser']['encodePayload'](_0x3dabc0, this['supportsBinary'], _0x4b4715) : this['parser']['encodePayload'](_0x3dabc0, _0x4b4715);
            }
            ['write'](_0x26d73b, _0x2db56b) {
                _0x33b09b('writing\x20\x22%s\x22', _0x26d73b), this['doWrite'](_0x26d73b, _0x2db56b, () => {
                    this['req']['cleanup']();
                });
            }
            ['doWrite'](_0x41259d, _0x30802b, _0x378126) {
                const _0x15b49b = typeof _0x41259d === 'string', _0x421131 = _0x15b49b ? 'text/plain;\x20charset=UTF-8' : 'application/octet-stream', _0xbd5dc = { 'Content-Type': _0x421131 }, _0x4cb768 = _0x2725d8 => {
                        _0xbd5dc['Content-Length'] = 'string' === typeof _0x2725d8 ? Buffer['byteLength'](_0x2725d8) : _0x2725d8['length'], this['res']['writeHead'](0xc8, this['headers'](this['req'], _0xbd5dc)), this['res']['end'](_0x2725d8), _0x378126();
                    };
                if (!this['httpCompression'] || !_0x30802b['compress']) {
                    _0x4cb768(_0x41259d);
                    return;
                }
                const _0x37488b = _0x15b49b ? Buffer['byteLength'](_0x41259d) : _0x41259d['length'];
                if (_0x37488b < this['httpCompression']['threshold']) {
                    _0x4cb768(_0x41259d);
                    return;
                }
                const _0x295f07 = _0x34dec2(this['req'])['encodings']([
                    'gzip',
                    'deflate'
                ]);
                if (!_0x295f07) {
                    _0x4cb768(_0x41259d);
                    return;
                }
                this['compress'](_0x41259d, _0x295f07, (_0x2b01f3, _0x535cee) => {
                    if (_0x2b01f3) {
                        this['res']['writeHead'](0x1f4), this['res']['end'](), _0x378126(_0x2b01f3);
                        return;
                    }
                    _0xbd5dc['Content-Encoding'] = _0x295f07, _0x4cb768(_0x535cee);
                });
            }
            ['compress'](_0x18f288, _0x6e483, _0x2468a0) {
                _0x33b09b('compressing');
                const _0x3d8771 = [];
                let _0x191d1c = 0x0;
                _0x3bd217[_0x6e483](this['httpCompression'])['on']('error', _0x2468a0)['on']('data', function (_0x4c5136) {
                    _0x3d8771['push'](_0x4c5136), _0x191d1c += _0x4c5136['length'];
                })['on']('end', function () {
                    _0x2468a0(null, Buffer['concat'](_0x3d8771, _0x191d1c));
                })['end'](_0x18f288);
            }
            ['doClose'](_0x4df9ad) {
                _0x33b09b('closing');
                let _0x3935bc;
                this['dataReq'] && (_0x33b09b('aborting\x20ongoing\x20data\x20request'), this['dataReq']['destroy']());
                const _0x28a662 = () => {
                    clearTimeout(_0x3935bc), _0x4df9ad(), this['onClose']();
                };
                if (this['writable'])
                    _0x33b09b('transport\x20writable\x20-\x20closing\x20right\x20away'), this['send']([{ 'type': 'close' }]), _0x28a662();
                else
                    this['discarded'] ? (_0x33b09b('transport\x20discarded\x20-\x20closing\x20right\x20away'), _0x28a662()) : (_0x33b09b('transport\x20not\x20writable\x20-\x20buffering\x20orderly\x20close'), this['shouldClose'] = _0x28a662, _0x3935bc = setTimeout(_0x28a662, this['closeTimeout']));
            }
            ['headers'](_0x3d3fe2, _0x389576) {
                _0x389576 = _0x389576 || {};
                const _0x843e2f = _0x3d3fe2['headers']['user-agent'];
                return _0x843e2f && (~_0x843e2f['indexOf'](';MSIE') || ~_0x843e2f['indexOf']('Trident/')) && (_0x389576['X-XSS-Protection'] = '0'), this['emit']('headers', _0x389576, _0x3d3fe2), _0x389576;
            }
        }
        _0xfaa157['Polling'] = _0x624b5a;
    },
    0x157ba: (_0x3bffb, _0x3c5f8b, _0x3d28b5) => {
        'use strict';
        Object['defineProperty'](_0x3c5f8b, '__esModule', { 'value': !![] }), _0x3c5f8b['WebSocket'] = void 0x0;
        const _0x3842d6 = _0x3d28b5(0x2f5a), _0x5d8836 = _0x3d28b5(0x566b), _0x39e87a = (0x0, _0x5d8836['default'])('engine:ws');
        class _0x3e69a7 extends _0x3842d6['Transport'] {
            constructor(_0x3f3112) {
                super(_0x3f3112), this['socket'] = _0x3f3112['websocket'], this['socket']['on']('message', (_0xadaf8f, _0x177fe4) => {
                    const _0x166ca5 = _0x177fe4 ? _0xadaf8f : _0xadaf8f['toString']();
                    _0x39e87a('received\x20\x22%s\x22', _0x166ca5), super['onData'](_0x166ca5);
                }), this['socket']['once']('close', this['onClose']['bind'](this)), this['socket']['on']('error', this['onError']['bind'](this)), this['writable'] = !![], this['perMessageDeflate'] = null;
            }
            get ['name']() {
                return 'websocket';
            }
            get ['handlesUpgrades']() {
                return !![];
            }
            get ['supportsFraming']() {
                return !![];
            }
            ['send'](_0x25d85f) {
                const _0x2a16b5 = _0x25d85f['shift']();
                if (typeof _0x2a16b5 === 'undefined') {
                    this['writable'] = !![], this['emit']('drain');
                    return;
                }
                const _0x518bdd = {};
                _0x2a16b5['options'] && (_0x518bdd['compress'] = _0x2a16b5['options']['compress']);
                const _0x47d0a4 = _0x4cc8e1 => {
                    if (this['perMessageDeflate']) {
                        const _0xc59473 = 'string' === typeof _0x4cc8e1 ? Buffer['byteLength'](_0x4cc8e1) : _0x4cc8e1['length'];
                        _0xc59473 < this['perMessageDeflate']['threshold'] && (_0x518bdd['compress'] = ![]);
                    }
                    _0x39e87a('writing\x20\x22%s\x22', _0x4cc8e1), this['writable'] = ![], this['socket']['send'](_0x4cc8e1, _0x518bdd, _0x485d4b => {
                        if (_0x485d4b)
                            return this['onError']('write\x20error', _0x485d4b['stack']);
                        this['send'](_0x25d85f);
                    });
                };
                _0x2a16b5['options'] && typeof _0x2a16b5['options']['wsPreEncoded'] === 'string' ? _0x47d0a4(_0x2a16b5['options']['wsPreEncoded']) : this['parser']['encodePacket'](_0x2a16b5, this['supportsBinary'], _0x47d0a4);
            }
            ['doClose'](_0x52a67f) {
                _0x39e87a('closing'), this['socket']['close'](), _0x52a67f && _0x52a67f();
            }
        }
        _0x3c5f8b['WebSocket'] = _0x3e69a7;
    },
    0xfbdd: (_0x19b852, _0x52dc82, _0x3d7ccc) => {
        'use strict';
        Object['defineProperty'](_0x52dc82, '__esModule', { 'value': !![] }), _0x52dc82['uServer'] = void 0x0;
        const _0x3b48e8 = _0x3d7ccc(0x566b), _0xa7657c = _0x3d7ccc(0x4c03), _0xdd1b03 = _0x3d7ccc(0xd33e), _0x465f5b = (0x0, _0x3b48e8['default'])('engine:uws');
        class _0x131b60 extends _0xa7657c['BaseServer'] {
            ['init']() {
            }
            ['cleanup']() {
            }
            ['prepare'](_0x5cc5b3, _0x3df763) {
                _0x5cc5b3['method'] = _0x5cc5b3['getMethod']()['toUpperCase']();
                const _0xf677c6 = new URLSearchParams(_0x5cc5b3['getQuery']());
                _0x5cc5b3['_query'] = Object['fromEntries'](_0xf677c6['entries']()), _0x5cc5b3['headers'] = {}, _0x5cc5b3['forEach']((_0x3c22f6, _0x12d49d) => {
                    _0x5cc5b3['headers'][_0x3c22f6] = _0x12d49d;
                }), _0x5cc5b3['connection'] = { 'remoteAddress': Buffer['from'](_0x3df763['getRemoteAddressAsText']())['toString']() }, _0x3df763['onAborted'](() => {
                    _0x465f5b('response\x20has\x20been\x20aborted');
                });
            }
            ['createTransport'](_0x5311f0, _0x43b6c5) {
                return new _0xdd1b03['default'][_0x5311f0](_0x43b6c5);
            }
            ['attach'](_0x44662d, _0x1ff349 = {}) {
                const _0x52acd3 = (_0x1ff349['path'] || '/engine.io')['replace'](/\/$/, '') + '/';
                _0x44662d['any'](_0x52acd3, this['handleRequest']['bind'](this))['ws'](_0x52acd3, {
                    'compression': _0x1ff349['compression'],
                    'idleTimeout': _0x1ff349['idleTimeout'],
                    'maxBackpressure': _0x1ff349['maxBackpressure'],
                    'maxPayloadLength': this['opts']['maxHttpBufferSize'],
                    'upgrade': this['handleUpgrade']['bind'](this),
                    'open': _0x3b98fd => {
                        _0x3b98fd['transport']['socket'] = _0x3b98fd, _0x3b98fd['transport']['writable'] = !![], _0x3b98fd['transport']['emit']('drain');
                    },
                    'message': (_0x40cfdb, _0x251cbc, _0x126ef3) => {
                        _0x40cfdb['transport']['onData'](_0x126ef3 ? _0x251cbc : Buffer['from'](_0x251cbc)['toString']());
                    },
                    'close': (_0x34b25a, _0x2d3630, _0x46504e) => {
                        _0x34b25a['transport']['onClose'](_0x2d3630, _0x46504e);
                    }
                });
            }
            ['handleRequest'](_0x47a4cd, _0x292e49) {
                _0x465f5b('handling\x20\x22%s\x22\x20http\x20request\x20\x22%s\x22', _0x292e49['getMethod'](), _0x292e49['getUrl']()), this['prepare'](_0x292e49, _0x47a4cd), _0x292e49['res'] = _0x47a4cd;
                const _0x406a48 = (_0x54a60b, _0x5855e1) => {
                    if (_0x54a60b !== undefined) {
                        this['emit']('connection_error', {
                            'req': _0x292e49,
                            'code': _0x54a60b,
                            'message': _0xa7657c['Server']['errorMessages'][_0x54a60b],
                            'context': _0x5855e1
                        }), this['abortRequest'](_0x292e49['res'], _0x54a60b, _0x5855e1);
                        return;
                    }
                    if (_0x292e49['_query']['sid'])
                        _0x465f5b('setting\x20new\x20request\x20for\x20existing\x20client'), this['clients'][_0x292e49['_query']['sid']]['transport']['onRequest'](_0x292e49);
                    else {
                        const _0xdb2974 = (_0x1d9c72, _0x54d32b) => this['abortRequest'](_0x47a4cd, _0x1d9c72, _0x54d32b);
                        this['handshake'](_0x292e49['_query']['transport'], _0x292e49, _0xdb2974);
                    }
                };
                this['corsMiddleware'] ? (_0x292e49['res'] = new _0x5aae52(_0x47a4cd), this['corsMiddleware']['call'](null, _0x292e49, _0x292e49['res'], () => {
                    this['verify'](_0x292e49, ![], _0x406a48);
                })) : this['verify'](_0x292e49, ![], _0x406a48);
            }
            ['handleUpgrade'](_0x1015fa, _0x43b9aa, _0x4242ac) {
                _0x465f5b('on\x20upgrade'), this['prepare'](_0x43b9aa, _0x1015fa), _0x43b9aa['res'] = _0x1015fa, this['verify'](_0x43b9aa, !![], async (_0x201e48, _0x2953d8) => {
                    if (_0x201e48) {
                        this['emit']('connection_error', {
                            'req': _0x43b9aa,
                            'code': _0x201e48,
                            'message': _0xa7657c['Server']['errorMessages'][_0x201e48],
                            'context': _0x2953d8
                        }), this['abortRequest'](_0x1015fa, _0x201e48, _0x2953d8);
                        return;
                    }
                    const _0x28bbb2 = _0x43b9aa['_query']['sid'];
                    let _0x35eb45;
                    if (_0x28bbb2) {
                        const _0x5876d2 = this['clients'][_0x28bbb2];
                        if (!_0x5876d2)
                            _0x465f5b('upgrade\x20attempt\x20for\x20closed\x20client'), _0x1015fa['close']();
                        else {
                            if (_0x5876d2['upgrading'])
                                _0x465f5b('transport\x20has\x20already\x20been\x20trying\x20to\x20upgrade'), _0x1015fa['close']();
                            else
                                _0x5876d2['upgraded'] ? (_0x465f5b('transport\x20had\x20already\x20been\x20upgraded'), _0x1015fa['close']()) : (_0x465f5b('upgrading\x20existing\x20transport'), _0x35eb45 = this['createTransport'](_0x43b9aa['_query']['transport'], _0x43b9aa), _0x5876d2['maybeUpgrade'](_0x35eb45));
                        }
                    } else {
                        _0x35eb45 = await this['handshake'](_0x43b9aa['_query']['transport'], _0x43b9aa, (_0xb232fa, _0x3d0045) => this['abortRequest'](_0x1015fa, _0xb232fa, _0x3d0045));
                        if (!_0x35eb45)
                            return;
                    }
                    _0x1015fa['upgrade']({ 'transport': _0x35eb45 }, _0x43b9aa['getHeader']('sec-websocket-key'), _0x43b9aa['getHeader']('sec-websocket-protocol'), _0x43b9aa['getHeader']('sec-websocket-extensions'), _0x4242ac);
                });
            }
            ['abortRequest'](_0x2edc36, _0x20cf61, _0x70c1c8) {
                const _0x4777d8 = _0x20cf61 === _0xa7657c['Server']['errors']['FORBIDDEN'] ? '403\x20Forbidden' : '400\x20Bad\x20Request', _0x2818b5 = _0x70c1c8 && _0x70c1c8['message'] ? _0x70c1c8['message'] : _0xa7657c['Server']['errorMessages'][_0x20cf61];
                _0x2edc36['writeStatus'](_0x4777d8), _0x2edc36['writeHeader']('Content-Type', 'application/json'), _0x2edc36['end'](JSON['stringify']({
                    'code': _0x20cf61,
                    'message': _0x2818b5
                }));
            }
        }
        _0x52dc82['uServer'] = _0x131b60;
        class _0x5aae52 {
            constructor(_0x282dc6) {
                this['res'] = _0x282dc6, this['statusWritten'] = ![], this['headers'] = [];
            }
            set ['statusCode'](_0x2c955a) {
                this['writeStatus'](_0x2c955a === 0xc8 ? '200\x20OK' : '204\x20No\x20Content');
            }
            ['setHeader'](_0x421a30, _0x4eb816) {
                this['writeHeader'](_0x421a30, _0x4eb816);
            }
            ['getHeader']() {
            }
            ['writeStatus'](_0x402c02) {
                this['res']['writeStatus'](_0x402c02), this['statusWritten'] = !![], this['writeBufferedHeaders']();
            }
            ['writeHeader'](_0x5f588b, _0x220020) {
                if (_0x5f588b === 'Content-Length')
                    return;
                this['statusWritten'] ? this['res']['writeHeader'](_0x5f588b, _0x220020) : this['headers']['push']([
                    _0x5f588b,
                    _0x220020
                ]);
            }
            ['writeBufferedHeaders']() {
                this['headers']['forEach'](([_0x5ac768, _0x1e765f]) => {
                    this['res']['writeHeader'](_0x5ac768, _0x1e765f);
                });
            }
            ['end'](_0x48d989) {
                !this['statusWritten'] && this['writeBufferedHeaders'](), this['res']['end'](_0x48d989);
            }
            ['onData'](_0x16f376) {
                this['res']['onData'](_0x16f376);
            }
            ['onAborted'](_0xd4359b) {
                this['res']['onAborted'](_0xd4359b);
            }
        }
    },
    0x4257: (_0x18fcc0, _0x22bcf8, _0x2d35e0) => {
        'use strict';
        Object['defineProperty'](_0x22bcf8, '__esModule', { 'value': !![] }), _0x22bcf8['RemoteSocket'] = _0x22bcf8['BroadcastOperator'] = void 0x0;
        const _0x419972 = _0x2d35e0(0x1764c), _0xba8e0c = _0x2d35e0(0x7dc);
        class _0x3ae204 {
            constructor(_0x1a09e9, _0x437ab3 = new Set(), _0x4867db = new Set(), _0x20e126 = {}) {
                this['adapter'] = _0x1a09e9, this['rooms'] = _0x437ab3, this['exceptRooms'] = _0x4867db, this['flags'] = _0x20e126;
            }
            ['to'](_0x3bd8ef) {
                const _0x3fe884 = new Set(this['rooms']);
                return Array['isArray'](_0x3bd8ef) ? _0x3bd8ef['forEach'](_0x53e722 => _0x3fe884['add'](_0x53e722)) : _0x3fe884['add'](_0x3bd8ef), new _0x3ae204(this['adapter'], _0x3fe884, this['exceptRooms'], this['flags']);
            }
            ['in'](_0x5c8587) {
                return this['to'](_0x5c8587);
            }
            ['except'](_0x2283da) {
                const _0x7287e4 = new Set(this['exceptRooms']);
                return Array['isArray'](_0x2283da) ? _0x2283da['forEach'](_0x1d8be2 => _0x7287e4['add'](_0x1d8be2)) : _0x7287e4['add'](_0x2283da), new _0x3ae204(this['adapter'], this['rooms'], _0x7287e4, this['flags']);
            }
            ['compress'](_0x601869) {
                const _0x2a1a75 = Object['assign']({}, this['flags'], { 'compress': _0x601869 });
                return new _0x3ae204(this['adapter'], this['rooms'], this['exceptRooms'], _0x2a1a75);
            }
            get ['volatile']() {
                const _0xc92de6 = Object['assign']({}, this['flags'], { 'volatile': !![] });
                return new _0x3ae204(this['adapter'], this['rooms'], this['exceptRooms'], _0xc92de6);
            }
            get ['local']() {
                const _0x4fe3f8 = Object['assign']({}, this['flags'], { 'local': !![] });
                return new _0x3ae204(this['adapter'], this['rooms'], this['exceptRooms'], _0x4fe3f8);
            }
            ['timeout'](_0x50ed78) {
                const _0x584421 = Object['assign']({}, this['flags'], { 'timeout': _0x50ed78 });
                return new _0x3ae204(this['adapter'], this['rooms'], this['exceptRooms'], _0x584421);
            }
            ['emit'](_0x5deaa2, ..._0xe07312) {
                if (_0x419972['RESERVED_EVENTS']['has'](_0x5deaa2))
                    throw new Error('\x22' + _0x5deaa2 + '\x22\x20is\x20a\x20reserved\x20event\x20name');
                const _0xe9bcdc = [
                        _0x5deaa2,
                        ..._0xe07312
                    ], _0xaf6f5a = {
                        'type': _0xba8e0c['PacketType']['EVENT'],
                        'data': _0xe9bcdc
                    }, _0x3db3e7 = typeof _0xe9bcdc[_0xe9bcdc['length'] - 0x1] === 'function';
                if (!_0x3db3e7)
                    return this['adapter']['broadcast'](_0xaf6f5a, {
                        'rooms': this['rooms'],
                        'except': this['exceptRooms'],
                        'flags': this['flags']
                    }), !![];
                const _0x236646 = _0xe9bcdc['pop']();
                let _0x1d6032 = ![], _0x3d226d = [];
                const _0x2d010e = setTimeout(() => {
                    _0x1d6032 = !![], _0x236646['apply'](this, [
                        new Error('operation\x20has\x20timed\x20out'),
                        _0x3d226d
                    ]);
                }, this['flags']['timeout']);
                let _0x1cd9af = -0x1, _0x58e69f = 0x0, _0x32072e = 0x0;
                const _0x53a631 = () => {
                    !_0x1d6032 && _0x1cd9af === _0x58e69f && _0x3d226d['length'] === _0x32072e && (clearTimeout(_0x2d010e), _0x236646['apply'](this, [
                        null,
                        _0x3d226d
                    ]));
                };
                return this['adapter']['broadcastWithAck'](_0xaf6f5a, {
                    'rooms': this['rooms'],
                    'except': this['exceptRooms'],
                    'flags': this['flags']
                }, _0x2ad2b7 => {
                    _0x32072e += _0x2ad2b7, _0x58e69f++, _0x53a631();
                }, _0x413485 => {
                    _0x3d226d['push'](_0x413485), _0x53a631();
                }), this['adapter']['serverCount']()['then'](_0x14c88c => {
                    _0x1cd9af = _0x14c88c, _0x53a631();
                }), !![];
            }
            ['allSockets']() {
                if (!this['adapter'])
                    throw new Error('No\x20adapter\x20for\x20this\x20namespace,\x20are\x20you\x20trying\x20to\x20get\x20the\x20list\x20of\x20clients\x20of\x20a\x20dynamic\x20namespace?');
                return this['adapter']['sockets'](this['rooms']);
            }
            ['fetchSockets']() {
                return this['adapter']['fetchSockets']({
                    'rooms': this['rooms'],
                    'except': this['exceptRooms'],
                    'flags': this['flags']
                })['then'](_0x1284ec => {
                    return _0x1284ec['map'](_0x1f5376 => {
                        return _0x1f5376 instanceof _0x419972['Socket'] ? _0x1f5376 : new _0x2385a0(this['adapter'], _0x1f5376);
                    });
                });
            }
            ['socketsJoin'](_0x3c5f20) {
                this['adapter']['addSockets']({
                    'rooms': this['rooms'],
                    'except': this['exceptRooms'],
                    'flags': this['flags']
                }, Array['isArray'](_0x3c5f20) ? _0x3c5f20 : [_0x3c5f20]);
            }
            ['socketsLeave'](_0x4f1f83) {
                this['adapter']['delSockets']({
                    'rooms': this['rooms'],
                    'except': this['exceptRooms'],
                    'flags': this['flags']
                }, Array['isArray'](_0x4f1f83) ? _0x4f1f83 : [_0x4f1f83]);
            }
            ['disconnectSockets'](_0x37acfa = ![]) {
                this['adapter']['disconnectSockets']({
                    'rooms': this['rooms'],
                    'except': this['exceptRooms'],
                    'flags': this['flags']
                }, _0x37acfa);
            }
        }
        _0x22bcf8['BroadcastOperator'] = _0x3ae204;
        class _0x2385a0 {
            constructor(_0x1e3518, _0x33c59a) {
                this['id'] = _0x33c59a['id'], this['handshake'] = _0x33c59a['handshake'], this['rooms'] = new Set(_0x33c59a['rooms']), this['data'] = _0x33c59a['data'], this['operator'] = new _0x3ae204(_0x1e3518, new Set([this['id']]));
            }
            ['emit'](_0x5785fa, ..._0x5c4913) {
                return this['operator']['emit'](_0x5785fa, ..._0x5c4913);
            }
            ['join'](_0x9a1b24) {
                return this['operator']['socketsJoin'](_0x9a1b24);
            }
            ['leave'](_0xe48952) {
                return this['operator']['socketsLeave'](_0xe48952);
            }
            ['disconnect'](_0x53a73c = ![]) {
                return this['operator']['disconnectSockets'](_0x53a73c), this;
            }
        }
        _0x22bcf8['RemoteSocket'] = _0x2385a0;
    },
    0x171e3: (_0x47ef34, _0x4f7f3c, _0x2623a1) => {
        'use strict';
        Object['defineProperty'](_0x4f7f3c, '__esModule', { 'value': !![] }), _0x4f7f3c['Client'] = void 0x0;
        const _0x2703c4 = _0x2623a1(0x7dc), _0x7b3fac = _0x2623a1(0x566b), _0x25df19 = _0x2623a1(0xdfde), _0x5045e4 = _0x7b3fac('socket.io:client');
        class _0xd84bbf {
            constructor(_0x22bd81, _0x2eae77) {
                this['sockets'] = new Map(), this['nsps'] = new Map(), this['server'] = _0x22bd81, this['conn'] = _0x2eae77, this['encoder'] = _0x22bd81['encoder'], this['decoder'] = new _0x22bd81['_parser']['Decoder'](), this['id'] = _0x2eae77['id'], this['setup']();
            }
            get ['request']() {
                return this['conn']['request'];
            }
            ['setup']() {
                this['onclose'] = this['onclose']['bind'](this), this['ondata'] = this['ondata']['bind'](this), this['onerror'] = this['onerror']['bind'](this), this['ondecoded'] = this['ondecoded']['bind'](this), this['decoder']['on']('decoded', this['ondecoded']), this['conn']['on']('data', this['ondata']), this['conn']['on']('error', this['onerror']), this['conn']['on']('close', this['onclose']), this['connectTimeout'] = setTimeout(() => {
                    this['nsps']['size'] === 0x0 ? (_0x5045e4('no\x20namespace\x20joined\x20yet,\x20close\x20the\x20client'), this['close']()) : _0x5045e4('the\x20client\x20has\x20already\x20joined\x20a\x20namespace,\x20nothing\x20to\x20do');
                }, this['server']['_connectTimeout']);
            }
            ['connect'](_0x5d5ca6, _0x241fb7 = {}) {
                if (this['server']['_nsps']['has'](_0x5d5ca6))
                    return _0x5045e4('connecting\x20to\x20namespace\x20%s', _0x5d5ca6), this['doConnect'](_0x5d5ca6, _0x241fb7);
                this['server']['_checkNamespace'](_0x5d5ca6, _0x241fb7, _0x5ce46e => {
                    _0x5ce46e ? this['doConnect'](_0x5d5ca6, _0x241fb7) : (_0x5045e4('creation\x20of\x20namespace\x20%s\x20was\x20denied', _0x5d5ca6), this['_packet']({
                        'type': _0x2703c4['PacketType']['CONNECT_ERROR'],
                        'nsp': _0x5d5ca6,
                        'data': { 'message': 'Invalid\x20namespace' }
                    }));
                });
            }
            ['doConnect'](_0x174766, _0x1e8237) {
                const _0x7294b6 = this['server']['of'](_0x174766), _0x43bf85 = _0x7294b6['_add'](this, _0x1e8237, () => {
                        this['sockets']['set'](_0x43bf85['id'], _0x43bf85), this['nsps']['set'](_0x7294b6['name'], _0x43bf85), this['connectTimeout'] && (clearTimeout(this['connectTimeout']), this['connectTimeout'] = undefined);
                    });
            }
            ['_disconnect']() {
                for (const _0x2647e2 of this['sockets']['values']()) {
                    _0x2647e2['disconnect']();
                }
                this['sockets']['clear'](), this['close']();
            }
            ['_remove'](_0x285f5e) {
                if (this['sockets']['has'](_0x285f5e['id'])) {
                    const _0xfa4f32 = this['sockets']['get'](_0x285f5e['id'])['nsp']['name'];
                    this['sockets']['delete'](_0x285f5e['id']), this['nsps']['delete'](_0xfa4f32);
                } else
                    _0x5045e4('ignoring\x20remove\x20for\x20%s', _0x285f5e['id']);
            }
            ['close']() {
                'open' === this['conn']['readyState'] && (_0x5045e4('forcing\x20transport\x20close'), this['conn']['close'](), this['onclose']('forced\x20server\x20close'));
            }
            ['_packet'](_0x4134a6, _0xf28ac7 = {}) {
                if (this['conn']['readyState'] !== 'open') {
                    _0x5045e4('ignoring\x20packet\x20write\x20%j', _0x4134a6);
                    return;
                }
                const _0x552777 = _0xf28ac7['preEncoded'] ? _0x4134a6 : this['encoder']['encode'](_0x4134a6);
                this['writeToEngine'](_0x552777, _0xf28ac7);
            }
            ['writeToEngine'](_0x10468f, _0xffc4e0) {
                if (_0xffc4e0['volatile'] && !this['conn']['transport']['writable']) {
                    _0x5045e4('volatile\x20packet\x20is\x20discarded\x20since\x20the\x20transport\x20is\x20not\x20currently\x20writable');
                    return;
                }
                const _0x361b2e = Array['isArray'](_0x10468f) ? _0x10468f : [_0x10468f];
                for (const _0xc73a8a of _0x361b2e) {
                    this['conn']['write'](_0xc73a8a, _0xffc4e0);
                }
            }
            ['ondata'](_0x1d6cad) {
                try {
                    this['decoder']['add'](_0x1d6cad);
                } catch (_0x376c20) {
                    _0x5045e4('invalid\x20packet\x20format'), this['onerror'](_0x376c20);
                }
            }
            ['ondecoded'](_0x195799) {
                let _0xd9ba5f, _0x1e9f5a;
                if (this['conn']['protocol'] === 0x3) {
                    const _0x3a1bf8 = _0x25df19['parse'](_0x195799['nsp'], !![]);
                    _0xd9ba5f = _0x3a1bf8['pathname'], _0x1e9f5a = _0x3a1bf8['query'];
                } else
                    _0xd9ba5f = _0x195799['nsp'], _0x1e9f5a = _0x195799['data'];
                const _0x5bb964 = this['nsps']['get'](_0xd9ba5f);
                if (!_0x5bb964 && _0x195799['type'] === _0x2703c4['PacketType']['CONNECT'])
                    this['connect'](_0xd9ba5f, _0x1e9f5a);
                else
                    _0x5bb964 && _0x195799['type'] !== _0x2703c4['PacketType']['CONNECT'] && _0x195799['type'] !== _0x2703c4['PacketType']['CONNECT_ERROR'] ? process['nextTick'](function () {
                        _0x5bb964['_onpacket'](_0x195799);
                    }) : (_0x5045e4('invalid\x20state\x20(packet\x20type:\x20%s)', _0x195799['type']), this['close']());
            }
            ['onerror'](_0x27bf5c) {
                for (const _0x5b4d5c of this['sockets']['values']()) {
                    _0x5b4d5c['_onerror'](_0x27bf5c);
                }
                this['conn']['close']();
            }
            ['onclose'](_0x49cfe5) {
                _0x5045e4('client\x20close\x20with\x20reason\x20%s', _0x49cfe5), this['destroy']();
                for (const _0x9ea3d0 of this['sockets']['values']()) {
                    _0x9ea3d0['_onclose'](_0x49cfe5);
                }
                this['sockets']['clear'](), this['decoder']['destroy']();
            }
            ['destroy']() {
                this['conn']['removeListener']('data', this['ondata']), this['conn']['removeListener']('error', this['onerror']), this['conn']['removeListener']('close', this['onclose']), this['decoder']['removeListener']('decoded', this['ondecoded']), this['connectTimeout'] && (clearTimeout(this['connectTimeout']), this['connectTimeout'] = undefined);
            }
        }
        _0x4f7f3c['Client'] = _0xd84bbf;
    },
    0xfbe7: function (_0x502180, _0x2208d7, _0x2fee36) {
        'use strict';
        var _0x52017f = this && this['__createBinding'] || (Object['create'] ? function (_0x5c9ec9, _0x27d9c4, _0x4e2535, _0x57d8ff) {
                if (_0x57d8ff === undefined)
                    _0x57d8ff = _0x4e2535;
                Object['defineProperty'](_0x5c9ec9, _0x57d8ff, {
                    'enumerable': !![],
                    'get': function () {
                        return _0x27d9c4[_0x4e2535];
                    }
                });
            } : function (_0x1cc844, _0x36944d, _0xcade1b, _0x5cf9ad) {
                if (_0x5cf9ad === undefined)
                    _0x5cf9ad = _0xcade1b;
                _0x1cc844[_0x5cf9ad] = _0x36944d[_0xcade1b];
            }), _0x10ed20 = this && this['__setModuleDefault'] || (Object['create'] ? function (_0x382888, _0x27c0ab) {
                Object['defineProperty'](_0x382888, 'default', {
                    'enumerable': !![],
                    'value': _0x27c0ab
                });
            } : function (_0x43f9ea, _0x53ad5f) {
                _0x43f9ea['default'] = _0x53ad5f;
            }), _0x194463 = this && this['__importStar'] || function (_0x377f9f) {
                if (_0x377f9f && _0x377f9f['__esModule'])
                    return _0x377f9f;
                var _0x44304c = {};
                if (_0x377f9f != null) {
                    for (var _0x13e6c2 in _0x377f9f)
                        if (_0x13e6c2 !== 'default' && Object['prototype']['hasOwnProperty']['call'](_0x377f9f, _0x13e6c2))
                            _0x52017f(_0x44304c, _0x377f9f, _0x13e6c2);
                }
                return _0x10ed20(_0x44304c, _0x377f9f), _0x44304c;
            }, _0x5c7790 = this && this['__importDefault'] || function (_0x55dbb9) {
                return _0x55dbb9 && _0x55dbb9['__esModule'] ? _0x55dbb9 : { 'default': _0x55dbb9 };
            };
        Object['defineProperty'](_0x2208d7, '__esModule', { 'value': !![] }), _0x2208d7['Namespace'] = _0x2208d7['Socket'] = _0x2208d7['Server'] = void 0x0;
        const _0x14b0ce = _0x2fee36(0x3575), _0x12c406 = _0x2fee36(0xdf3b), _0x1f508f = _0x2fee36(0xe994), _0x3528a1 = _0x2fee36(0x12bf4), _0x9849c = _0x2fee36(0x31ed), _0x16561a = _0x2fee36(0x11569), _0x5a816e = _0x2fee36(0xde23), _0x24ac32 = _0x2fee36(0x171e3), _0x5cba94 = _0x2fee36(0x141b9), _0x5508c6 = _0x2fee36(0x10f09);
        Object['defineProperty'](_0x2208d7, 'Namespace', {
            'enumerable': !![],
            'get': function () {
                return _0x5508c6['Namespace'];
            }
        });
        const _0x5ef00d = _0x2fee36(0x12975), _0x3343b6 = _0x2fee36(0xb509), _0xaf5919 = _0x194463(_0x2fee36(0x7dc)), _0x16a998 = _0x5c7790(_0x2fee36(0x566b)), _0xdbfd97 = _0x2fee36(0x1764c);
        Object['defineProperty'](_0x2208d7, 'Socket', {
            'enumerable': !![],
            'get': function () {
                return _0xdbfd97['Socket'];
            }
        });
        const _0x45a9dd = _0x2fee36(0x17dca), _0x136486 = _0x2fee36(0xd2a), _0x650bd2 = (0x0, _0x16a998['default'])('socket.io:server'), _0x28fd74 = _0x2fee36(0x7c63)['version'], _0x52b0c7 = /\.map/;
        class _0x458415 extends _0x45a9dd['StrictEventEmitter'] {
            constructor(_0x54a0be, _0x3b6e06 = {}) {
                super(), this['_nsps'] = new Map(), this['parentNsps'] = new Map();
                'object' === typeof _0x54a0be && _0x54a0be instanceof Object && !_0x54a0be['listen'] && (_0x3b6e06 = _0x54a0be, _0x54a0be = undefined);
                this['path'](_0x3b6e06['path'] || '/socket.io'), this['connectTimeout'](_0x3b6e06['connectTimeout'] || 0xafc8), this['serveClient'](![] !== _0x3b6e06['serveClient']), this['_parser'] = _0x3b6e06['parser'] || _0xaf5919, this['encoder'] = new this['_parser']['Encoder'](), this['adapter'](_0x3b6e06['adapter'] || _0x3343b6['Adapter']), this['sockets'] = this['of']('/'), this['opts'] = _0x3b6e06;
                if (_0x54a0be || typeof _0x54a0be == 'number')
                    this['attach'](_0x54a0be);
            }
            ['serveClient'](_0x191711) {
                if (!arguments['length'])
                    return this['_serveClient'];
                return this['_serveClient'] = _0x191711, this;
            }
            ['_checkNamespace'](_0x362fd8, _0x35d7a8, _0x5a5e9f) {
                if (this['parentNsps']['size'] === 0x0)
                    return _0x5a5e9f(![]);
                const _0x1496dd = this['parentNsps']['keys'](), _0x499974 = () => {
                        const _0x185abf = _0x1496dd['next']();
                        if (_0x185abf['done'])
                            return _0x5a5e9f(![]);
                        _0x185abf['value'](_0x362fd8, _0x35d7a8, (_0x1422e3, _0x36c403) => {
                            if (_0x1422e3 || !_0x36c403)
                                return _0x499974();
                            if (this['_nsps']['has'](_0x362fd8))
                                return _0x650bd2('dynamic\x20namespace\x20%s\x20already\x20exists', _0x362fd8), _0x5a5e9f(this['_nsps']['get'](_0x362fd8));
                            const _0x2d3d37 = this['parentNsps']['get'](_0x185abf['value'])['createChild'](_0x362fd8);
                            _0x650bd2('dynamic\x20namespace\x20%s\x20was\x20created', _0x362fd8), this['sockets']['emitReserved']('new_namespace', _0x2d3d37), _0x5a5e9f(_0x2d3d37);
                        });
                    };
                _0x499974();
            }
            ['path'](_0x2488d2) {
                if (!arguments['length'])
                    return this['_path'];
                this['_path'] = _0x2488d2['replace'](/\/$/, '');
                const _0x46fde8 = this['_path']['replace'](/[-\/\\^$*+?.()|[\]{}]/g, '\x5c$&');
                return this['clientPathRegex'] = new RegExp('^' + _0x46fde8 + '/socket\x5c.io(\x5c.msgpack|\x5c.esm)?(\x5c.min)?\x5c.js(\x5c.map)?(?:\x5c?|$)'), this;
            }
            ['connectTimeout'](_0x1931ad) {
                if (_0x1931ad === undefined)
                    return this['_connectTimeout'];
                return this['_connectTimeout'] = _0x1931ad, this;
            }
            ['adapter'](_0x4e8bad) {
                if (!arguments['length'])
                    return this['_adapter'];
                this['_adapter'] = _0x4e8bad;
                for (const _0x3fc925 of this['_nsps']['values']()) {
                    _0x3fc925['_initAdapter']();
                }
                return this;
            }
            ['listen'](_0x449c69, _0x1aef41 = {}) {
                return this['attach'](_0x449c69, _0x1aef41);
            }
            ['attach'](_0x4d3094, _0x3b8130 = {}) {
                if ('function' == typeof _0x4d3094) {
                    const _0x1e86a1 = 'You\x20are\x20trying\x20to\x20attach\x20socket.io\x20to\x20an\x20express\x20' + 'request\x20handler\x20function.\x20Please\x20pass\x20a\x20http.Server\x20instance.';
                    throw new Error(_0x1e86a1);
                }
                Number(_0x4d3094) == _0x4d3094 && (_0x4d3094 = Number(_0x4d3094));
                if ('number' == typeof _0x4d3094) {
                    _0x650bd2('creating\x20http\x20server\x20and\x20binding\x20to\x20%d', _0x4d3094);
                    const _0x1ef3ed = _0x4d3094;
                    _0x4d3094 = _0x14b0ce['createServer']((_0xdfbfb6, _0x5a804c) => {
                        _0x5a804c['writeHead'](0x194), _0x5a804c['end']();
                    }), _0x4d3094['listen'](_0x1ef3ed);
                }
                return Object['assign'](_0x3b8130, this['opts']), _0x3b8130['path'] = _0x3b8130['path'] || this['_path'], this['initEngine'](_0x4d3094, _0x3b8130), this;
            }
            ['attachApp'](_0x150f9c, _0x148e89 = {}) {
                Object['assign'](_0x148e89, this['opts']), _0x148e89['path'] = _0x148e89['path'] || this['_path'], _0x650bd2('creating\x20uWebSockets.js-based\x20engine\x20with\x20opts\x20%j', _0x148e89);
                const _0x4714a7 = new _0x5a816e['uServer'](_0x148e89);
                _0x4714a7['attach'](_0x150f9c, _0x148e89), this['bind'](_0x4714a7), this['_serveClient'] && _0x150f9c['get'](this['_path'] + '/*', (_0x19cbc5, _0x1025e2) => {
                    if (!this['clientPathRegex']['test'](_0x1025e2['getUrl']())) {
                        _0x1025e2['setYield'](!![]);
                        return;
                    }
                    const _0x438c5c = _0x1025e2['getUrl']()['replace'](this['_path'], '')['replace'](/\?.*$/, '')['replace'](/^\//, ''), _0x54855d = _0x52b0c7['test'](_0x438c5c), _0x4693e2 = _0x54855d ? 'map' : 'source', _0x55bd13 = '\x22' + _0x28fd74 + '\x22', _0x2d3852 = 'W/' + _0x55bd13, _0x8aff1a = _0x1025e2['getHeader']('if-none-match');
                    if (_0x8aff1a) {
                        if (_0x55bd13 === _0x8aff1a || _0x2d3852 === _0x8aff1a) {
                            _0x650bd2('serve\x20client\x20%s\x20304', _0x4693e2), _0x19cbc5['writeStatus']('304\x20Not\x20Modified'), _0x19cbc5['end']();
                            return;
                        }
                    }
                    _0x650bd2('serve\x20client\x20%s', _0x4693e2), _0x19cbc5['writeHeader']('cache-control', 'public,\x20max-age=0'), _0x19cbc5['writeHeader']('content-type', 'application/' + (_0x54855d ? 'json' : 'javascript')), _0x19cbc5['writeHeader']('etag', _0x55bd13);
                    const _0x209a20 = _0x16561a['join'](__dirname, '../client-dist/', _0x438c5c);
                    (0x0, _0x136486['serveFile'])(_0x19cbc5, _0x209a20);
                }), (0x0, _0x136486['patchAdapter'])(_0x150f9c);
            }
            ['initEngine'](_0x2158de, _0x22bfbb) {
                _0x650bd2('creating\x20engine.io\x20instance\x20with\x20opts\x20%j', _0x22bfbb), this['eio'] = (0x0, _0x5a816e['attach'])(_0x2158de, _0x22bfbb);
                if (this['_serveClient'])
                    this['attachServe'](_0x2158de);
                this['httpServer'] = _0x2158de, this['bind'](this['eio']);
            }
            ['attachServe'](_0xba4e1c) {
                _0x650bd2('attaching\x20client\x20serving\x20req\x20handler');
                const _0x5b910c = _0xba4e1c['listeners']('request')['slice'](0x0);
                _0xba4e1c['removeAllListeners']('request'), _0xba4e1c['on']('request', (_0x50325c, _0x71559b) => {
                    if (this['clientPathRegex']['test'](_0x50325c['url']))
                        this['serve'](_0x50325c, _0x71559b);
                    else
                        for (let _0x2c8351 = 0x0; _0x2c8351 < _0x5b910c['length']; _0x2c8351++) {
                            _0x5b910c[_0x2c8351]['call'](_0xba4e1c, _0x50325c, _0x71559b);
                        }
                });
            }
            ['serve'](_0x52ba1e, _0x55bdd2) {
                const _0x27ec84 = _0x52ba1e['url']['replace'](this['_path'], '')['replace'](/\?.*$/, ''), _0x3a3404 = _0x52b0c7['test'](_0x27ec84), _0x415040 = _0x3a3404 ? 'map' : 'source', _0x5dc3c8 = '\x22' + _0x28fd74 + '\x22', _0x2abcd6 = 'W/' + _0x5dc3c8, _0x101f75 = _0x52ba1e['headers']['if-none-match'];
                if (_0x101f75) {
                    if (_0x5dc3c8 === _0x101f75 || _0x2abcd6 === _0x101f75) {
                        _0x650bd2('serve\x20client\x20%s\x20304', _0x415040), _0x55bdd2['writeHead'](0x130), _0x55bdd2['end']();
                        return;
                    }
                }
                _0x650bd2('serve\x20client\x20%s', _0x415040), _0x55bdd2['setHeader']('Cache-Control', 'public,\x20max-age=0'), _0x55bdd2['setHeader']('Content-Type', 'application/' + (_0x3a3404 ? 'json' : 'javascript')), _0x55bdd2['setHeader']('ETag', _0x5dc3c8), _0x458415['sendFile'](_0x27ec84, _0x52ba1e, _0x55bdd2);
            }
            static ['sendFile'](_0x559260, _0x211862, _0x3384aa) {
                const _0x582066 = (0x0, _0x12c406['createReadStream'])(_0x16561a['join'](__dirname, '../client-dist/', _0x559260)), _0x54e6de = _0x3528a1(_0x211862)['encodings']([
                        'br',
                        'gzip',
                        'deflate'
                    ]), _0x56e66a = _0x4a272a => {
                        _0x4a272a && _0x3384aa['end']();
                    };
                switch (_0x54e6de) {
                case 'br':
                    _0x3384aa['writeHead'](0xc8, { 'content-encoding': 'br' }), _0x582066['pipe']((0x0, _0x1f508f['createBrotliCompress'])())['pipe'](_0x3384aa), (0x0, _0x9849c['pipeline'])(_0x582066, (0x0, _0x1f508f['createBrotliCompress'])(), _0x3384aa, _0x56e66a);
                    break;
                case 'gzip':
                    _0x3384aa['writeHead'](0xc8, { 'content-encoding': 'gzip' }), (0x0, _0x9849c['pipeline'])(_0x582066, (0x0, _0x1f508f['createGzip'])(), _0x3384aa, _0x56e66a);
                    break;
                case 'deflate':
                    _0x3384aa['writeHead'](0xc8, { 'content-encoding': 'deflate' }), (0x0, _0x9849c['pipeline'])(_0x582066, (0x0, _0x1f508f['createDeflate'])(), _0x3384aa, _0x56e66a);
                    break;
                default:
                    _0x3384aa['writeHead'](0xc8), (0x0, _0x9849c['pipeline'])(_0x582066, _0x3384aa, _0x56e66a);
                }
            }
            ['bind'](_0x29bd98) {
                return this['engine'] = _0x29bd98, this['engine']['on']('connection', this['onconnection']['bind'](this)), this;
            }
            ['onconnection'](_0x2bf9d0) {
                _0x650bd2('incoming\x20connection\x20with\x20id\x20%s', _0x2bf9d0['id']);
                const _0xff68be = new _0x24ac32['Client'](this, _0x2bf9d0);
                return _0x2bf9d0['protocol'] === 0x3 && _0xff68be['connect']('/'), this;
            }
            ['of'](_0x261911, _0x2911a1) {
                if (typeof _0x261911 === 'function' || _0x261911 instanceof RegExp) {
                    const _0x4a967d = new _0x5ef00d['ParentNamespace'](this);
                    return _0x650bd2('initializing\x20parent\x20namespace\x20%s', _0x4a967d['name']), typeof _0x261911 === 'function' ? this['parentNsps']['set'](_0x261911, _0x4a967d) : this['parentNsps']['set']((_0x3fe71e, _0x26ab59, _0x43ccfb) => _0x43ccfb(null, _0x261911['test'](_0x3fe71e)), _0x4a967d), _0x2911a1 && _0x4a967d['on']('connect', _0x2911a1), _0x4a967d;
                }
                if (String(_0x261911)[0x0] !== '/')
                    _0x261911 = '/' + _0x261911;
                let _0x4f9258 = this['_nsps']['get'](_0x261911);
                !_0x4f9258 && (_0x650bd2('initializing\x20namespace\x20%s', _0x261911), _0x4f9258 = new _0x5508c6['Namespace'](this, _0x261911), this['_nsps']['set'](_0x261911, _0x4f9258), _0x261911 !== '/' && this['sockets']['emitReserved']('new_namespace', _0x4f9258));
                if (_0x2911a1)
                    _0x4f9258['on']('connect', _0x2911a1);
                return _0x4f9258;
            }
            ['close'](_0x591bba) {
                for (const _0x545e7c of this['sockets']['sockets']['values']()) {
                    _0x545e7c['_onclose']('server\x20shutting\x20down');
                }
                this['engine']['close'](), (0x0, _0x136486['restoreAdapter'])(), this['httpServer'] ? this['httpServer']['close'](_0x591bba) : _0x591bba && _0x591bba();
            }
            ['use'](_0x8d6b73) {
                return this['sockets']['use'](_0x8d6b73), this;
            }
            ['to'](_0x197b23) {
                return this['sockets']['to'](_0x197b23);
            }
            ['in'](_0x4a0c77) {
                return this['sockets']['in'](_0x4a0c77);
            }
            ['except'](_0x4fe0dd) {
                return this['sockets']['except'](_0x4fe0dd);
            }
            ['send'](..._0x1839ba) {
                return this['sockets']['emit']('message', ..._0x1839ba), this;
            }
            ['write'](..._0x122173) {
                return this['sockets']['emit']('message', ..._0x122173), this;
            }
            ['serverSideEmit'](_0x3fe97a, ..._0x22f570) {
                return this['sockets']['serverSideEmit'](_0x3fe97a, ..._0x22f570);
            }
            ['allSockets']() {
                return this['sockets']['allSockets']();
            }
            ['compress'](_0x320879) {
                return this['sockets']['compress'](_0x320879);
            }
            get ['volatile']() {
                return this['sockets']['volatile'];
            }
            get ['local']() {
                return this['sockets']['local'];
            }
            ['timeout'](_0xfbc193) {
                return this['sockets']['timeout'](_0xfbc193);
            }
            ['fetchSockets']() {
                return this['sockets']['fetchSockets']();
            }
            ['socketsJoin'](_0x245de4) {
                return this['sockets']['socketsJoin'](_0x245de4);
            }
            ['socketsLeave'](_0x2d6a13) {
                return this['sockets']['socketsLeave'](_0x2d6a13);
            }
            ['disconnectSockets'](_0x4a9fa8 = ![]) {
                return this['sockets']['disconnectSockets'](_0x4a9fa8);
            }
        }
        _0x2208d7['Server'] = _0x458415;
        const _0x10a949 = Object['keys'](_0x5cba94['EventEmitter']['prototype'])['filter'](function (_0x1d29d4) {
            return typeof _0x5cba94['EventEmitter']['prototype'][_0x1d29d4] === 'function';
        });
        _0x10a949['forEach'](function (_0x22a8f2) {
            _0x458415['prototype'][_0x22a8f2] = function () {
                return this['sockets'][_0x22a8f2]['apply'](this['sockets'], arguments);
            };
        }), _0x502180['exports'] = (_0x4556c2, _0x3007c3) => new _0x458415(_0x4556c2, _0x3007c3), _0x502180['exports']['Server'] = _0x458415, _0x502180['exports']['Namespace'] = _0x5508c6['Namespace'], _0x502180['exports']['Socket'] = _0xdbfd97['Socket'];
    },
    0x10f09: function (_0x533f73, _0x5cac66, _0x34096b) {
        'use strict';
        var _0x3270d4 = this && this['__importDefault'] || function (_0x4695fa) {
            return _0x4695fa && _0x4695fa['__esModule'] ? _0x4695fa : { 'default': _0x4695fa };
        };
        Object['defineProperty'](_0x5cac66, '__esModule', { 'value': !![] }), _0x5cac66['Namespace'] = _0x5cac66['RESERVED_EVENTS'] = void 0x0;
        const _0x38be52 = _0x34096b(0x1764c), _0x4d696f = _0x34096b(0x17dca), _0x5c7e1a = _0x3270d4(_0x34096b(0x566b)), _0x3c0a67 = _0x34096b(0x4257), _0x45d0e8 = (0x0, _0x5c7e1a['default'])('socket.io:namespace');
        _0x5cac66['RESERVED_EVENTS'] = new Set([
            'connect',
            'connection',
            'new_namespace'
        ]);
        class _0x26d6f4 extends _0x4d696f['StrictEventEmitter'] {
            constructor(_0x2e2f50, _0x4e2f87) {
                super(), this['sockets'] = new Map(), this['_fns'] = [], this['_ids'] = 0x0, this['server'] = _0x2e2f50, this['name'] = _0x4e2f87, this['_initAdapter']();
            }
            ['_initAdapter']() {
                this['adapter'] = new (this['server']['adapter']())(this);
            }
            ['use'](_0x23a590) {
                return this['_fns']['push'](_0x23a590), this;
            }
            ['run'](_0x35ee67, _0x32097f) {
                const _0x5dab44 = this['_fns']['slice'](0x0);
                if (!_0x5dab44['length'])
                    return _0x32097f(null);
                function _0x4646df(_0x2b2da2) {
                    _0x5dab44[_0x2b2da2](_0x35ee67, function (_0x1d60d0) {
                        if (_0x1d60d0)
                            return _0x32097f(_0x1d60d0);
                        if (!_0x5dab44[_0x2b2da2 + 0x1])
                            return _0x32097f(null);
                        _0x4646df(_0x2b2da2 + 0x1);
                    });
                }
                _0x4646df(0x0);
            }
            ['to'](_0x461769) {
                return new _0x3c0a67['BroadcastOperator'](this['adapter'])['to'](_0x461769);
            }
            ['in'](_0x1d8ba6) {
                return new _0x3c0a67['BroadcastOperator'](this['adapter'])['in'](_0x1d8ba6);
            }
            ['except'](_0x5800cf) {
                return new _0x3c0a67['BroadcastOperator'](this['adapter'])['except'](_0x5800cf);
            }
            ['_add'](_0x2893cd, _0x4e1808, _0x5d2b73) {
                _0x45d0e8('adding\x20socket\x20to\x20nsp\x20%s', this['name']);
                const _0x306862 = new _0x38be52['Socket'](this, _0x2893cd, _0x4e1808);
                return this['run'](_0x306862, _0x1d8db5 => {
                    process['nextTick'](() => {
                        if ('open' == _0x2893cd['conn']['readyState']) {
                            if (_0x1d8db5)
                                return _0x2893cd['conn']['protocol'] === 0x3 ? _0x306862['_error'](_0x1d8db5['data'] || _0x1d8db5['message']) : _0x306862['_error']({
                                    'message': _0x1d8db5['message'],
                                    'data': _0x1d8db5['data']
                                });
                            this['sockets']['set'](_0x306862['id'], _0x306862), _0x306862['_onconnect']();
                            if (_0x5d2b73)
                                _0x5d2b73();
                            this['emitReserved']('connect', _0x306862), this['emitReserved']('connection', _0x306862);
                        } else
                            _0x45d0e8('next\x20called\x20after\x20client\x20was\x20closed\x20-\x20ignoring\x20socket');
                    });
                }), _0x306862;
            }
            ['_remove'](_0x34ae30) {
                this['sockets']['has'](_0x34ae30['id']) ? this['sockets']['delete'](_0x34ae30['id']) : _0x45d0e8('ignoring\x20remove\x20for\x20%s', _0x34ae30['id']);
            }
            ['emit'](_0x296fe5, ..._0x1dafb7) {
                return new _0x3c0a67['BroadcastOperator'](this['adapter'])['emit'](_0x296fe5, ..._0x1dafb7);
            }
            ['send'](..._0x18ac86) {
                return this['emit']('message', ..._0x18ac86), this;
            }
            ['write'](..._0x4294f8) {
                return this['emit']('message', ..._0x4294f8), this;
            }
            ['serverSideEmit'](_0x40eb79, ..._0x3d1bf7) {
                if (_0x5cac66['RESERVED_EVENTS']['has'](_0x40eb79))
                    throw new Error('\x22' + _0x40eb79 + '\x22\x20is\x20a\x20reserved\x20event\x20name');
                return _0x3d1bf7['unshift'](_0x40eb79), this['adapter']['serverSideEmit'](_0x3d1bf7), !![];
            }
            ['_onServerSideEmit'](_0x2563fe) {
                super['emitUntyped']['apply'](this, _0x2563fe);
            }
            ['allSockets']() {
                return new _0x3c0a67['BroadcastOperator'](this['adapter'])['allSockets']();
            }
            ['compress'](_0x16c89c) {
                return new _0x3c0a67['BroadcastOperator'](this['adapter'])['compress'](_0x16c89c);
            }
            get ['volatile']() {
                return new _0x3c0a67['BroadcastOperator'](this['adapter'])['volatile'];
            }
            get ['local']() {
                return new _0x3c0a67['BroadcastOperator'](this['adapter'])['local'];
            }
            ['timeout'](_0x3e9ef8) {
                return new _0x3c0a67['BroadcastOperator'](this['adapter'])['timeout'](_0x3e9ef8);
            }
            ['fetchSockets']() {
                return new _0x3c0a67['BroadcastOperator'](this['adapter'])['fetchSockets']();
            }
            ['socketsJoin'](_0x145fc9) {
                return new _0x3c0a67['BroadcastOperator'](this['adapter'])['socketsJoin'](_0x145fc9);
            }
            ['socketsLeave'](_0x1a5818) {
                return new _0x3c0a67['BroadcastOperator'](this['adapter'])['socketsLeave'](_0x1a5818);
            }
            ['disconnectSockets'](_0x2193b6 = ![]) {
                return new _0x3c0a67['BroadcastOperator'](this['adapter'])['disconnectSockets'](_0x2193b6);
            }
        }
        _0x5cac66['Namespace'] = _0x26d6f4;
    },
    0x12975: (_0x3fc4c9, _0x972b12, _0x3091de) => {
        'use strict';
        Object['defineProperty'](_0x972b12, '__esModule', { 'value': !![] }), _0x972b12['ParentNamespace'] = void 0x0;
        const _0x316b44 = _0x3091de(0x10f09);
        class _0x19bf1d extends _0x316b44['Namespace'] {
            constructor(_0x3c434e) {
                super(_0x3c434e, '/_' + _0x19bf1d['count']++), this['children'] = new Set();
            }
            ['_initAdapter']() {
                const _0xf4f1c2 = (_0x41544b, _0x56e92e) => {
                    this['children']['forEach'](_0x215f8c => {
                        _0x215f8c['adapter']['broadcast'](_0x41544b, _0x56e92e);
                    });
                };
                this['adapter'] = { 'broadcast': _0xf4f1c2 };
            }
            ['emit'](_0x2b1450, ..._0x4c153b) {
                return this['children']['forEach'](_0x418e02 => {
                    _0x418e02['emit'](_0x2b1450, ..._0x4c153b);
                }), !![];
            }
            ['createChild'](_0x2dbb6a) {
                const _0x225075 = new _0x316b44['Namespace'](this['server'], _0x2dbb6a);
                return _0x225075['_fns'] = this['_fns']['slice'](0x0), this['listeners']('connect')['forEach'](_0x3f1c65 => _0x225075['on']('connect', _0x3f1c65)), this['listeners']('connection')['forEach'](_0x19bf18 => _0x225075['on']('connection', _0x19bf18)), this['children']['add'](_0x225075), this['server']['_nsps']['set'](_0x2dbb6a, _0x225075), _0x225075;
            }
            ['fetchSockets']() {
                throw new Error('fetchSockets()\x20is\x20not\x20supported\x20on\x20parent\x20namespaces');
            }
        }
        _0x972b12['ParentNamespace'] = _0x19bf1d, _0x19bf1d['count'] = 0x0;
    },
    0x1764c: function (_0x258dac, _0x5edc3e, _0x38503e) {
        'use strict';
        var _0x564258 = this && this['__importDefault'] || function (_0xd7660f) {
            return _0xd7660f && _0xd7660f['__esModule'] ? _0xd7660f : { 'default': _0xd7660f };
        };
        Object['defineProperty'](_0x5edc3e, '__esModule', { 'value': !![] }), _0x5edc3e['Socket'] = _0x5edc3e['RESERVED_EVENTS'] = void 0x0;
        const _0x505a8a = _0x38503e(0x7dc), _0x1e5b5f = _0x564258(_0x38503e(0x566b)), _0xe5e672 = _0x38503e(0x17dca), _0x40651b = _0x564258(_0x38503e(0x7384)), _0xe29112 = _0x38503e(0x4257), _0x180547 = (0x0, _0x1e5b5f['default'])('socket.io:socket');
        _0x5edc3e['RESERVED_EVENTS'] = new Set([
            'connect',
            'connect_error',
            'disconnect',
            'disconnecting',
            'newListener',
            'removeListener'
        ]);
        class _0x4bdcc2 extends _0xe5e672['StrictEventEmitter'] {
            constructor(_0x29d8d8, _0x6fdfa5, _0x12228a) {
                super(), this['nsp'] = _0x29d8d8, this['client'] = _0x6fdfa5, this['data'] = {}, this['connected'] = ![], this['acks'] = new Map(), this['fns'] = [], this['flags'] = {}, this['server'] = _0x29d8d8['server'], this['adapter'] = this['nsp']['adapter'], _0x6fdfa5['conn']['protocol'] === 0x3 ? this['id'] = _0x29d8d8['name'] !== '/' ? _0x29d8d8['name'] + '#' + _0x6fdfa5['id'] : _0x6fdfa5['id'] : this['id'] = _0x40651b['default']['generateId'](), this['handshake'] = this['buildHandshake'](_0x12228a);
            }
            ['buildHandshake'](_0x273345) {
                return {
                    'headers': this['request']['headers'],
                    'time': new Date() + '',
                    'address': this['conn']['remoteAddress'],
                    'xdomain': !!this['request']['headers']['origin'],
                    'secure': !!this['request']['connection']['encrypted'],
                    'issued': +new Date(),
                    'url': this['request']['url'],
                    'query': this['request']['_query'],
                    'auth': _0x273345
                };
            }
            ['emit'](_0x34741b, ..._0x323292) {
                if (_0x5edc3e['RESERVED_EVENTS']['has'](_0x34741b))
                    throw new Error('\x22' + _0x34741b + '\x22\x20is\x20a\x20reserved\x20event\x20name');
                const _0xbe40d2 = [
                        _0x34741b,
                        ..._0x323292
                    ], _0x2b1db9 = {
                        'type': _0x505a8a['PacketType']['EVENT'],
                        'data': _0xbe40d2
                    };
                if (typeof _0xbe40d2[_0xbe40d2['length'] - 0x1] === 'function') {
                    const _0x3a48e7 = this['nsp']['_ids']++;
                    _0x180547('emitting\x20packet\x20with\x20ack\x20id\x20%d', _0x3a48e7), this['registerAckCallback'](_0x3a48e7, _0xbe40d2['pop']()), _0x2b1db9['id'] = _0x3a48e7;
                }
                const _0x50c6e4 = Object['assign']({}, this['flags']);
                return this['flags'] = {}, this['notifyOutgoingListeners'](_0x2b1db9), this['packet'](_0x2b1db9, _0x50c6e4), !![];
            }
            ['registerAckCallback'](_0x39e846, _0x13f274) {
                const _0x2be173 = this['flags']['timeout'];
                if (_0x2be173 === undefined) {
                    this['acks']['set'](_0x39e846, _0x13f274);
                    return;
                }
                const _0x2ffe4f = setTimeout(() => {
                    _0x180547('event\x20with\x20ack\x20id\x20%d\x20has\x20timed\x20out\x20after\x20%d\x20ms', _0x39e846, _0x2be173), this['acks']['delete'](_0x39e846), _0x13f274['call'](this, new Error('operation\x20has\x20timed\x20out'));
                }, _0x2be173);
                this['acks']['set'](_0x39e846, (..._0x663eab) => {
                    clearTimeout(_0x2ffe4f), _0x13f274['apply'](this, [
                        null,
                        ..._0x663eab
                    ]);
                });
            }
            ['to'](_0x148e33) {
                return this['newBroadcastOperator']()['to'](_0x148e33);
            }
            ['in'](_0x826c3f) {
                return this['newBroadcastOperator']()['in'](_0x826c3f);
            }
            ['except'](_0x10c068) {
                return this['newBroadcastOperator']()['except'](_0x10c068);
            }
            ['send'](..._0x332765) {
                return this['emit']('message', ..._0x332765), this;
            }
            ['write'](..._0x158c4c) {
                return this['emit']('message', ..._0x158c4c), this;
            }
            ['packet'](_0x57ccee, _0x1845e9 = {}) {
                _0x57ccee['nsp'] = this['nsp']['name'], _0x1845e9['compress'] = ![] !== _0x1845e9['compress'], this['client']['_packet'](_0x57ccee, _0x1845e9);
            }
            ['join'](_0x5b0a55) {
                return _0x180547('join\x20room\x20%s', _0x5b0a55), this['adapter']['addAll'](this['id'], new Set(Array['isArray'](_0x5b0a55) ? _0x5b0a55 : [_0x5b0a55]));
            }
            ['leave'](_0x3ef10b) {
                return _0x180547('leave\x20room\x20%s', _0x3ef10b), this['adapter']['del'](this['id'], _0x3ef10b);
            }
            ['leaveAll']() {
                this['adapter']['delAll'](this['id']);
            }
            ['_onconnect']() {
                _0x180547('socket\x20connected\x20-\x20writing\x20packet'), this['connected'] = !![], this['join'](this['id']), this['conn']['protocol'] === 0x3 ? this['packet']({ 'type': _0x505a8a['PacketType']['CONNECT'] }) : this['packet']({
                    'type': _0x505a8a['PacketType']['CONNECT'],
                    'data': { 'sid': this['id'] }
                });
            }
            ['_onpacket'](_0x3c99df) {
                _0x180547('got\x20packet\x20%j', _0x3c99df);
                switch (_0x3c99df['type']) {
                case _0x505a8a['PacketType']['EVENT']:
                    this['onevent'](_0x3c99df);
                    break;
                case _0x505a8a['PacketType']['BINARY_EVENT']:
                    this['onevent'](_0x3c99df);
                    break;
                case _0x505a8a['PacketType']['ACK']:
                    this['onack'](_0x3c99df);
                    break;
                case _0x505a8a['PacketType']['BINARY_ACK']:
                    this['onack'](_0x3c99df);
                    break;
                case _0x505a8a['PacketType']['DISCONNECT']:
                    this['ondisconnect']();
                    break;
                }
            }
            ['onevent'](_0x285dd8) {
                const _0x49292d = _0x285dd8['data'] || [];
                _0x180547('emitting\x20event\x20%j', _0x49292d);
                null != _0x285dd8['id'] && (_0x180547('attaching\x20ack\x20callback\x20to\x20event'), _0x49292d['push'](this['ack'](_0x285dd8['id'])));
                if (this['_anyListeners'] && this['_anyListeners']['length']) {
                    const _0x1d964a = this['_anyListeners']['slice']();
                    for (const _0xc8fc85 of _0x1d964a) {
                        _0xc8fc85['apply'](this, _0x49292d);
                    }
                }
                this['dispatch'](_0x49292d);
            }
            ['ack'](_0x37a237) {
                const _0x41cc5d = this;
                let _0xd93088 = ![];
                return function () {
                    if (_0xd93088)
                        return;
                    const _0xc43802 = Array['prototype']['slice']['call'](arguments);
                    _0x180547('sending\x20ack\x20%j', _0xc43802), _0x41cc5d['packet']({
                        'id': _0x37a237,
                        'type': _0x505a8a['PacketType']['ACK'],
                        'data': _0xc43802
                    }), _0xd93088 = !![];
                };
            }
            ['onack'](_0x53a58c) {
                const _0x19d1fa = this['acks']['get'](_0x53a58c['id']);
                'function' == typeof _0x19d1fa ? (_0x180547('calling\x20ack\x20%s\x20with\x20%j', _0x53a58c['id'], _0x53a58c['data']), _0x19d1fa['apply'](this, _0x53a58c['data']), this['acks']['delete'](_0x53a58c['id'])) : _0x180547('bad\x20ack\x20%s', _0x53a58c['id']);
            }
            ['ondisconnect']() {
                _0x180547('got\x20disconnect\x20packet'), this['_onclose']('client\x20namespace\x20disconnect');
            }
            ['_onerror'](_0x136092) {
                this['listeners']('error')['length'] ? this['emitReserved']('error', _0x136092) : (console['error']('Missing\x20error\x20handler\x20on\x20`socket`.'), console['error'](_0x136092['stack']));
            }
            ['_onclose'](_0x52ec4a) {
                if (!this['connected'])
                    return this;
                _0x180547('closing\x20socket\x20-\x20reason\x20%s', _0x52ec4a), this['emitReserved']('disconnecting', _0x52ec4a), this['leaveAll'](), this['nsp']['_remove'](this), this['client']['_remove'](this), this['connected'] = ![], this['emitReserved']('disconnect', _0x52ec4a);
                return;
            }
            ['_error'](_0x55e28a) {
                this['packet']({
                    'type': _0x505a8a['PacketType']['CONNECT_ERROR'],
                    'data': _0x55e28a
                });
            }
            ['disconnect'](_0x330007 = ![]) {
                if (!this['connected'])
                    return this;
                return _0x330007 ? this['client']['_disconnect']() : (this['packet']({ 'type': _0x505a8a['PacketType']['DISCONNECT'] }), this['_onclose']('server\x20namespace\x20disconnect')), this;
            }
            ['compress'](_0x5ecc9) {
                return this['flags']['compress'] = _0x5ecc9, this;
            }
            get ['volatile']() {
                return this['flags']['volatile'] = !![], this;
            }
            get ['broadcast']() {
                return this['newBroadcastOperator']();
            }
            get ['local']() {
                return this['newBroadcastOperator']()['local'];
            }
            ['timeout'](_0x43ddb2) {
                return this['flags']['timeout'] = _0x43ddb2, this;
            }
            ['dispatch'](_0xe14d8f) {
                _0x180547('dispatching\x20an\x20event\x20%j', _0xe14d8f), this['run'](_0xe14d8f, _0x419d8b => {
                    process['nextTick'](() => {
                        if (_0x419d8b)
                            return this['_onerror'](_0x419d8b);
                        this['connected'] ? super['emitUntyped']['apply'](this, _0xe14d8f) : _0x180547('ignore\x20packet\x20received\x20after\x20disconnection');
                    });
                });
            }
            ['use'](_0x33cc63) {
                return this['fns']['push'](_0x33cc63), this;
            }
            ['run'](_0x49698e, _0x426a87) {
                const _0x5ae4bc = this['fns']['slice'](0x0);
                if (!_0x5ae4bc['length'])
                    return _0x426a87(null);
                function _0x133bd4(_0x577920) {
                    _0x5ae4bc[_0x577920](_0x49698e, function (_0x288d27) {
                        if (_0x288d27)
                            return _0x426a87(_0x288d27);
                        if (!_0x5ae4bc[_0x577920 + 0x1])
                            return _0x426a87(null);
                        _0x133bd4(_0x577920 + 0x1);
                    });
                }
                _0x133bd4(0x0);
            }
            get ['disconnected']() {
                return !this['connected'];
            }
            get ['request']() {
                return this['client']['request'];
            }
            get ['conn']() {
                return this['client']['conn'];
            }
            get ['rooms']() {
                return this['adapter']['socketRooms'](this['id']) || new Set();
            }
            ['onAny'](_0xeaf696) {
                return this['_anyListeners'] = this['_anyListeners'] || [], this['_anyListeners']['push'](_0xeaf696), this;
            }
            ['prependAny'](_0x4fad4a) {
                return this['_anyListeners'] = this['_anyListeners'] || [], this['_anyListeners']['unshift'](_0x4fad4a), this;
            }
            ['offAny'](_0x1deaa5) {
                if (!this['_anyListeners'])
                    return this;
                if (_0x1deaa5) {
                    const _0x2ee646 = this['_anyListeners'];
                    for (let _0x9be168 = 0x0; _0x9be168 < _0x2ee646['length']; _0x9be168++) {
                        if (_0x1deaa5 === _0x2ee646[_0x9be168])
                            return _0x2ee646['splice'](_0x9be168, 0x1), this;
                    }
                } else
                    this['_anyListeners'] = [];
                return this;
            }
            ['listenersAny']() {
                return this['_anyListeners'] || [];
            }
            ['onAnyOutgoing'](_0x4d1ec2) {
                return this['_anyOutgoingListeners'] = this['_anyOutgoingListeners'] || [], this['_anyOutgoingListeners']['push'](_0x4d1ec2), this;
            }
            ['prependAnyOutgoing'](_0x348ec2) {
                return this['_anyOutgoingListeners'] = this['_anyOutgoingListeners'] || [], this['_anyOutgoingListeners']['unshift'](_0x348ec2), this;
            }
            ['offAnyOutgoing'](_0x1888ff) {
                if (!this['_anyOutgoingListeners'])
                    return this;
                if (_0x1888ff) {
                    const _0x23aea7 = this['_anyOutgoingListeners'];
                    for (let _0x293f2f = 0x0; _0x293f2f < _0x23aea7['length']; _0x293f2f++) {
                        if (_0x1888ff === _0x23aea7[_0x293f2f])
                            return _0x23aea7['splice'](_0x293f2f, 0x1), this;
                    }
                } else
                    this['_anyOutgoingListeners'] = [];
                return this;
            }
            ['listenersAnyOutgoing']() {
                return this['_anyOutgoingListeners'] || [];
            }
            ['notifyOutgoingListeners'](_0x11deb5) {
                if (this['_anyOutgoingListeners'] && this['_anyOutgoingListeners']['length']) {
                    const _0x262949 = this['_anyOutgoingListeners']['slice']();
                    for (const _0x3f5c2d of _0x262949) {
                        _0x3f5c2d['apply'](this, _0x11deb5['data']);
                    }
                }
            }
            ['newBroadcastOperator']() {
                const _0x418e10 = Object['assign']({}, this['flags']);
                return this['flags'] = {}, new _0xe29112['BroadcastOperator'](this['adapter'], new Set(), new Set([this['id']]), _0x418e10);
            }
        }
        _0x5edc3e['Socket'] = _0x4bdcc2;
    },
    0x17dca: (_0x1edd01, _0x3b180f, _0x93ed7d) => {
        'use strict';
        Object['defineProperty'](_0x3b180f, '__esModule', { 'value': !![] }), _0x3b180f['StrictEventEmitter'] = void 0x0;
        const _0x1122d9 = _0x93ed7d(0x141b9);
        class _0x487633 extends _0x1122d9['EventEmitter'] {
            ['on'](_0x5ac457, _0x1d5844) {
                return super['on'](_0x5ac457, _0x1d5844);
            }
            ['once'](_0x4f1b84, _0x44e8bf) {
                return super['once'](_0x4f1b84, _0x44e8bf);
            }
            ['emit'](_0x2d78a3, ..._0x316772) {
                return super['emit'](_0x2d78a3, ..._0x316772);
            }
            ['emitReserved'](_0x38b4d0, ..._0xe108ac) {
                return super['emit'](_0x38b4d0, ..._0xe108ac);
            }
            ['emitUntyped'](_0x38081d, ..._0x5c8649) {
                return super['emit'](_0x38081d, ..._0x5c8649);
            }
            ['listeners'](_0x1faf30) {
                return super['listeners'](_0x1faf30);
            }
        }
        _0x3b180f['StrictEventEmitter'] = _0x487633;
    },
    0xd2a: function (_0xff6ae4, _0x2e550f, _0x1568e2) {
        'use strict';
        var _0x59b74f = this && this['__importDefault'] || function (_0x2f21d1) {
            return _0x2f21d1 && _0x2f21d1['__esModule'] ? _0x2f21d1 : { 'default': _0x2f21d1 };
        };
        Object['defineProperty'](_0x2e550f, '__esModule', { 'value': !![] }), _0x2e550f['serveFile'] = _0x2e550f['restoreAdapter'] = _0x2e550f['patchAdapter'] = void 0x0;
        const _0x257c68 = _0x1568e2(0xb509), _0x491c4e = _0x1568e2(0xdf3b), _0x4e9539 = _0x59b74f(_0x1568e2(0x566b)), _0x277f72 = (0x0, _0x4e9539['default'])('socket.io:adapter-uws'), _0x208263 = '\x1f', {
                addAll: _0x1a9e2e,
                del: _0x3799dc,
                broadcast: _0x493f55
            } = _0x257c68['Adapter']['prototype'];
        function _0x524949(_0x46df83) {
            _0x257c68['Adapter']['prototype']['addAll'] = function (_0x5284e1, _0x25fc91) {
                const _0x3932dd = !this['sids']['has'](_0x5284e1);
                _0x1a9e2e['call'](this, _0x5284e1, _0x25fc91);
                const _0x579384 = this['nsp']['sockets']['get'](_0x5284e1);
                if (!_0x579384)
                    return;
                if (_0x579384['conn']['transport']['name'] === 'websocket') {
                    _0x178706(this['nsp']['name'], _0x579384, _0x3932dd, _0x25fc91);
                    return;
                }
                _0x3932dd && _0x579384['conn']['on']('upgrade', () => {
                    const _0x3259a2 = this['sids']['get'](_0x5284e1);
                    _0x178706(this['nsp']['name'], _0x579384, _0x3932dd, _0x3259a2);
                });
            }, _0x257c68['Adapter']['prototype']['del'] = function (_0xc68b05, _0xddf149) {
                _0x3799dc['call'](this, _0xc68b05, _0xddf149);
                const _0x272605 = this['nsp']['sockets']['get'](_0xc68b05);
                if (_0x272605 && _0x272605['conn']['transport']['name'] === 'websocket') {
                    const _0x5dc2d3 = _0x272605['conn']['id'], _0x247eff = _0x272605['conn']['transport']['socket'], _0x3ddf5e = '' + this['nsp']['name'] + _0x208263 + _0xddf149;
                    _0x277f72('unsubscribe\x20connection\x20%s\x20from\x20topic\x20%s', _0x5dc2d3, _0x3ddf5e), _0x247eff['unsubscribe'](_0x3ddf5e);
                }
            }, _0x257c68['Adapter']['prototype']['broadcast'] = function (_0x16c0b0, _0x4ac51e) {
                const _0x637f5b = _0x4ac51e['rooms']['size'] <= 0x1 && _0x4ac51e['except']['size'] === 0x0;
                if (!_0x637f5b) {
                    _0x493f55['call'](this, _0x16c0b0, _0x4ac51e);
                    return;
                }
                const _0x4bc86b = _0x4ac51e['flags'] || {}, _0xe2224a = {
                        'preEncoded': !![],
                        'volatile': _0x4bc86b['volatile'],
                        'compress': _0x4bc86b['compress']
                    };
                _0x16c0b0['nsp'] = this['nsp']['name'];
                const _0x4af8f8 = this['encoder']['encode'](_0x16c0b0), _0x110375 = _0x4ac51e['rooms']['size'] === 0x0 ? this['nsp']['name'] : '' + this['nsp']['name'] + _0x208263 + _0x4ac51e['rooms']['keys']()['next']()['value'];
                _0x277f72('fast\x20publish\x20to\x20%s', _0x110375), _0x4af8f8['forEach'](_0x1fa898 => {
                    const _0x4eae05 = typeof _0x1fa898 !== 'string';
                    _0x46df83['publish'](_0x110375, _0x4eae05 ? _0x1fa898 : '4' + _0x1fa898, _0x4eae05);
                }), this['apply'](_0x4ac51e, _0x1260d4 => {
                    _0x1260d4['conn']['transport']['name'] !== 'websocket' && _0x1260d4['client']['writeToEngine'](_0x4af8f8, _0xe2224a);
                });
            };
        }
        _0x2e550f['patchAdapter'] = _0x524949;
        function _0x178706(_0x1ff5a8, _0x1a624d, _0x35120a, _0x5129c1) {
            const _0x58b59b = _0x1a624d['conn']['id'], _0x58d1e4 = _0x1a624d['conn']['transport']['socket'];
            _0x35120a && (_0x277f72('subscribe\x20connection\x20%s\x20to\x20topic\x20%s', _0x58b59b, _0x1ff5a8), _0x58d1e4['subscribe'](_0x1ff5a8)), _0x5129c1['forEach'](_0x411ebf => {
                const _0x202c03 = '' + _0x1ff5a8 + _0x208263 + _0x411ebf;
                _0x277f72('subscribe\x20connection\x20%s\x20to\x20topic\x20%s', _0x58b59b, _0x202c03), _0x58d1e4['subscribe'](_0x202c03);
            });
        }
        function _0x466b82() {
            _0x257c68['Adapter']['prototype']['addAll'] = _0x1a9e2e, _0x257c68['Adapter']['prototype']['del'] = _0x3799dc, _0x257c68['Adapter']['prototype']['broadcast'] = _0x493f55;
        }
        _0x2e550f['restoreAdapter'] = _0x466b82;
        const _0x10e419 = _0x430e08 => {
            const {
                buffer: _0x3236a6,
                byteOffset: _0x1d14b6,
                byteLength: _0x4b75e1
            } = _0x430e08;
            return _0x3236a6['slice'](_0x1d14b6, _0x1d14b6 + _0x4b75e1);
        };
        function _0x20f631(_0xe4d1eb, _0x163362) {
            const {size: _0x2f4425} = (0x0, _0x491c4e['statSync'])(_0x163362), _0x3f8bd5 = (0x0, _0x491c4e['createReadStream'])(_0x163362), _0x4bc79b = () => !_0x3f8bd5['destroyed'] && _0x3f8bd5['destroy'](), _0x84c651 = _0x12e76c => {
                    _0x4bc79b();
                    throw _0x12e76c;
                }, _0x44a0ae = _0x3ff372 => {
                    const _0x34c341 = _0x10e419(_0x3ff372), _0x57c59e = _0xe4d1eb['getWriteOffset'](), [_0x55769b, _0x58a235] = _0xe4d1eb['tryEnd'](_0x34c341, _0x2f4425);
                    !_0x58a235 && !_0x55769b && (_0x3f8bd5['pause'](), _0xe4d1eb['onWritable'](_0x40222f => {
                        const [_0x47f3fd, _0x453095] = _0xe4d1eb['tryEnd'](_0x34c341['slice'](_0x40222f - _0x57c59e), _0x2f4425);
                        return !_0x453095 && _0x47f3fd && _0x3f8bd5['resume'](), _0x47f3fd;
                    }));
                };
            _0xe4d1eb['onAborted'](_0x4bc79b), _0x3f8bd5['on']('data', _0x44a0ae)['on']('error', _0x84c651)['on']('end', _0x4bc79b);
        }
        _0x2e550f['serveFile'] = _0x20f631;
    },
    0xb95c: (_0x1b0a5d, _0x24dfe1, _0x288657) => {
        'use strict';
        _0x288657['r'](_0x24dfe1), _0x288657['d'](_0x24dfe1, {
            'Namespace': () => _0x2fdfe7,
            'Server': () => _0x1b4834,
            'Socket': () => _0x365c55
        });
        var _0x5f1d1b = _0x288657(0xfbe7);
        const {
            Server: _0x1b4834,
            Namespace: _0x2fdfe7,
            Socket: _0x365c55
        } = _0x5f1d1b;
    },
    0x7c63: _0x3fa987 => {
        'use strict';
        _0x3fa987['exports'] = JSON['parse']('{\x22name\x22:\x22socket.io\x22,\x22version\x22:\x224.5.1\x22,\x22description\x22:\x22node.js\x20realtime\x20framework\x20server\x22,\x22keywords\x22:[\x22realtime\x22,\x22framework\x22,\x22websocket\x22,\x22tcp\x22,\x22events\x22,\x22socket\x22,\x22io\x22],\x22files\x22:[\x22dist/\x22,\x22client-dist/\x22,\x22wrapper.mjs\x22,\x22!**/*.tsbuildinfo\x22],\x22directories\x22:{\x22doc\x22:\x22docs/\x22,\x22example\x22:\x22example/\x22,\x22lib\x22:\x22lib/\x22,\x22test\x22:\x22test/\x22},\x22type\x22:\x22commonjs\x22,\x22main\x22:\x22./dist/index.js\x22,\x22exports\x22:{\x22import\x22:\x22./wrapper.mjs\x22,\x22require\x22:\x22./dist/index.js\x22,\x22types\x22:\x22./dist/index.d.ts\x22},\x22types\x22:\x22./dist/index.d.ts\x22,\x22license\x22:\x22MIT\x22,\x22repository\x22:{\x22type\x22:\x22git\x22,\x22url\x22:\x22git://github.com/socketio/socket.io\x22},\x22scripts\x22:{\x22compile\x22:\x22rimraf\x20./dist\x20&&\x20tsc\x22,\x22test\x22:\x22npm\x20run\x20format:check\x20&&\x20npm\x20run\x20compile\x20&&\x20npm\x20run\x20test:types\x20&&\x20npm\x20run\x20test:unit\x22,\x22test:types\x22:\x22tsd\x22,\x22test:unit\x22:\x22nyc\x20mocha\x20--require\x20ts-node/register\x20--reporter\x20spec\x20--slow\x20200\x20--bail\x20--timeout\x2010000\x20test/socket.io.ts\x22,\x22format:check\x22:\x22prettier\x20--check\x20\x5c\x22lib/**/*.ts\x5c\x22\x20\x5c\x22test/**/*.ts\x5c\x22\x22,\x22format:fix\x22:\x22prettier\x20--write\x20\x5c\x22lib/**/*.ts\x5c\x22\x20\x5c\x22test/**/*.ts\x5c\x22\x22,\x22prepack\x22:\x22npm\x20run\x20compile\x22},\x22dependencies\x22:{\x22accepts\x22:\x22~1.3.4\x22,\x22base64id\x22:\x22~2.0.0\x22,\x22debug\x22:\x22~4.3.2\x22,\x22engine.io\x22:\x22~6.2.0\x22,\x22socket.io-adapter\x22:\x22~2.4.0\x22,\x22socket.io-parser\x22:\x22~4.0.4\x22},\x22devDependencies\x22:{\x22@types/mocha\x22:\x22^9.0.0\x22,\x22expect.js\x22:\x220.3.1\x22,\x22mocha\x22:\x22^3.5.3\x22,\x22nyc\x22:\x22^15.1.0\x22,\x22prettier\x22:\x22^2.3.2\x22,\x22rimraf\x22:\x22^3.0.2\x22,\x22socket.io-client\x22:\x224.5.1\x22,\x22socket.io-client-v2\x22:\x22npm:socket.io-client@^2.4.0\x22,\x22superagent\x22:\x22^6.1.0\x22,\x22supertest\x22:\x22^6.1.6\x22,\x22ts-node\x22:\x22^10.2.1\x22,\x22tsd\x22:\x22^0.17.0\x22,\x22typescript\x22:\x22^4.4.2\x22,\x22uWebSockets.js\x22:\x22github:uNetworking/uWebSockets.js#v20.0.0\x22},\x22contributors\x22:[{\x22name\x22:\x22Guillermo\x20Rauch\x22,\x22email\x22:\x22rauchg@gmail.com\x22},{\x22name\x22:\x22Arnout\x20Kazemier\x22,\x22email\x22:\x22info@3rd-eden.com\x22},{\x22name\x22:\x22Vladimir\x20Dronnikov\x22,\x22email\x22:\x22dronnikov@gmail.com\x22},{\x22name\x22:\x22Einar\x20Otto\x20Stangvik\x22,\x22email\x22:\x22einaros@gmail.com\x22}],\x22engines\x22:{\x22node\x22:\x22>=10.0.0\x22},\x22tsd\x22:{\x22directory\x22:\x22test\x22}}');
    }
};
;
//# sourceMappingURL=252.js.map