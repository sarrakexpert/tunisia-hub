exports['id'] = 0x14e, exports['ids'] = [
    0x14e,
    0x3a4,
    0xb4
], exports['modules'] = {
    0xc30c: _0x397f6e => {
        function _0x4316c1(_0x279524) {
            var _0x416c46 = new Error('Cannot\x20find\x20module\x20\x27' + _0x279524 + '\x27');
            _0x416c46['code'] = 'MODULE_NOT_FOUND';
            throw _0x416c46;
        }
        _0x4316c1['keys'] = () => [], _0x4316c1['resolve'] = _0x4316c1, _0x4316c1['id'] = 0xc30c, _0x397f6e['exports'] = _0x4316c1;
    },
    0xc055: (_0x436fbd, _0x16df65, _0x49abb9) => {
        'use strict';
        _0x49abb9['r'](_0x16df65), _0x49abb9['d'](_0x16df65, {
            'Generate': () => _0x14ff33,
            'default': () => _0x8b2e76
        });
        var _0x3ff84e = _0x49abb9(0xc165), _0x6b83b1 = _0x49abb9['n'](_0x3ff84e), _0x4b3c60 = _0x49abb9(0x1145c), _0x3975f9 = _0x49abb9['n'](_0x4b3c60), _0x479f27 = _0x49abb9(0x1bd7), _0x4a7921 = _0x49abb9['n'](_0x479f27), _0x21439f = _0x49abb9(0x17fbe), _0x5d02ef = _0x49abb9['n'](_0x21439f), _0x3a8b05 = _0x49abb9(0x3b1), _0x2c9713 = _0x49abb9['n'](_0x3a8b05), _0x1e4340 = _0x49abb9(0xbb05), _0x1857b1 = _0x49abb9(0x17f4f), _0x22e029 = _0x49abb9(0x79cc);
        class _0x14ff33 {
            constructor() {
                this['templatesRoot'] = _0x1e4340['testMakerInstallPath'] + '/dist/templates', _0x3ff84e['program']['command']('init', 'Initialize\x20A\x20Test\x20Maker\x20Project.')['action'](async () => {
                    try {
                        await this['generate'](!![]);
                    } catch (_0x7e003b) {
                        await (0x0, _0x22e029['logGenericError'])({ 'error': _0x7e003b });
                    }
                }), _0x3ff84e['program']['command']('generate', 'Scaffold\x20Project.')['action'](async () => {
                    try {
                        await this['generate']();
                    } catch (_0x451013) {
                        await (0x0, _0x22e029['logGenericError'])({ 'error': _0x451013 });
                    }
                });
            }
            async ['generate'](_0x10dddf) {
                try {
                    let _0x296ee0 = [];
                    _0x10dddf ? _0x296ee0 = [
                        {
                            'name': 'express',
                            'message': 'Init\x20Express\x20-\x20Generate\x20a\x20Default\x20convention\x20Test\x20Maker\x20project\x20structure'
                        },
                        {
                            'name': 'custom',
                            'message': 'Custom\x20-\x20Choose\x20what\x20to\x20generate'
                        },
                        {
                            'name': 'PEGA\x20express',
                            'message': 'Init\x20PEGA\x20Express\x20-\x20Generate\x20a\x20Default\x20convention\x20Test\x20Maker/PEGA\x20project\x20structure'
                        }
                    ] : _0x296ee0 = [
                        {
                            'name': 'feature',
                            'message': 'Feature\x20-\x20Spec\x20file'
                        },
                        {
                            'name': 'fromGherkin',
                            'message': 'Feature\x20From\x20Gherkin\x20-\x20Generate\x20a\x20Feature\x20code\x20file\x20from\x20Gherkin\x20Feature\x20file'
                        }
                    ];
                    const _0x49831a = new _0x479f27['Select']({
                            'name': 'method',
                            'message': 'Choose\x20Your\x20generation\x20method',
                            'choices': _0x296ee0
                        }), _0x18659b = await _0x49831a['run']();
                    switch (_0x18659b) {
                    case 'express':
                        await this['generateRun']({
                            'tsConfig': !![],
                            'specs': !![],
                            'testLocalScript': !![],
                            'testCiScript': !![],
                            'configLocal': !![],
                            'configCi': !![]
                        });
                        break;
                    case 'custom':
                        await this['generateCustom']();
                        break;
                    case 'PEGA\x20express':
                        await this['generatePega']();
                        break;
                    case 'feature':
                        await this['generateFeature']();
                        break;
                    case 'fromGherkin':
                        await this['generateFromGherkin']();
                    }
                    (0x0, _0x1857b1['exitProcess'])(0x0);
                } catch (_0x11f88b) {
                    console['log'](_0x11f88b), (0x0, _0x1857b1['exitProcess'])(0x1);
                }
            }
            async ['generatePega']() {
                const _0x5123b9 = (await Promise['all']([
                    _0x49abb9['e'](0x83),
                    _0x49abb9['e'](0xfc),
                    _0x49abb9['e'](0x2dd),
                    _0x49abb9['e'](0x2e6),
                    _0x49abb9['e'](0x34d),
                    _0x49abb9['e'](0x28c)
                ])['then'](_0x49abb9['bind'](_0x49abb9, 0x118a)))['modulesInstaller'];
                await _0x5123b9['install']({
                    'installs': [{
                            'name': 'git+ssh://git@github.com/KnowledgeExpert/pega-model',
                            'version': ''
                        }],
                    'restart': ![]
                });
                const _0xdc1c5b = this['templatesRoot'] + '/pega-model', _0x52e092 = await _0x21439f['readdir'](_0x3a8b05['join'](_0xdc1c5b));
                for (const _0x5bbea6 of _0x52e092) {
                    const _0xa00164 = _0x3a8b05['join'](_0xdc1c5b, _0x5bbea6), _0x27ec4f = _0x3a8b05['join'](_0x1e4340['projectPath'], _0x5bbea6);
                    await _0x21439f['copy'](_0xa00164, _0x27ec4f, { 'overwrite': !![] }), this['logStep'](_0x27ec4f);
                }
                await this['generateTemplate'](this['templatesRoot'] + '/template-ts-config.json', _0x1e4340['projectPath'] + '/tsconfig.json');
                const _0x54d435 = _0x3a8b05['normalizeTrim'](_0x1e4340['projectPath'] + '/package.json'), _0x4c0f54 = await _0x21439f['readJSON'](_0x54d435);
                if (!_0x4c0f54['scripts'])
                    _0x4c0f54['scripts'] = {};
                _0x4c0f54['scripts']['test:local'] = 'ketm\x20run\x20-c\x20test-maker.local.ts', await _0x21439f['writeJSON'](_0x54d435, _0x4c0f54, { 'spaces': 0x2 }), this['logStep']('NPM\x20test:local\x20script');
                if (!_0x4c0f54['scripts'])
                    _0x4c0f54['scripts'] = {};
                _0x4c0f54['scripts']['test:ci'] = 'ketm\x20run\x20-c\x20test-maker.ci.ts', await _0x21439f['writeJSON'](_0x54d435, _0x4c0f54, { 'spaces': 0x2 }), this['logStep']('NPM\x20test:ci\x20script'), console['info']('Successfully\x20Initialized\x20PEGA\x20Template\x20based\x20project.\x0a\x0a' + _0x3975f9()['cyan']('Important:') + '\x20Please\x20check\x20' + _0x1e4340['projectPath'] + '/README.md\x20to\x20Further\x20customize\x20the\x20project\x20per\x20requirements.\x20\x0a');
            }
            async ['generateCustom']() {
                const _0x44da9a = new _0x479f27['MultiSelect']({
                    'name': 'generationOptions',
                    'message': 'What\x20do\x20you\x20want\x20to\x20Generate?',
                    'choices': [
                        {
                            'name': 'tsConfig',
                            'message': 'TypeScript\x20Config'
                        },
                        {
                            'name': 'specs',
                            'message': 'Spec\x20Folder\x20and\x20example\x20Spec'
                        },
                        {
                            'name': 'testLocalScript',
                            'message': 'npm\x20run\x20test:local\x20script'
                        },
                        {
                            'name': 'testCiScript',
                            'message': 'npm\x20run\x20test:ci\x20script'
                        },
                        {
                            'name': 'configLocal',
                            'message': 'test-maker.local\x20config\x20file'
                        },
                        {
                            'name': 'configCi',
                            'message': 'test-maker.ci\x20config\x20file'
                        }
                    ],
                    'pointer'(_0x4de917, _0x58da50) {
                        if (_0x58da50['index'] === _0x4de917['index'])
                            return _0x3975f9()['cyan'](_0x3975f9()['symbols']['pointer']);
                        return '\x20';
                    },
                    'indicator'(_0x36131b, _0x4d205e) {
                        if (_0x4d205e['enabled'])
                            return _0x3975f9()['cyan'](_0x36131b['symbols']['radio']['on']);
                        return _0x3975f9()['dim'](_0x36131b['symbols']['radio']['off']);
                    }
                });
                await this['generateRun']((await _0x44da9a['run']())['reduce']((_0x1eda70, _0x89607a) => {
                    return _0x1eda70[_0x89607a] = !![], _0x1eda70;
                }, {}));
            }
            async ['generateRun'](_0x58ab47) {
                let _0x428dc9 = {
                    ...{
                        'tsConfig': ![],
                        'specs': ![],
                        'testLocalScript': ![],
                        'testCiScript': ![],
                        'configLocal': ![],
                        'configCi': ![]
                    },
                    ..._0x58ab47
                };
                const _0x81bc0d = _0x3a8b05['normalizeTrim'](_0x1e4340['projectPath'] + '/package.json'), _0x15c7e5 = await _0x21439f['readJSON'](_0x81bc0d);
                if (_0x428dc9['testLocalScript']) {
                    if (!_0x15c7e5['scripts'])
                        _0x15c7e5['scripts'] = {};
                    _0x15c7e5['scripts']['test:local'] = 'ketm\x20run\x20-c\x20test-maker.local.ts', await _0x21439f['writeJSON'](_0x81bc0d, _0x15c7e5, { 'spaces': 0x2 }), this['logStep']('NPM\x20test:local\x20script');
                }
                if (_0x428dc9['testCiScript']) {
                    if (!_0x15c7e5['scripts'])
                        _0x15c7e5['scripts'] = {};
                    _0x15c7e5['scripts']['test:ci'] = 'ketm\x20run\x20-c\x20test-maker.ci.ts', await _0x21439f['writeJSON'](_0x81bc0d, _0x15c7e5, { 'spaces': 0x2 }), this['logStep']('NPM\x20test:ci\x20script');
                }
                _0x428dc9['configLocal'] && await this['generateTemplate'](this['templatesRoot'] + '/template-test-maker.local.ts', _0x1e4340['projectPath'] + '/test-maker.local.ts'), _0x428dc9['configCi'] && await this['generateTemplate'](this['templatesRoot'] + '/template-test-maker.ci.ts', _0x1e4340['projectPath'] + '/test-maker.ci.ts'), _0x428dc9['configLocal'] && await this['generateTemplate'](this['templatesRoot'] + '/template-ts-config.json', _0x1e4340['projectPath'] + '/tsconfig.json'), _0x428dc9['specs'] && await this['generateTemplate'](this['templatesRoot'] + '/template-example-spec.ts', _0x1e4340['projectPath'] + '/src/specs/example-spec.ts');
            }
            async ['generateFeature']() {
                const _0x348123 = new _0x479f27['Select']({
                        'name': 'method',
                        'message': 'Choose\x20Your\x20generation\x20method',
                        'choices': [
                            {
                                'name': 'given',
                                'message': 'feature\x20with\x20Given\x20step'
                            },
                            {
                                'name': 'givenThen',
                                'message': 'feature\x20with\x20Given\x20=>\x20Then\x20steps'
                            },
                            {
                                'name': 'givenWhenThen',
                                'message': 'feature\x20with\x20Given\x20=>\x20When\x20=>\x20Then\x20steps'
                            }
                        ]
                    }), _0x5513c7 = await _0x348123['run']();
                let _0xf82878 = '';
                const _0x3321da = [
                    {
                        'name': 'featureName',
                        'message': 'Feature\x20Name'
                    },
                    {
                        'name': 'scenarioName',
                        'message': 'Scenario\x20Name'
                    },
                    {
                        'name': 'givenStepName',
                        'message': 'Given\x20Step\x20Name'
                    }
                ];
                switch (_0x5513c7) {
                case 'given':
                    _0xf82878 = 'template-feature-given.txt';
                    break;
                case 'givenThen':
                    _0xf82878 = 'template-feature-given-then.txt', _0x3321da['push']({
                        'name': 'thenStepName',
                        'message': 'Then\x20Step\x20Name'
                    });
                    break;
                case 'givenWhenThen':
                    _0xf82878 = 'template-feature-given-when-then.txt', _0x3321da['push']({
                        'name': 'whenStepName',
                        'message': 'When\x20Step\x20Name'
                    }), _0x3321da['push']({
                        'name': 'thenStepName',
                        'message': 'Then\x20Step\x20Name'
                    });
                    break;
                }
                const _0x5a3d97 = new _0x479f27['Snippet']({
                        'name': 'feature',
                        'message': 'Fill\x20out\x20the\x20fields\x20below',
                        'required': !![],
                        'fields': _0x3321da,
                        'template': '' + await _0x21439f['readFile'](_0x3a8b05['normalizeTrim'](this['templatesRoot'] + '/' + _0xf82878))
                    }), _0x32c6b7 = await _0x5a3d97['run'](), _0x30d0ac = new _0x479f27['Confirm']({
                        'name': 'fileName',
                        'message': 'use\x20\x22' + _0x32c6b7['values']['featureName'] + '\x22\x20as\x20file\x20name?'
                    }), _0x2409e8 = await _0x30d0ac['run']();
                if (_0x2409e8)
                    await this['generateTemplate'](_0x32c6b7['result'], _0x1e4340['projectPath'] + '/src/specs/' + _0x32c6b7['values']['featureName'] + '-spec.ts', !![]);
                else {
                    const _0x2499cf = await new _0x479f27['Input']({
                        'message': 'What\x20is\x20the\x20File\x20Name\x20you\x20choose?',
                        'initial': _0x32c6b7['values']['featureName']
                    })['run']();
                    await this['generateTemplate'](_0x32c6b7['result'], _0x1e4340['projectPath'] + '/src/specs/' + _0x2499cf + '-spec.ts', !![]);
                }
            }
            async ['generateFromGherkin']() {
                const _0x2b8e41 = new _0x479f27['Select']({
                    'name': 'method',
                    'message': 'Choose\x20Gherkin\x20Files\x20Location',
                    'choices': [
                        {
                            'name': 'default',
                            'message': 'Default\x20-\x20location\x20at\x20\x22./features'
                        },
                        {
                            'name': 'custom',
                            'message': 'Custom\x20-\x20Choose\x20a\x20custom\x20location'
                        }
                    ]
                });
                let _0x200a37 = await _0x2b8e41['run']();
                if (_0x200a37 === 'custom') {
                    const _0x278140 = new _0x479f27['Input']({
                        'message': 'Specify\x20new\x20custom\x20location',
                        'initial': './features'
                    });
                    _0x200a37 = await _0x278140['run']();
                } else
                    _0x200a37 = './features';
                _0x200a37 = _0x3a8b05['normalizeTrim'](_0x3a8b05['resolve'](_0x200a37));
                const _0x77be7c = new _0x479f27['Select']({
                        'name': 'method',
                        'message': 'Choose\x20Gherkin\x20Files\x20Location',
                        'choices': [
                            {
                                'name': 'all',
                                'message': 'All\x20-\x20Generate\x20Features\x20from\x20all\x20files'
                            },
                            {
                                'name': 'choose',
                                'message': 'Choose\x20-\x20Choose\x20files\x20to\x20generate\x20from'
                            }
                        ]
                    }), _0x5b0bbe = await _0x77be7c['run'](), _0x164bb0 = await (await Promise['all']([
                        _0x49abb9['e'](0x83),
                        _0x49abb9['e'](0xfc),
                        _0x49abb9['e'](0x2dd),
                        _0x49abb9['e'](0x2e6),
                        _0x49abb9['e'](0x87),
                        _0x49abb9['e'](0x167),
                        _0x49abb9['e'](0x18d),
                        _0x49abb9['e'](0x32e),
                        _0x49abb9['e'](0x329),
                        _0x49abb9['e'](0x34d),
                        _0x49abb9['e'](0x2b9),
                        _0x49abb9['e'](0x3b6)
                    ])['then'](_0x49abb9['bind'](_0x49abb9, 0xbe8a)))['specsParser']['parse']([_0x200a37 + '/**/*.feature']);
                !_0x164bb0['size'] && (console['error']('Could\x20not\x20find\x20any\x20Gherkin\x20files\x20at\x20the\x20specified\x20location'), (0x0, _0x1857b1['exitProcess'])(0x1));
                if (_0x5b0bbe === 'all')
                    for (let _0x2e42e9 of _0x164bb0['values']()) {
                        await this['createFromGherkin'](_0x2e42e9);
                    }
                else {
                    const _0x19db5d = [];
                    for (let _0x47828b of _0x164bb0['values']()) {
                        _0x19db5d['push']({
                            'name': _0x47828b['uri'],
                            'message': _0x47828b['name']
                        });
                    }
                    const _0x48c1ab = new _0x479f27['MultiSelect']({
                            'name': 'generationOptions',
                            'message': 'What\x20do\x20you\x20want\x20to\x20Generate?',
                            'choices': _0x19db5d,
                            'pointer'(_0x204f7c, _0x467065) {
                                if (_0x467065['index'] === _0x204f7c['index'])
                                    return _0x3975f9()['cyan'](_0x3975f9()['symbols']['pointer']);
                                return '\x20';
                            },
                            'indicator'(_0x4ea96a, _0x557f40) {
                                if (_0x557f40['enabled'])
                                    return _0x3975f9()['cyan'](_0x4ea96a['symbols']['radio']['on']);
                                return _0x3975f9()['dim'](_0x4ea96a['symbols']['radio']['off']);
                            }
                        }), _0x9f57cd = await _0x48c1ab['run']();
                    if (_0x9f57cd['length'])
                        for (let _0x256c3c of _0x9f57cd) {
                            for (let _0x5dfa3d of _0x164bb0['values']()) {
                                if (_0x256c3c === _0x5dfa3d['uri'])
                                    await this['createFromGherkin'](_0x5dfa3d);
                            }
                        }
                    else
                        (0x0, _0x1857b1['exitProcess'])(0x0);
                }
            }
            async ['generateTemplate'](_0x47b125, _0x4d312b, _0x1232e6 = ![]) {
                const _0x5eeaf3 = _0x1232e6 ? _0x47b125 : await _0x21439f['readFile'](_0x3a8b05['normalizeTrim'](_0x47b125)), _0x10ff93 = _0x3a8b05['normalizeTrim'](_0x4d312b);
                await _0x21439f['outputFile'](_0x10ff93, _0x5eeaf3), this['logStep'](_0x10ff93);
            }
            async ['createFromGherkin'](_0x1d6672) {
                let _0x5ae264 = 'import\x20{\x20expect,\x20Feature,\x20Selector\x20}\x20from\x20\x22test-maker\x22;';
                _0x5ae264 += '\x0a', _0x5ae264 += 'Feature(`' + _0x1d6672['name'] + '`)';
                for (let [_0x54f670, _0x354de5] of _0x1d6672['scenarios']) {
                    _0x5ae264 += '\x0a', _0x5ae264 += '\x20\x20\x20\x20.' + _0x354de5['keyword'] + '(`' + _0x54f670 + '`)';
                    for (let [_0x375656, _0x56d260] of _0x354de5['steps']) {
                        _0x5ae264 += '\x0a', _0x5ae264 += '\x20\x20\x20\x20.' + _0x56d260['keyword'] + '(`' + _0x375656 + '`,\x20async\x20(I)\x20=>\x20{', _0x5ae264 += '\x0a', _0x5ae264 += '})';
                    }
                }
                let _0x5bf45a = _0x3a8b05['normalizeTrim']('./generated-features/' + _0x3a8b05['basename'](_0x1d6672['uri']) + '-spec.ts');
                _0x5bf45a = _0x5bf45a['replace']('.feature-spec.ts', '-spec.ts'), await _0x21439f['outputFile'](_0x5bf45a, _0x5ae264), console['info'](_0x1d6672['name'] + '\x20Feature\x20has\x20been\x20converted\x20into\x20File:\x20' + _0x3975f9()['yellowBright'](_0x5bf45a));
            }
            ['logStep'](_0x560c5e) {
                console['log'](_0x3975f9()['green']('Successfully\x20generated:\x20' + _0x3975f9()['yellow']['bold'](_0x560c5e) + '\x0a'));
            }
        }
        const _0x8b2e76 = new _0x14ff33();
    },
    0x79cc: (_0x571200, _0x3a0e41, _0x45d18d) => {
        'use strict';
        _0x45d18d['r'](_0x3a0e41), _0x45d18d['d'](_0x3a0e41, { 'logGenericError': () => _0x11e4e3 });
        var _0x529692 = _0x45d18d(0x1145c), _0x57075c = _0x45d18d['n'](_0x529692);
        async function _0x11e4e3({
            error: _0x505ab5,
            isWarning: _0x49ce6a,
            show: show = !![]
        }) {
            let _0x40c979;
            try {
                _0x40c979 ? _0x49ce6a ? console['warn'](_0x40c979['formatted']['ansi']) : console['error'](_0x40c979['formatted']['ansi']) : _0x49ce6a ? console['warn'](_0x505ab5) : console['error'](_0x57075c()['redBright'](_0x505ab5['stack'] || _0x505ab5));
            } catch (_0xfe5fe6) {
                console['error'](_0x57075c()['redBright'](_0xfe5fe6['stack'] || _0xfe5fe6));
            } finally {
                console['info'](_0x57075c()['cyanBright']('See\x20Log\x20file\x20for\x20more\x20Details...'));
            }
        }
    }
};
;
//# sourceMappingURL=334.js.map