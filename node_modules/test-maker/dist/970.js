'use strict';
exports['id'] = 0x3ca, exports['ids'] = [0x3ca], exports['modules'] = {
    0x15b8a: (_0x8b0c48, _0x13f711, _0x101238) => {
        _0x101238['r'](_0x13f711), _0x101238['d'](_0x13f711, { 'getFeatureCompilerConfig': () => _0x412073 });
        var _0x552e90 = _0x101238(0x1145c), _0x2dc4b4 = _0x101238['n'](_0x552e90), _0x9761bd = _0x101238(0x6036), _0x50f695 = _0x101238['n'](_0x9761bd), _0x2135bc = _0x101238(0x5323), _0x3afc92 = _0x101238(0x17fbe), _0x1fb792 = _0x101238['n'](_0x3afc92), _0x5b66de = _0x101238(0x11569), _0x5c1973 = _0x101238(0x3b1), _0x5cabc1 = _0x101238(0x176e9), _0x4cb923 = _0x101238['n'](_0x5cabc1), _0x11348c = _0x101238(0x16257), _0x40b9b5 = _0x101238['n'](_0x11348c), _0x4079b8 = _0x101238(0xbb05), _0x35db45 = _0x101238(0x14e4b), _0x536b0b = _0x101238(0x17067), _0x3c7e13 = _0x101238(0x8eb2), _0x2560fa = _0x101238['n'](_0x3c7e13);
        ;
        async function _0x40054e(_0x5ef254) {
            const _0x11c064 = {};
            if (!_0x5ef254)
                throw new Error('must\x20provide\x20base\x20path');
            const _0x227b1b = await _0x2560fa()(_0x5ef254);
            _0x227b1b['forEach'](_0x54e882 => {
                const _0x740ca = _0x5c1973['trimExt'](_0x54e882);
                _0x11c064[_0x740ca] = _0x54e882;
            });
            if (!Object['keys'](_0x11c064)['length'])
                throw new Error('There\x20are\x20no\x20test\x20files\x20added,\x20please\x20make\x20sure\x20to\x20add\x20at\x20least\x20one\x20that\x20matches\x20the\x20convention\x20used.\x20The\x20default\x20one\x20(if\x20not\x20changed)\x20ends\x20with\x20\x27-spec.ts\x27,\x20for\x20example:\x20project-folder/src/specs/test-spec.ts');
            return _0x11c064;
        }
        var _0x4c4058 = _0x101238(0x169f), _0x43a009 = _0x101238(0x79cc), _0xe9e32c = _0x101238(0x58ea), _0x3842d2 = _0x101238(0x79d3);
        ;
        async function _0x9dbc69(_0x393c1e, _0x1ebae5, _0x56fcab) {
            const _0x116f5f = {
                    'code': _0x393c1e,
                    'linesAbove': 0x2,
                    'linesBelow': 0x2,
                    'mode': 'node',
                    'location': {
                        'start': {
                            'line': _0x1ebae5,
                            'column': _0x56fcab
                        }
                    },
                    'highlightOptions': { 'language': 'typescript' }
                }, _0x3607ca = (0x0, _0xe9e32c['createCodeFrame'])(_0x116f5f), _0x5e79e3 = (0x0, _0xe9e32c['createCodeFrame'])({
                    ..._0x116f5f,
                    ...{ 'highlighter': _0x3616ed => _0x3842d2['codeHighlighter']['highlightAsAnsi'](_0x3616ed) }
                });
            return {
                'noColor': _0x3607ca,
                'ansi': _0x5e79e3,
                'html': _0x3842d2['codeHighlighter']['ansi2Html'](_0x5e79e3)
            };
        }
        var _0x2dc32c = _0x101238(0x14be1), _0x3d92d1 = _0x101238(0xfa07), _0x2670e2 = _0x101238['n'](_0x3d92d1);
        ;
        function _0x334e97() {
            return _0x16cbd3 => {
                return _0x2670e2()['factory']['updateSourceFile'](_0x16cbd3, [
                    _0x2670e2()['factory']['createImportDeclaration'](undefined, undefined, undefined, _0x2670e2()['factory']['createStringLiteral']('source-map-support/register')),
                    ..._0x16cbd3['statements']
                ]);
            };
        }
        ;
        function _0x36f9ef(_0x2ea749, _0x428e3b, _0x65efc2) {
            const _0x58f72a = _0x11ccde => {
                var _0xade039;
                if (_0x65efc2['features']['has'](_0x428e3b['fileName']) && _0x11ccde['kind'] === _0x2670e2()['SyntaxKind']['Block']) {
                    if (((_0xade039 = _0x11ccde['parent']) === null || _0xade039 === void 0x0 ? void 0x0 : _0xade039['kind']) !== _0x2670e2()['SyntaxKind']['ArrowFunction'])
                        return _0x11ccde;
                    const _0xb86b7b = _0x11ccde, _0x3067f8 = 'e';
                    return _0x2670e2()['factory']['updateBlock'](_0xb86b7b, [_0x2670e2()['factory']['createTryStatement'](_0x2670e2()['factory']['createBlock']([..._0xb86b7b['statements']], !![]), _0x2670e2()['factory']['createCatchClause'](_0x2670e2()['factory']['createVariableDeclaration'](_0x2670e2()['factory']['createIdentifier'](_0x3067f8)), _0x2670e2()['factory']['createBlock']([
                            _0x2670e2()['factory']['createExpressionStatement'](_0x2670e2()['factory']['createBinaryExpression'](_0x2670e2()['factory']['createPropertyAccessExpression'](_0x2670e2()['factory']['createIdentifier'](_0x3067f8), _0x2670e2()['factory']['createIdentifier']('fromSpec')), _0x2670e2()['factory']['createToken'](_0x2670e2()['SyntaxKind']['EqualsToken']), _0x2670e2()['factory']['createTrue']())),
                            _0x2670e2()['factory']['createExpressionStatement'](_0x2670e2()['factory']['createBinaryExpression'](_0x2670e2()['factory']['createPropertyAccessExpression'](_0x2670e2()['factory']['createIdentifier'](_0x3067f8), _0x2670e2()['factory']['createIdentifier']('filePath')), _0x2670e2()['factory']['createToken'](_0x2670e2()['SyntaxKind']['EqualsToken']), _0x2670e2()['factory']['createNoSubstitutionTemplateLiteral'](_0x428e3b['fileName'], _0x428e3b['fileName']))),
                            _0x2670e2()['factory']['createThrowStatement'](_0x2670e2()['factory']['createIdentifier'](_0x3067f8))
                        ], !![])), undefined)]);
                }
                return _0x2670e2()['visitEachChild'](_0x11ccde, _0x58f72a, _0x2ea749);
            };
            return _0x58f72a;
        }
        function _0x1d7676(_0x5141d7) {
            return _0x583af5 => {
                return _0xf0a5de => _0x2670e2()['visitNode'](_0xf0a5de, _0x36f9ef(_0x583af5, _0xf0a5de, _0x5141d7));
            };
        }
        var _0x454c09 = _0x101238(0x17e06), _0x472fd1 = _0x101238['n'](_0x454c09);
        ;
        async function _0x412073() {
            const _0xf650b7 = [];
            Object['values'](_0x536b0b['stateManager']['state']['source'])['forEach'](_0x2e2064 => _0xf650b7['push'](..._0x2e2064['path']));
            const _0x615377 = await _0x40054e(_0xf650b7), _0x4782a5 = new Set();
            for (const [_0x3bbcc5, _0x5f4870] of Object['entries'](_0x615377)) {
                let _0x3fe0a5 = !![];
                const _0xecee2e = _0x5c1973['resolve'](_0x5c1973['normalizeTrim'](_0x5f4870)), _0xebcb64 = await _0x1fb792()['readFile'](_0xecee2e), _0x466bd0 = _0xebcb64['toString']()['split']('\x0a');
                for (const [_0x5e8010, _0x412da3] of _0x466bd0['entries']()) {
                    const _0x369241 = /^\s*Feature\s*\(\s*['"`](.*)\s*['"`]\)*/gm, _0x214a58 = _0x369241['exec'](_0x412da3);
                    if (_0x214a58) {
                        const _0x38a2ad = _0x214a58[0x1];
                        _0x38a2ad && _0x35db45['configManager']['configuration']['filtering']['features']['length'] && !_0x35db45['configManager']['configuration']['filtering']['features']['includes'](_0x38a2ad) && (_0x3fe0a5 = ![]);
                    }
                }
                _0x3fe0a5 ? _0x4782a5['add'](_0x5c1973['resolve'](_0xecee2e)) : delete _0x615377[_0x3bbcc5];
            }
            const _0x458e2d = {
                    'compilerOptions': {
                        'module': 'esnext',
                        'moduleResolution': 'node',
                        'target': 'ES2018',
                        'jsx': 'react',
                        'sourceMap': !![],
                        'skipLibCheck': !![],
                        'skipDefaultLibCheck': !![],
                        'emitDecoratorMetadata': !![],
                        'experimentalDecorators': !![],
                        'resolveJsonModule': !![],
                        'downlevelIteration': !![],
                        'esModuleInterop': !![],
                        'importHelpers': !![],
                        'lib': [
                            'es6',
                            'dom',
                            'es2017'
                        ]
                    },
                    'include': [..._0x4782a5],
                    'exclude': [_0x4079b8['projectPath'] + '/node_modules/**/*.*']
                }, _0x272d16 = {
                    'async': ![],
                    'typescript': { 'configOverwrite': _0x458e2d },
                    'issue': {
                        'exclude': [{
                                'origin': 'typescript',
                                'file': 'node_modules/**/*.*'
                            }]
                    },
                    'logger': { 'infrastructure': 'silent' }
                };
            if (_0x35db45['configManager']['configuration']['build']['compiler']['typescript']['typeCheck'])
                console['warn'](_0x2dc4b4()['yellow']('\x27configManager.configuration.build.compiler.typescript.typeCheck\x27\x20is\x20enabled.\x20this\x20will\x20make\x20compilation\x20times\x20longer\x20because\x20of\x20Typescript\x20checking\x20Process.'));
            const _0x1d5708 = _0x472fd1()(process['argv']['slice'](0x2)), _0x3405d8 = {
                    'entry': _0x615377,
                    'watch': ![],
                    'target': 'node',
                    'mode': 'development',
                    'devtool': _0x1d5708['devtools'] || 'source-map',
                    'externals': [
                        _0x4cb923()(),
                        { [_0x4079b8['testMakerPackageName']]: _0x4079b8['testMakerInstallPath'] }
                    ],
                    'externalsPresets': { 'node': !![] },
                    'resolve': {
                        'extensions': [
                            '.ts',
                            '.tsx',
                            '.js',
                            '.json'
                        ],
                        'modules': _0x4079b8['modulesPaths'],
                        'alias': { [_0x4079b8['testMakerPackageName']]: _0x4079b8['testMakerInstallPath'] }
                    },
                    'resolveLoader': { 'modules': _0x4079b8['modulesPaths'] },
                    'output': {
                        'path': _0x5b66de['resolve'](_0x4079b8['projectPath'], _0x35db45['configManager']['configuration']['build']['output']['path'] + '/tests'),
                        'libraryTarget': 'umd',
                        'filename': '[name].js',
                        'pathinfo': !![],
                        'devtoolModuleFilenameTemplate': _0x1d5708['devToolsTemplate'] || '[absolute-resource-path]'
                    },
                    'optimization': {
                        'concatenateModules': ![],
                        'mangleExports': ![],
                        'innerGraph': ![],
                        'removeAvailableModules': ![],
                        'removeEmptyChunks': ![],
                        'mergeDuplicateChunks': ![],
                        'flagIncludedChunks': ![],
                        'runtimeChunk': ![],
                        'providedExports': ![],
                        'usedExports': ![],
                        'portableRecords': ![],
                        'realContentHash': ![],
                        'splitChunks': { 'chunks': 'all' }
                    },
                    'plugins': [
                        new (_0x40b9b5())({
                            'summaryContent': !![],
                            'format': 'build\x20[' + _0x2dc4b4()['green'](':bar') + ']\x20' + _0x2dc4b4()['green']['bold'](':percent') + '\x20current\x20' + _0x2dc4b4()['green']['bold'](':current') + '\x20/\x20total\x20' + _0x2dc4b4()['green']['bold'](':total') + '\x20(:elapsed\x20seconds)\x20'
                        }),
                        new (_0x50f695())({
                            'beforeCompile': new _0x2135bc['PromiseTask'](async () => {
                                try {
                                    _0x536b0b['stateManager']['state']['runner']['ChangeTask'] = (0x0, _0x4c4058['lazyPromise'])(), _0x536b0b['stateManager']['state']['runner']['runs']++, _0x35db45['configManager']['configuration']['build']['cleanUp']['reports'] && _0x35db45['configManager']['configuration']['reporting']['path'] && _0x536b0b['stateManager']['state']['runner']['runs'] >= 0x1 && (console['info']('\x0a-\x20Deleting\x20Old\x20Reporters\x20Files'), await _0x1fb792()['remove'](_0x5b66de['resolve'](_0x35db45['configManager']['configuration']['reporting']['path']))), console['info']('-\x20Compiling\x20Spec\x20Files\x0a');
                                } catch (_0x1ff5a5) {
                                    await (0x0, _0x43a009['logGenericError'])({ 'error': _0x1ff5a5 });
                                }
                            }),
                            'emit': new _0x2135bc['PromiseTask'](async _0x36da => {
                                if (_0x536b0b['stateManager']['state']['runner']['runs'] > 0x1) {
                                    const _0x2b2170 = _0x36da['getStats']()['toJson']({
                                            'hash': ![],
                                            'publicPath': ![],
                                            'assets': ![],
                                            'chunks': !![],
                                            'modules': ![],
                                            'source': ![],
                                            'errorDetails': ![],
                                            'timings': ![]
                                        }), _0x13c2f7 = _0x2b2170['chunks']['filter'](_0x3de0b3 => _0x3de0b3['rendered'] === !![]);
                                    for (let _0x26c06f of _0x13c2f7) {
                                        const _0x2fdd2b = _0x5c1973['resolve'](_0x4079b8['projectPath'], _0x35db45['configManager']['configuration']['build']['output']['path'] + '/tests/' + _0x26c06f['files'][0x0]);
                                        for (let _0x51c3e1 of _0x536b0b['stateManager']['state']['runner']['loadedFeatures']['values']()) {
                                            if (_0x51c3e1['astInfo']['distPath'] === _0x2fdd2b)
                                                _0x536b0b['stateManager']['state']['runner']['loadedFeatures']['delete'](_0x51c3e1['astInfo']['name']);
                                        }
                                        for (let _0x30b06c of _0x536b0b['stateManager']['state']['runner']['featuresAst']['values']()) {
                                            if (_0x30b06c['distPath'] === _0x2fdd2b)
                                                _0x30b06c['didRun'] = ![];
                                        }
                                        _0x536b0b['stateManager']['state']['runner']['changedFeatures']['add'](_0x2fdd2b);
                                    }
                                    const _0x476a05 = setInterval(async () => {
                                        var _0x16afaf;
                                        !_0x536b0b['stateManager']['state']['runner']['changedFeatures']['size'] && (clearInterval(_0x476a05), await ((_0x16afaf = _0x536b0b['stateManager']['state']['runner']['ChangeTask']) === null || _0x16afaf === void 0x0 ? void 0x0 : _0x16afaf['resolve']()));
                                    }, 0x64);
                                }
                            })
                        }),
                        ..._0x35db45['configManager']['configuration']['build']['compiler']['typescript']['typeCheck'] ? [new (await Promise['resolve']()['then'](_0x101238['t']['bind'](_0x101238, 0x36aa, 0x17)))['default'](_0x272d16)] : []
                    ],
                    'module': {
                        'rules': [{
                                'test': /\.tsx?$/,
                                'use': [
                                    {
                                        'loader': _0x5b66de['resolve'](_0x4079b8['testMakerInstallPath'], 'dist/feature-loader.js'),
                                        'options': {
                                            'whiteList': _0x615377,
                                            'configManager': _0x35db45['configManager'],
                                            'stateManager': _0x536b0b['stateManager'],
                                            'renderCodeFrame': _0x9dbc69
                                        }
                                    },
                                    {
                                        'loader': (0x0, _0x2dc32c['resolveLinkedModule'])('ts-loader'),
                                        'options': {
                                            'transpileOnly': !![],
                                            'experimentalFileCaching': !![],
                                            'experimentalWatchApi': !![],
                                            'compilerOptions': _0x458e2d,
                                            'getCustomTransformers': _0x3dbe30 => ({
                                                'before': [
                                                    _0x334e97,
                                                    _0x1d7676({ 'features': _0x4782a5 })
                                                ]
                                            })
                                        }
                                    }
                                ],
                                'exclude': [
                                    _0x5b66de['resolve'](_0x4079b8['projectPath'] + '/node_modules'),
                                    /node_modules/
                                ]
                            }]
                    }
                };
            return _0x3405d8;
        }
    },
    0x14be1: (_0x2af010, _0x46cc90, _0x59ded6) => {
        _0x59ded6['r'](_0x46cc90), _0x59ded6['d'](_0x46cc90, { 'resolveLinkedModule': () => _0x506e82 });
        var _0x45910f = _0x59ded6(0x11569), _0x5355c1 = _0x59ded6['n'](_0x45910f), _0x44f95d = _0x59ded6(0x16259);
        function _0x506e82(_0x5bd1b5) {
            let _0x3ab7bf, _0x979d85 = '';
            try {
                _0x979d85 = _0x44f95d['nativeRequire']['resolve'](_0x5bd1b5);
            } catch (_0x259e1d) {
                _0x3ab7bf = _0x259e1d;
            }
            if (!_0x979d85)
                try {
                    _0x979d85 = _0x44f95d['nativeRequire']['resolve'](_0x5355c1()['resolve'](process['cwd']() + '/node_modules/test-maker/node_modules/' + _0x5bd1b5)), _0x3ab7bf = undefined;
                } catch (_0x387dc1) {
                    try {
                        !_0x979d85 && (_0x979d85 = _0x44f95d['nativeRequire']['resolve'](_0x5355c1()['resolve'](process['cwd']() + '/node_modules/' + _0x5bd1b5))), _0x3ab7bf = undefined;
                    } catch (_0x4da81f) {
                        _0x3ab7bf = _0x4da81f;
                    }
                }
            if (_0x3ab7bf)
                throw _0x3ab7bf;
            return _0x979d85;
        }
    }
};
;
//# sourceMappingURL=970.js.map