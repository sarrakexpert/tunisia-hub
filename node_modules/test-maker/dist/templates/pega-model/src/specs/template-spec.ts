/* eslint-disable @typescript-eslint/no-empty-function */
import { Feature } from 'test-maker';
import {pega} from 'pega-model';
import {getUrl} from '../user-data';

let operator;

Feature(`Feature`)
    //common part for all the scenarios available per the feature
    //runInfo gives current information about the configuration (test-maker.*.ts files)
    .beforeEachScenario(async (I, runInfo) => {
        //common part for all the scenarios available per the feature
        operator = await runInfo.configuration.extra.operatorsManager.assignOperator('user');
        //we need to pass the runInfo parameter to the login method to
        // get all current configurations (environment, timeout etc)
        await pega.visit(getUrl(runInfo.configuration.extra.env.name), runInfo);
        await pega.loginForm.login(operator.username, operator.password);

    })
    .afterEachScenario(async (I, runInfo) => {
        //common part for all the scenarios available per the feature
        await runInfo.configuration.extra.operatorsManager.unAssignOperator('user', operator.username);
    })
    .Scenario(`Scenario 1`)
    .Given('Given', async (I, runInfo) => {

        await pega.caseWorkerMenu.expandLeftPanelMenu();
        await pega.caseWorkerMenu.createNewCase('Demo Application'); // case Name
    })

    .When(`When`, async (I) => {})

    .Then(`Then`, async (I, runInfo) => {
    })

