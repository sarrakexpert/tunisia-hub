import { Subscriber } from '../types/event-manger/subscriber';
export declare type ISubscriberCallback = (data?: any, event?: string) => void;
export declare class EventsManager {
    private static instances;
    private subscribers;
    private _id;
    static getInstance(type?: string): EventsManager;
    on(event: string | string[], fn: ISubscriberCallback, once?: boolean): Subscriber;
    once(event: string | string[], fn: ISubscriberCallback): Subscriber;
    emit(event: string | string[], data?: any): Promise<this>;
    emitSync(event: string | string[], data?: any): EventsManager;
    off(event: string, id: number): EventsManager;
    private addSubscriber;
    private emitSubscribers;
    private emitSubscribersSync;
    private getNextId;
}
