import { Engine } from '../../types/engine';
import { TestMakerReporterOptions } from '../../types/reporting/test-maker-reporter-options';
import { TestMakerReporter } from '../../types/reporting/testMakerReporter';
export interface MicroSoftTeamsReporterOptions {
    incomingWebHookUrl: string;
    testUrl?: string;
    scoreBase?: `feature` | `scenario`;
    events?: {
        taskStart: boolean;
        taskDone: boolean;
    };
}
export declare class MicrosoftTeamsReporter implements TestMakerReporter {
    name: string;
    private engine;
    private didRunActions;
    private runId;
    private dateFormat;
    private startTime;
    private options;
    init(engine: Engine, options?: TestMakerReporterOptions): Promise<void>;
    taskStart(): Promise<void>;
    taskDone(_engine: Engine): Promise<void>;
    selectorActionStart(): Promise<void>;
    controllerActionStart(): Promise<void>;
    assertionActionStart(): Promise<void>;
    private createSeparatorRow;
    private getFeaturesStats;
    private getScenariosStats;
    private getStepsStats;
    private getActionsStats;
    private createStatsTitle;
    private createItemStats;
    private sendMessage;
    private createMessageContent;
    private calculateScenariosScoreBase;
    private formatStartEndTime;
    private getPercentage;
}
export declare const microsoftTeamsReporter: MicrosoftTeamsReporter;
