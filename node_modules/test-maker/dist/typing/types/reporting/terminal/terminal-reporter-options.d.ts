import { RunInfo } from '../../session-phase-run-info/run-info';
import { AssertionActionInfo } from '../assertion-action-info';
import { ControllerActionInfo } from '../controller-action-info';
import { SelectorActionInfo } from '../selector-action-info';
export interface TerminalReporterOptionsBypass {
    target: `feature` | `scenario` | `step` | `subStep` | `hook` | `controllerAction` | `selectorAction` | `assertionAction`;
    phase: `start` | `done`;
    info: RunInfo | SelectorActionInfo | ControllerActionInfo | AssertionActionInfo;
}
export interface TerminalReporterOptions {
    stats: {
        table?: boolean;
        features?: boolean;
        scenarios?: boolean;
        steps?: boolean;
        actions?: boolean;
    };
    ignoreLogLevel?: boolean;
    completionCounter?: boolean;
    scoreBase?: `feature` | `scenario`;
    /**
     * @default [On] dddd DD-MMM-YYYY [At] HH:mm:ss:SSS [GMT]Z
     <pre>
     Token    Output
     Month    M    1 2 ... 11 12
     MM    01 02 ... 11 12
     MMM    Jan Feb ... Nov Dec
     MMMM    January February ... November December
     Day of Month    D    1 2 ... 30 31
     Do    1st 2nd ... 30th 31st
     DD    01 02 ... 30 31
     Day of Week    d    0 1 ... 5 6
     ddd    Sun Mon ... Fri Sat
     dddd    Sunday Monday ... Friday Saturday
     Year    YY    70 71 ... 29 30
     YYYY    1970 1971 ... 2029 2030
     AM/PM    A    AM PM
     a    am pm
     Hour    H    0 1 ... 22 23
     HH    00 01 ... 22 23
     h    1 2 ... 11 12
     hh    01 02 ... 11 12
     Minute    m    0 1 ... 58 59
     mm    00 01 ... 58 59
     Second    s    0 1 ... 58 59
     ss    00 01 ... 58 59
     Fractional Second    S    0 1 ... 8 9
     SS    0 1 ... 98 99
     SSS    0 1 ... 998 999
     Timezone    Z    -07:00 -06:00 ... +06:00 +07:00
     ZZ    -0700 -0600 ... +0600 +0700

     </pre>
     */
    dateFormat?: string;
    bypass?: ({ target, phase, info }: TerminalReporterOptionsBypass) => Promise<boolean>;
    feature?: {
        start?: boolean;
        done?: boolean;
    };
    scenario?: {
        start?: boolean;
        done?: boolean;
    };
    step?: {
        start?: boolean;
        done?: boolean;
    };
    subStep?: {
        start?: boolean;
        done?: boolean;
    };
    hook?: {
        start?: boolean;
        done?: boolean;
    };
    controllerAction?: {
        start?: boolean;
        done?: boolean;
        source?: boolean;
    };
    selectorAction?: {
        start?: boolean;
        done?: boolean;
        source?: boolean;
        retries?: boolean;
    };
    assertionAction?: {
        start?: boolean;
        done?: boolean;
        source?: boolean;
        retries?: boolean;
    };
}
export declare type TextReporterOptions = TerminalReporterOptions;
