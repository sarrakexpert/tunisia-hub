import { CodeStackFrame } from '../call-site/code-stack-frame';
import { ErrorInfo } from '../error/error-info';
import { TestMakerReporterOptions } from '../reporting/test-maker-reporter-options';
import { TestMakerReporter } from '../reporting/testMakerReporter';
export interface Reporting {
    /**
     * @default `./dist/reports`
     */
    path: string;
    notification: {
        /**
         * @default false
         */
        onTaskStart?: boolean;
        /**
         * @default false
         */
        onTaskDone?: boolean;
        /**
         * @default false
         */
        onFeatureStart?: boolean;
        /**
         * @default false
         */
        onFeatureDone?: boolean;
        /**
         * @default false
         */
        onScenarioStart?: boolean;
        /**
         * @default false
         */
        onScenarioDone?: boolean;
        /**
         * @default false
         */
        onStepStart?: boolean;
        /**
         * @default false
         */
        onStepDone?: boolean;
    };
    nativeDialogsHint: {
        /**
         * @default false
         */
        alert: boolean;
        /**
         * @default false
         */
        prompt: boolean;
        /**
         * @default false
         */
        confirm: boolean;
        /**
         * @default false
         */
        onbeforeunload: boolean;
        /**
         * @default `top`
         */
        position: `top` | `top-start` | `top-end` | `top-left` | `top-right` | `center` | `center-start` | `center-end` | `center-left` | `center-right` | `bottom` | `bottom-start` | `bottom-end` | `bottom-left` | `bottom-right`;
        /**
         * @default 4000
         */
        closeTimeOut: number;
    };
    hud: {
        /**
         * @default false
         */
        enabled: boolean;
        /**
         * @default 1â™¦
         */
        opacity: number;
    };
    error: {
        /**
         * @default true
         */
        allCodeFrames: boolean;
        /**
         * @default `topToBottom`
         */
        codeFrameOrder: 'topToBottom' | 'bottomToTop';
        /**
         * @default `topToBottom`
         */
        stackTraceOrder: 'topToBottom' | 'bottomToTop';
        /**
         * @default undefined
         */
        stackFilter?: (params: {
            errorInfo?: ErrorInfo;
            stackFrames: CodeStackFrame[];
        }) => Promise<CodeStackFrame[]>;
    };
    screenshots: {
        /**
         * @default true
         */
        enabled: boolean;
        /**
         * @default `./dist/reports/assets/screenshots`
         */
        path: string;
        /**
         * @default ``
         */
        pathPattern: string;
        /**
         * @default false
         */
        fullPage: boolean;
        /**
         * @default true
         */
        failedOnly: boolean;
        enabledIn: {
            /**
             * @default false
             */
            BeforeFeature: boolean;
            /**
             * @default false
             */
            BeforeEachFeature: boolean;
            /**
             * @default false
             */
            BeforeEachScenario: boolean;
            /**
             * @default false
             */
            BeforeScenario: boolean;
            /**
             * @default false
             */
            BeforeEachStep: boolean;
            /**
             * @default true
             */
            AfterFeature: boolean;
            /**
             * @default true
             */
            AfterEachFeature: boolean;
            /**
             * @default true
             */
            AfterEachScenario: boolean;
            /**
             * @default false
             */
            AfterScenario: boolean;
            /**
             * @default true
             */
            AfterEachStep: boolean;
            /**
             * @default false
             */
            Feature: boolean;
            /**
             * @default false
             */
            Scenario: boolean;
            /**
             * @default false
             */
            Step: boolean;
            /**
             * @default false
             */
            SupStep: boolean;
        };
    };
    video: {
        /**
         * @default false
         */
        enabled: boolean;
        /**
         * @default `./dist/reports/assets/videos`
         */
        path: string;
        /**
         * @default ``
         */
        pathPattern: string;
        size: {
            /**
             * @default 1024
             */
            width: number;
            /**
             * @default 768
             */
            height: number;
        };
        /**
         * @default false
         */
        singleFile: boolean;
        /**
         * @default true
         */
        failedOnly: boolean;
        ffmpeg: {
            /**
             * @default ``
             */
            path: string;
            /**
             * @default {}
             */
            encodingOptions: any;
        };
    };
    /**
     * @default [terminalReporter]
     */
    reporters: string[] | TestMakerReporter[] | {
        name: string;
        options?: TestMakerReporterOptions;
    }[] | {
        reporter: TestMakerReporter;
        options?: TestMakerReporterOptions;
    }[];
}
