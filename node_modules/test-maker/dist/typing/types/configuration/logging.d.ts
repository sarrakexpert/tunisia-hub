import { LogLevels } from "../../log/logger";
import { GlobalLogLevels } from "../logging/global-log-levels";
import { TestRunInfo } from "../session-phase-run-info/test-run-info";
import { Controller } from "../test-api/controller/controller";
export interface Logging {
    /**
     * @Default: `all`

     <pre>
     * Global Log Level order:
     `all`
     `trace`,
     `debug`,
     `info`,
     `log`,
     `warn`,
     `error`,
     `critical`,
     `fatal`,
     `always`
     </pre>
     */
    globalLogLevel: GlobalLogLevels;
    /**
     * @default true
     */
    overrideConsole: boolean;
    terminalSizeFallback?: {
        /**
         * @default undefined
         */
        columns?: number;
        /**
         * @default undefined
         */
        rows?: number;
    };
    template: {
        /**
         * @default true
         */
        logTypePrefix: boolean;
        /**
         * @default true
         */
        dateTimePrefix: boolean;
        /**
         * @default true
         */
        featurePrefix: boolean;
        /**
         * @default true
         */
        scenarioPrefix: boolean;
        /**
         * @default true
         */
        stepPrefix: boolean;
        /**
         * @default true
         */
        subStepPrefix: boolean;
        /**
         * @default undefined
         */
        pattern?: (params: {
            message: any;
            logLevel: LogLevels;
            I?: Controller;
            runInfo?: TestRunInfo;
        }) => Promise<{
            template: string;
            data?: Record<string, any>;
        }>;
    };
}
