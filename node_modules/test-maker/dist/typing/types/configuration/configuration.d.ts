import { DeepPartial } from '../deep-partial';
import { TestMakerPluginOptions } from '../plugins/plugin-option';
import { TestMakerPlugin } from '../plugins/testMakerPlugin';
import { Build } from './build';
import { Debugging } from './debugging';
import { Filtering } from './filtering';
import { Gherkin } from './gherkin';
import { Hooks } from './hooks';
import { Http } from "./http";
import { Logging } from './logging';
import { Reporting } from './reporting';
import { Runner } from './runner';
import { Source } from './source';
export { Build } from './build';
export { Debugging } from './debugging';
export { Filtering } from './filtering';
export { Hooks } from './hooks';
export { Logging } from './logging';
export { Reporting } from './reporting';
export { Runner } from './runner';
export { Source } from './source';
export { Gherkin } from './gherkin';
export { TestMakerPlugin } from '../plugins/testMakerPlugin';
export { TestMakerPluginOptions } from '../plugins/plugin-option';
export interface Configuration {
    /**
     * @default `project name in package.json`
     */
    projectName: string;
    /**
     * @default true
     */
    restoreIfModified: boolean;
    /**
     * @default [`./src/specs/**\/*-spec.ts`]
     */
    source: string[] | Source[];
    /**
     * @default {}
     */
    suites: Record<string, Source | string[]>;
    filtering: Filtering;
    gherkin: Gherkin;
    hooks: Hooks;
    runner: Runner;
    reporting: Reporting;
    logging: Logging;
    build: Build;
    http: Http;
    installer: {
        /**
         * @default true
         */
        addToPackageJson: boolean;
    };
    /**
     * @default []
     */
    plugins: (string | TestMakerPlugin | {
        name: string;
        options?: TestMakerPluginOptions;
    } | {
        plugin: TestMakerPlugin;
        options: TestMakerPluginOptions;
    })[];
    /**
     * @default {}
     */
    extra: Record<string, any>;
    debugging: Debugging;
}
export interface PartialConfiguration extends DeepPartial<Configuration> {
}
