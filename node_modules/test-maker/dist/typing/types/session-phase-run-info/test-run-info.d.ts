import { TestPhase } from "../../gherkin/functions/testPhase";
import { FeatureSpec, ScenarioSpec, StepSpec } from "../../specs";
import { TestMakerAdapter } from "../adapter/testMakerAdapter";
import { Client } from "../client/client";
import { Configuration } from "../configuration/configuration";
import { TestStatus } from "./test-status";
declare type PICKEDSpecProps = `name` | `keyword` | `type` | `implemented` | `only` | `skipped` | `meta` | `tags` | `filePath` | 'result';
interface SharedRunInfo {
    lineNumber: number;
    status: TestStatus;
}
export declare type FeatureRunInfo = Pick<FeatureSpec, PICKEDSpecProps | 'uri'> & SharedRunInfo;
export declare type ScenarioRunInfo = Pick<ScenarioSpec, PICKEDSpecProps> & SharedRunInfo;
export declare type StepRunInfo = Pick<StepSpec, PICKEDSpecProps> & SharedRunInfo;
export interface TestRunInfo {
    cliArgs: {
        [key: string]: any;
    };
    configuration: Configuration;
    adapter: TestMakerAdapter;
    client: Client;
    feature?: FeatureRunInfo;
    scenario?: ScenarioRunInfo;
    step?: StepRunInfo;
    phase: TestPhase;
    appIsBusy: boolean;
}
export {};
