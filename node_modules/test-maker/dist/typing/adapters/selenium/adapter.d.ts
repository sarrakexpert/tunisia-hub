import { InstallList } from '../../test-api/installList';
import { AdapterApi } from '../../types/adapter/adapter-api';
import { AppiumAdapterOptions } from '../../types/adapter/appium/appium-adapter-options';
import { RunnerParameters } from '../../types/adapter/runner-parameters';
import { AdapterType } from '../../types/adapter/testMakerAdapter';
import { Engine } from '../../types/engine';
import { WebDriverAdapter } from '../webdriver/adapter';
declare type SeleniumSupportedClients = `android:app` | `chrome` | `edge` | `ie` | `firefox` | `safari`;
export declare class SeleniumAdapter extends WebDriverAdapter {
    name: string;
    type: AdapterType;
    supportedClients: SeleniumSupportedClients[];
    private seleniumChildProcess;
    private usedDrivers;
    private options;
    install(engine: Engine, options?: AppiumAdapterOptions): Promise<InstallList>;
    init(engine: Engine): Promise<void>;
    start(engine: Engine, options?: AppiumAdapterOptions): Promise<void>;
    stop(): Promise<void>;
    clientRestart(params: RunnerParameters): Promise<void>;
    clientStart(params: RunnerParameters): Promise<AdapterApi>;
    clientStop(params: RunnerParameters): Promise<void>;
    private installSeleniumDriver;
    private installClients;
    private cleanUpServer;
}
export declare const seleniumAdapter: SeleniumAdapter;
export {};
