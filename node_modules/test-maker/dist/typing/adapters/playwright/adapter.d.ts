import { InstallList } from '../../test-api/installList';
import { AdapterApi } from '../../types/adapter/adapter-api';
import { PlaywrightAdapterOptions } from '../../types/adapter/playwright/playwright-adapter-options';
import { RunnerParameters } from '../../types/adapter/runner-parameters';
import { AdapterType, TestMakerAdapter } from '../../types/adapter/testMakerAdapter';
import { Engine } from '../../types/engine';
export declare class PlayWrightAdapter implements TestMakerAdapter {
    supportedClients: string[];
    name: string;
    type: AdapterType;
    private engine;
    private customVersion;
    private options;
    private browserContextOptions;
    private sharedBrowserContextPermissions;
    private activeBrowsers;
    private activeContexts;
    install(engine: Engine, options?: PlaywrightAdapterOptions): Promise<InstallList>;
    init(engine: Engine, _options?: PlaywrightAdapterOptions): Promise<void>;
    start(_engine: Engine, _options?: PlaywrightAdapterOptions): Promise<void>;
    stop(): Promise<void>;
    clientStart(params: RunnerParameters): Promise<AdapterApi>;
    clientRestart(params: RunnerParameters): Promise<void>;
    clientStop(params: RunnerParameters): Promise<void>;
    private getApi;
    private getBrowserLib;
    private getPermissions;
}
export declare const playwrightAdapter: PlayWrightAdapter;
