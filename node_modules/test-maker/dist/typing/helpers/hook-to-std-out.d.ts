export declare type BufferEncoding = "ascii" | "utf8" | "utf-8" | "utf16le" | "ucs2" | "ucs-2" | "base64" | "latin1" | "binary" | "hex";
export interface stdHookCallbackParams {
    chunk: any;
    encoding?: BufferEncoding;
    fd?: (err?: (Error | undefined)) => void;
    cb?: (err?: Error) => void;
    isError?: boolean;
    stdOutWriter?: (chunk: string, encoding?: BufferEncoding, cb?: (err?: Error) => void) => void;
    stdErrorWriter?: (chunk: string, encoding?: BufferEncoding, cb?: (err?: Error) => void) => void;
}
export declare function hookToStdOut({ callback, takeControl, canOutput }: {
    callback: ({ chunk, encoding, fd, isError, stdOutWriter, stdErrorWriter }: stdHookCallbackParams) => void;
    takeControl?: boolean;
    canOutput?: boolean | ((chunk: string) => boolean);
}): () => void;
