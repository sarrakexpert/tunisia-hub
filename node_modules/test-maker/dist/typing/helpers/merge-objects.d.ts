import { O } from "ts-toolbelt";
export declare function merge<T extends Record<string, any>, Tn extends Record<string, any>[]>(origin: T, ...newComers: Tn): O.Assign<T, Tn, 'deep'>;
export declare function mergeAndConcat<T extends Record<string, any>, Tn extends Record<string, any>[]>(origin: T, ...newComers: Tn): O.Assign<T, Tn, 'deep'>;
export declare function mergeAndCompare<T extends Record<string, any>, Tn extends Record<string, any>[]>(compareFn: (prop1: any, prop2: any, propName: string | symbol) => any, origin: T, ...newComers: Tn): O.Assign<T, Tn, 'deep'>;
export declare function mergeAndCompareAsync<T extends Record<string, any>, Tn extends Record<string, any>[]>(compareFn: (prop1: any, prop2: any, propName: string | symbol) => any, origin: T, ...newComers: Tn): Promise<O.Assign<T, Tn, 'deep'>>;
