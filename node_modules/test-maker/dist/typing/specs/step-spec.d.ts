import { SubStep } from "../gherkin/functions";
import { DocString } from '../types/gherkin/doc-string';
import { GherkinAstDataTable } from '../types/gherkin/gherkin-ast-data-table';
import { GherkinDataTable } from '../types/gherkin/gherkin-data-table';
import { SpecTypes } from "../types/spec-type";
import { BaseSpec } from './base-spec';
import { ScenarioSpec } from './scenario-spec';
export interface StepSpec extends BaseSpec {
}
declare const StepSpec_base: import("mix-classes/dist/types").Mixin<[typeof BaseSpec]>;
export declare class StepSpec extends StepSpec_base {
    type: SpecTypes;
    arguments: {
        placeHolders: {
            [index: string]: any;
        };
        dataTable?: GherkinDataTable;
        dataTableRaw?: GherkinAstDataTable;
        docString?: DocString;
    };
    docString: {
        location: {
            line: number;
            column: number;
        };
        content: string;
    };
    match: {
        location: string;
    };
    scenario: ScenarioSpec;
    subSteps: SubStep[];
    constructor();
}
export {};
