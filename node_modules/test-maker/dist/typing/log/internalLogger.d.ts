export declare class InternalLogger {
    enabled: boolean;
    level: string;
    logFile: {
        prefixDate: boolean;
        name: string;
        enabled: boolean;
        prefixLevel: boolean;
    };
    private stdOutWriter?;
    private stdErrorWriter?;
    private fileStream;
    private isHooked;
    private theme;
    private logLevels;
    overrideConsole(): void;
    restoreConsole(): void;
    trace(...args: any[]): void;
    debug(...args: any[]): void;
    info(...args: any[]): void;
    log(...args: any[]): void;
    warn(...args: any[]): void;
    error(...args: any[]): void;
    critical(...args: any[]): void;
    fatal(...args: any[]): void;
    always(...args: any[]): void;
    hookToStdOut(): void;
    private stdOut;
    private stdError;
    private canLog;
    private format;
    private formatWriteToFile;
    private createLogFile;
}
export declare const internalLogger: InternalLogger;
