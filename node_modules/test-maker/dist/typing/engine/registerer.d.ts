import { Controller } from "../types/test-api/controller/controller";
import { Selector } from "../types/test-api/selector/selector";
export interface RegisterControllerActionParams {
    name: string;
    action: (controllerProxy: Controller, ...args: any[]) => Promise<unknown>;
    options?: {
        returnValue?: boolean;
    };
}
export interface RegisterSelectorActionParams {
    name: string;
    action: (selectorProxy: Selector, ...args: any[]) => Promise<unknown>;
    options?: {
        returnValue?: boolean;
    };
}
export interface RegisterAssertionActionParams {
    name: string;
    errorMessage: string;
    errorMessageArgs: string[];
    action: (actual: any, expected: any, ...args: any[]) => Promise<boolean | {
        value: any;
        actual: any;
    }>;
    options?: {};
}
export declare class Registerer {
    registerControllerAction(params: RegisterControllerActionParams): void;
    registerSelectorAction(params: RegisterSelectorActionParams): void;
    registerAssertionAction(params: RegisterAssertionActionParams): void;
}
export declare const registerer: Registerer;
