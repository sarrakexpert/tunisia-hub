import { ReportersManager } from '../reporters/reporters-manager';
import { FeatureSpec } from '../specs';
import { PluginsManager } from './plugins-manager';
import { RegisterAssertionActionParams, RegisterControllerActionParams, RegisterSelectorActionParams } from './registerer';
export declare class Engine {
    controllerActions: RegisterControllerActionParams[];
    selectorActions: RegisterSelectorActionParams[];
    assertionActions: RegisterAssertionActionParams[];
    reportersManager: ReportersManager;
    pluginsManager: PluginsManager;
    specs: Map<string, FeatureSpec>;
    private staleWatcher;
    private compilerWatcher;
    constructor();
    start(): Promise<void>;
    restart(): Promise<void>;
    stop(): Promise<void>;
    taskStart(): Promise<void>;
    taskDone(): Promise<void>;
    private installDependencies;
    private setupPluginManger;
    private setupReportManger;
    private setupSources;
    private setupSpecs;
    private setupStaleWatcher;
    private setupDebugger;
    private setupCompiler;
    private setupAdapter;
    private validate;
    private setupState;
    private beforeAll;
    private afterAll;
    private serializeSpecs;
    private registerEvents;
}
export declare const engine: Engine;
