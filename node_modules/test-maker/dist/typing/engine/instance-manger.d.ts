import { DashBoard } from '../dashboard/dashboard';
import { FeatureSpec } from '../specs';
import { AdapterItem } from '../types/adapter/adapter-item';
import { BeforeAfterHook } from '../types/before-after-hook';
import { Client } from '../types/client/client';
import { Configuration } from '../types/configuration/configuration';
import { TestMakerPluginOptions } from '../types/plugins/plugin-option';
import { TestMakerPlugin } from '../types/plugins/testMakerPlugin';
import { TestMakerReporterOptions } from '../types/reporting/test-maker-reporter-options';
import { TestMakerReporter } from '../types/reporting/testMakerReporter';
export declare class InstanceManger {
    configuration: Configuration;
    dashboard: DashBoard;
    status: string;
    specs: Map<string, FeatureSpec>;
    implementedFeaturesCount: number;
    reporters: Map<string, {
        reporter: TestMakerReporter;
        options: TestMakerReporterOptions;
    }>;
    adapters: Map<string, AdapterItem>;
    clients: Map<string, Client>;
    plugins: Map<string, {
        plugin: TestMakerPlugin;
        options: TestMakerPluginOptions;
    }>;
    beforeAllResult?: BeforeAfterHook;
    afterAllResult?: BeforeAfterHook;
    init(): Promise<void>;
    private usedReporters;
    private usedAdapter;
    private usedClients;
    private usedPlugins;
}
export declare const instanceManager: InstanceManger;
