import { PhaseContext } from "../../types/session-phase-run-info/phase-context";
import { Session } from '../../types/session-phase-run-info/session';
import { TestFn } from "../../types/test-api/test-fn";
import { TestPhase } from "./testPhase";
declare class PhaseManager {
    run({ phaseFn, session, phaseContext, phase, phaseDefined, hasChildErrors }: {
        phaseFn: () => Promise<void>;
        session: Session;
        phaseContext: PhaseContext;
        phase: TestPhase;
        phaseDefined: TestFn | boolean | undefined;
        hasChildErrors?: boolean;
    }): Promise<void>;
    runRetry(phaseContext: PhaseContext, fn: () => Promise<void>): Promise<void>;
    private startPhase;
    private endPhase;
    private runReporterStart;
    private runReporterDone;
    private takeScreenShot;
    private canRunPhase;
    private canRunInAdapter;
    private canRunInClient;
    private shouldTakeScreenShot;
    private setTestRunInfo;
    private allowedPhaseScreenShot;
}
export declare const phaseManager: PhaseManager;
export {};
