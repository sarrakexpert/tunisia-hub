(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else {
		var a = factory();
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(global, () => {
return /******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/eventemitter3/index.js":
/*!*********************************************!*\
  !*** ./node_modules/eventemitter3/index.js ***!
  \*********************************************/
/***/ ((module) => {



var has = Object.prototype.hasOwnProperty
  , prefix = '~';

/**
 * Constructor to create a storage for our `EE` objects.
 * An `Events` instance is a plain object whose properties are event names.
 *
 * @constructor
 * @private
 */
function Events() {}

//
// We try to not inherit from `Object.prototype`. In some engines creating an
// instance in this way is faster than calling `Object.create(null)` directly.
// If `Object.create(null)` is not supported we prefix the event names with a
// character to make sure that the built-in object properties are not
// overridden or used as an attack vector.
//
if (Object.create) {
  Events.prototype = Object.create(null);

  //
  // This hack is needed because the `__proto__` property is still inherited in
  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.
  //
  if (!new Events().__proto__) prefix = false;
}

/**
 * Representation of a single event listener.
 *
 * @param {Function} fn The listener function.
 * @param {*} context The context to invoke the listener with.
 * @param {Boolean} [once=false] Specify if the listener is a one-time listener.
 * @constructor
 * @private
 */
function EE(fn, context, once) {
  this.fn = fn;
  this.context = context;
  this.once = once || false;
}

/**
 * Add a listener for a given event.
 *
 * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.
 * @param {(String|Symbol)} event The event name.
 * @param {Function} fn The listener function.
 * @param {*} context The context to invoke the listener with.
 * @param {Boolean} once Specify if the listener is a one-time listener.
 * @returns {EventEmitter}
 * @private
 */
function addListener(emitter, event, fn, context, once) {
  if (typeof fn !== 'function') {
    throw new TypeError('The listener must be a function');
  }

  var listener = new EE(fn, context || emitter, once)
    , evt = prefix ? prefix + event : event;

  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;
  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);
  else emitter._events[evt] = [emitter._events[evt], listener];

  return emitter;
}

/**
 * Clear event by name.
 *
 * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.
 * @param {(String|Symbol)} evt The Event name.
 * @private
 */
function clearEvent(emitter, evt) {
  if (--emitter._eventsCount === 0) emitter._events = new Events();
  else delete emitter._events[evt];
}

/**
 * Minimal `EventEmitter` interface that is molded against the Node.js
 * `EventEmitter` interface.
 *
 * @constructor
 * @public
 */
function EventEmitter() {
  this._events = new Events();
  this._eventsCount = 0;
}

/**
 * Return an array listing the events for which the emitter has registered
 * listeners.
 *
 * @returns {Array}
 * @public
 */
EventEmitter.prototype.eventNames = function eventNames() {
  var names = []
    , events
    , name;

  if (this._eventsCount === 0) return names;

  for (name in (events = this._events)) {
    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);
  }

  if (Object.getOwnPropertySymbols) {
    return names.concat(Object.getOwnPropertySymbols(events));
  }

  return names;
};

/**
 * Return the listeners registered for a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @returns {Array} The registered listeners.
 * @public
 */
EventEmitter.prototype.listeners = function listeners(event) {
  var evt = prefix ? prefix + event : event
    , handlers = this._events[evt];

  if (!handlers) return [];
  if (handlers.fn) return [handlers.fn];

  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {
    ee[i] = handlers[i].fn;
  }

  return ee;
};

/**
 * Return the number of listeners listening to a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @returns {Number} The number of listeners.
 * @public
 */
EventEmitter.prototype.listenerCount = function listenerCount(event) {
  var evt = prefix ? prefix + event : event
    , listeners = this._events[evt];

  if (!listeners) return 0;
  if (listeners.fn) return 1;
  return listeners.length;
};

/**
 * Calls each of the listeners registered for a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @returns {Boolean} `true` if the event had listeners, else `false`.
 * @public
 */
EventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {
  var evt = prefix ? prefix + event : event;

  if (!this._events[evt]) return false;

  var listeners = this._events[evt]
    , len = arguments.length
    , args
    , i;

  if (listeners.fn) {
    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);

    switch (len) {
      case 1: return listeners.fn.call(listeners.context), true;
      case 2: return listeners.fn.call(listeners.context, a1), true;
      case 3: return listeners.fn.call(listeners.context, a1, a2), true;
      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;
      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;
      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;
    }

    for (i = 1, args = new Array(len -1); i < len; i++) {
      args[i - 1] = arguments[i];
    }

    listeners.fn.apply(listeners.context, args);
  } else {
    var length = listeners.length
      , j;

    for (i = 0; i < length; i++) {
      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);

      switch (len) {
        case 1: listeners[i].fn.call(listeners[i].context); break;
        case 2: listeners[i].fn.call(listeners[i].context, a1); break;
        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;
        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;
        default:
          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {
            args[j - 1] = arguments[j];
          }

          listeners[i].fn.apply(listeners[i].context, args);
      }
    }
  }

  return true;
};

/**
 * Add a listener for a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @param {Function} fn The listener function.
 * @param {*} [context=this] The context to invoke the listener with.
 * @returns {EventEmitter} `this`.
 * @public
 */
EventEmitter.prototype.on = function on(event, fn, context) {
  return addListener(this, event, fn, context, false);
};

/**
 * Add a one-time listener for a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @param {Function} fn The listener function.
 * @param {*} [context=this] The context to invoke the listener with.
 * @returns {EventEmitter} `this`.
 * @public
 */
EventEmitter.prototype.once = function once(event, fn, context) {
  return addListener(this, event, fn, context, true);
};

/**
 * Remove the listeners of a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @param {Function} fn Only remove the listeners that match this function.
 * @param {*} context Only remove the listeners that have this context.
 * @param {Boolean} once Only remove one-time listeners.
 * @returns {EventEmitter} `this`.
 * @public
 */
EventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {
  var evt = prefix ? prefix + event : event;

  if (!this._events[evt]) return this;
  if (!fn) {
    clearEvent(this, evt);
    return this;
  }

  var listeners = this._events[evt];

  if (listeners.fn) {
    if (
      listeners.fn === fn &&
      (!once || listeners.once) &&
      (!context || listeners.context === context)
    ) {
      clearEvent(this, evt);
    }
  } else {
    for (var i = 0, events = [], length = listeners.length; i < length; i++) {
      if (
        listeners[i].fn !== fn ||
        (once && !listeners[i].once) ||
        (context && listeners[i].context !== context)
      ) {
        events.push(listeners[i]);
      }
    }

    //
    // Reset the array, or remove it completely if we have no more listeners.
    //
    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;
    else clearEvent(this, evt);
  }

  return this;
};

/**
 * Remove all listeners, or those of the specified event.
 *
 * @param {(String|Symbol)} [event] The event name.
 * @returns {EventEmitter} `this`.
 * @public
 */
EventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {
  var evt;

  if (event) {
    evt = prefix ? prefix + event : event;
    if (this._events[evt]) clearEvent(this, evt);
  } else {
    this._events = new Events();
    this._eventsCount = 0;
  }

  return this;
};

//
// Alias methods names because people roll like that.
//
EventEmitter.prototype.off = EventEmitter.prototype.removeListener;
EventEmitter.prototype.addListener = EventEmitter.prototype.on;

//
// Expose the prefix.
//
EventEmitter.prefixed = prefix;

//
// Allow `EventEmitter` to be imported as module namespace.
//
EventEmitter.EventEmitter = EventEmitter;

//
// Expose the module.
//
if (true) {
  module.exports = EventEmitter;
}


/***/ }),

/***/ "./node_modules/p-finally/index.js":
/*!*****************************************!*\
  !*** ./node_modules/p-finally/index.js ***!
  \*****************************************/
/***/ ((module) => {


module.exports = (promise, onFinally) => {
	onFinally = onFinally || (() => {});

	return promise.then(
		val => new Promise(resolve => {
			resolve(onFinally());
		}).then(() => val),
		err => new Promise(resolve => {
			resolve(onFinally());
		}).then(() => {
			throw err;
		})
	);
};


/***/ }),

/***/ "./node_modules/p-queue/dist/index.js":
/*!********************************************!*\
  !*** ./node_modules/p-queue/dist/index.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const EventEmitter = __webpack_require__(/*! eventemitter3 */ "./node_modules/eventemitter3/index.js");
const p_timeout_1 = __webpack_require__(/*! p-timeout */ "./node_modules/p-timeout/index.js");
const priority_queue_1 = __webpack_require__(/*! ./priority-queue */ "./node_modules/p-queue/dist/priority-queue.js");
// eslint-disable-next-line @typescript-eslint/no-empty-function
const empty = () => { };
const timeoutError = new p_timeout_1.TimeoutError();
/**
Promise queue with concurrency control.
*/
class PQueue extends EventEmitter {
    constructor(options) {
        var _a, _b, _c, _d;
        super();
        this._intervalCount = 0;
        this._intervalEnd = 0;
        this._pendingCount = 0;
        this._resolveEmpty = empty;
        this._resolveIdle = empty;
        // eslint-disable-next-line @typescript-eslint/consistent-type-assertions
        options = Object.assign({ carryoverConcurrencyCount: false, intervalCap: Infinity, interval: 0, concurrency: Infinity, autoStart: true, queueClass: priority_queue_1.default }, options);
        if (!(typeof options.intervalCap === 'number' && options.intervalCap >= 1)) {
            throw new TypeError(`Expected \`intervalCap\` to be a number from 1 and up, got \`${(_b = (_a = options.intervalCap) === null || _a === void 0 ? void 0 : _a.toString()) !== null && _b !== void 0 ? _b : ''}\` (${typeof options.intervalCap})`);
        }
        if (options.interval === undefined || !(Number.isFinite(options.interval) && options.interval >= 0)) {
            throw new TypeError(`Expected \`interval\` to be a finite number >= 0, got \`${(_d = (_c = options.interval) === null || _c === void 0 ? void 0 : _c.toString()) !== null && _d !== void 0 ? _d : ''}\` (${typeof options.interval})`);
        }
        this._carryoverConcurrencyCount = options.carryoverConcurrencyCount;
        this._isIntervalIgnored = options.intervalCap === Infinity || options.interval === 0;
        this._intervalCap = options.intervalCap;
        this._interval = options.interval;
        this._queue = new options.queueClass();
        this._queueClass = options.queueClass;
        this.concurrency = options.concurrency;
        this._timeout = options.timeout;
        this._throwOnTimeout = options.throwOnTimeout === true;
        this._isPaused = options.autoStart === false;
    }
    get _doesIntervalAllowAnother() {
        return this._isIntervalIgnored || this._intervalCount < this._intervalCap;
    }
    get _doesConcurrentAllowAnother() {
        return this._pendingCount < this._concurrency;
    }
    _next() {
        this._pendingCount--;
        this._tryToStartAnother();
        this.emit('next');
    }
    _resolvePromises() {
        this._resolveEmpty();
        this._resolveEmpty = empty;
        if (this._pendingCount === 0) {
            this._resolveIdle();
            this._resolveIdle = empty;
            this.emit('idle');
        }
    }
    _onResumeInterval() {
        this._onInterval();
        this._initializeIntervalIfNeeded();
        this._timeoutId = undefined;
    }
    _isIntervalPaused() {
        const now = Date.now();
        if (this._intervalId === undefined) {
            const delay = this._intervalEnd - now;
            if (delay < 0) {
                // Act as the interval was done
                // We don't need to resume it here because it will be resumed on line 160
                this._intervalCount = (this._carryoverConcurrencyCount) ? this._pendingCount : 0;
            }
            else {
                // Act as the interval is pending
                if (this._timeoutId === undefined) {
                    this._timeoutId = setTimeout(() => {
                        this._onResumeInterval();
                    }, delay);
                }
                return true;
            }
        }
        return false;
    }
    _tryToStartAnother() {
        if (this._queue.size === 0) {
            // We can clear the interval ("pause")
            // Because we can redo it later ("resume")
            if (this._intervalId) {
                clearInterval(this._intervalId);
            }
            this._intervalId = undefined;
            this._resolvePromises();
            return false;
        }
        if (!this._isPaused) {
            const canInitializeInterval = !this._isIntervalPaused();
            if (this._doesIntervalAllowAnother && this._doesConcurrentAllowAnother) {
                const job = this._queue.dequeue();
                if (!job) {
                    return false;
                }
                this.emit('active');
                job();
                if (canInitializeInterval) {
                    this._initializeIntervalIfNeeded();
                }
                return true;
            }
        }
        return false;
    }
    _initializeIntervalIfNeeded() {
        if (this._isIntervalIgnored || this._intervalId !== undefined) {
            return;
        }
        this._intervalId = setInterval(() => {
            this._onInterval();
        }, this._interval);
        this._intervalEnd = Date.now() + this._interval;
    }
    _onInterval() {
        if (this._intervalCount === 0 && this._pendingCount === 0 && this._intervalId) {
            clearInterval(this._intervalId);
            this._intervalId = undefined;
        }
        this._intervalCount = this._carryoverConcurrencyCount ? this._pendingCount : 0;
        this._processQueue();
    }
    /**
    Executes all queued functions until it reaches the limit.
    */
    _processQueue() {
        // eslint-disable-next-line no-empty
        while (this._tryToStartAnother()) { }
    }
    get concurrency() {
        return this._concurrency;
    }
    set concurrency(newConcurrency) {
        if (!(typeof newConcurrency === 'number' && newConcurrency >= 1)) {
            throw new TypeError(`Expected \`concurrency\` to be a number from 1 and up, got \`${newConcurrency}\` (${typeof newConcurrency})`);
        }
        this._concurrency = newConcurrency;
        this._processQueue();
    }
    /**
    Adds a sync or async task to the queue. Always returns a promise.
    */
    async add(fn, options = {}) {
        return new Promise((resolve, reject) => {
            const run = async () => {
                this._pendingCount++;
                this._intervalCount++;
                try {
                    const operation = (this._timeout === undefined && options.timeout === undefined) ? fn() : p_timeout_1.default(Promise.resolve(fn()), (options.timeout === undefined ? this._timeout : options.timeout), () => {
                        if (options.throwOnTimeout === undefined ? this._throwOnTimeout : options.throwOnTimeout) {
                            reject(timeoutError);
                        }
                        return undefined;
                    });
                    resolve(await operation);
                }
                catch (error) {
                    reject(error);
                }
                this._next();
            };
            this._queue.enqueue(run, options);
            this._tryToStartAnother();
            this.emit('add');
        });
    }
    /**
    Same as `.add()`, but accepts an array of sync or async functions.

    @returns A promise that resolves when all functions are resolved.
    */
    async addAll(functions, options) {
        return Promise.all(functions.map(async (function_) => this.add(function_, options)));
    }
    /**
    Start (or resume) executing enqueued tasks within concurrency limit. No need to call this if queue is not paused (via `options.autoStart = false` or by `.pause()` method.)
    */
    start() {
        if (!this._isPaused) {
            return this;
        }
        this._isPaused = false;
        this._processQueue();
        return this;
    }
    /**
    Put queue execution on hold.
    */
    pause() {
        this._isPaused = true;
    }
    /**
    Clear the queue.
    */
    clear() {
        this._queue = new this._queueClass();
    }
    /**
    Can be called multiple times. Useful if you for example add additional items at a later time.

    @returns A promise that settles when the queue becomes empty.
    */
    async onEmpty() {
        // Instantly resolve if the queue is empty
        if (this._queue.size === 0) {
            return;
        }
        return new Promise(resolve => {
            const existingResolve = this._resolveEmpty;
            this._resolveEmpty = () => {
                existingResolve();
                resolve();
            };
        });
    }
    /**
    The difference with `.onEmpty` is that `.onIdle` guarantees that all work from the queue has finished. `.onEmpty` merely signals that the queue is empty, but it could mean that some promises haven't completed yet.

    @returns A promise that settles when the queue becomes empty, and all promises have completed; `queue.size === 0 && queue.pending === 0`.
    */
    async onIdle() {
        // Instantly resolve if none pending and if nothing else is queued
        if (this._pendingCount === 0 && this._queue.size === 0) {
            return;
        }
        return new Promise(resolve => {
            const existingResolve = this._resolveIdle;
            this._resolveIdle = () => {
                existingResolve();
                resolve();
            };
        });
    }
    /**
    Size of the queue.
    */
    get size() {
        return this._queue.size;
    }
    /**
    Size of the queue, filtered by the given options.

    For example, this can be used to find the number of items remaining in the queue with a specific priority level.
    */
    sizeBy(options) {
        // eslint-disable-next-line unicorn/no-fn-reference-in-iterator
        return this._queue.filter(options).length;
    }
    /**
    Number of pending promises.
    */
    get pending() {
        return this._pendingCount;
    }
    /**
    Whether the queue is currently paused.
    */
    get isPaused() {
        return this._isPaused;
    }
    get timeout() {
        return this._timeout;
    }
    /**
    Set the timeout for future operations.
    */
    set timeout(milliseconds) {
        this._timeout = milliseconds;
    }
}
exports["default"] = PQueue;


/***/ }),

/***/ "./node_modules/p-queue/dist/lower-bound.js":
/*!**************************************************!*\
  !*** ./node_modules/p-queue/dist/lower-bound.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
// Port of lower_bound from https://en.cppreference.com/w/cpp/algorithm/lower_bound
// Used to compute insertion index to keep queue sorted after insertion
function lowerBound(array, value, comparator) {
    let first = 0;
    let count = array.length;
    while (count > 0) {
        const step = (count / 2) | 0;
        let it = first + step;
        if (comparator(array[it], value) <= 0) {
            first = ++it;
            count -= step + 1;
        }
        else {
            count = step;
        }
    }
    return first;
}
exports["default"] = lowerBound;


/***/ }),

/***/ "./node_modules/p-queue/dist/priority-queue.js":
/*!*****************************************************!*\
  !*** ./node_modules/p-queue/dist/priority-queue.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const lower_bound_1 = __webpack_require__(/*! ./lower-bound */ "./node_modules/p-queue/dist/lower-bound.js");
class PriorityQueue {
    constructor() {
        this._queue = [];
    }
    enqueue(run, options) {
        options = Object.assign({ priority: 0 }, options);
        const element = {
            priority: options.priority,
            run
        };
        if (this.size && this._queue[this.size - 1].priority >= options.priority) {
            this._queue.push(element);
            return;
        }
        const index = lower_bound_1.default(this._queue, element, (a, b) => b.priority - a.priority);
        this._queue.splice(index, 0, element);
    }
    dequeue() {
        const item = this._queue.shift();
        return item === null || item === void 0 ? void 0 : item.run;
    }
    filter(options) {
        return this._queue.filter((element) => element.priority === options.priority).map((element) => element.run);
    }
    get size() {
        return this._queue.length;
    }
}
exports["default"] = PriorityQueue;


/***/ }),

/***/ "./node_modules/p-timeout/index.js":
/*!*****************************************!*\
  !*** ./node_modules/p-timeout/index.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



const pFinally = __webpack_require__(/*! p-finally */ "./node_modules/p-finally/index.js");

class TimeoutError extends Error {
	constructor(message) {
		super(message);
		this.name = 'TimeoutError';
	}
}

const pTimeout = (promise, milliseconds, fallback) => new Promise((resolve, reject) => {
	if (typeof milliseconds !== 'number' || milliseconds < 0) {
		throw new TypeError('Expected `milliseconds` to be a positive number');
	}

	if (milliseconds === Infinity) {
		resolve(promise);
		return;
	}

	const timer = setTimeout(() => {
		if (typeof fallback === 'function') {
			try {
				resolve(fallback());
			} catch (error) {
				reject(error);
			}

			return;
		}

		const message = typeof fallback === 'string' ? fallback : `Promise timed out after ${milliseconds} milliseconds`;
		const timeoutError = fallback instanceof Error ? fallback : new TimeoutError(message);

		if (typeof promise.cancel === 'function') {
			promise.cancel();
		}

		reject(timeoutError);
	}, milliseconds);

	// TODO: Use native `finally` keyword when targeting Node.js 10
	pFinally(
		// eslint-disable-next-line promise/prefer-await-to-then
		promise.then(resolve, reject),
		() => {
			clearTimeout(timer);
		}
	);
});

module.exports = pTimeout;
// TODO: Remove this for the next major release
module.exports["default"] = pTimeout;

module.exports.TimeoutError = TimeoutError;


/***/ }),

/***/ "./helpers/busy-app-evaluator/adapter-type.ts":
/*!****************************************************!*\
  !*** ./helpers/busy-app-evaluator/adapter-type.ts ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AdapterType": () => (/* binding */ AdapterType)
/* harmony export */ });
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! test-maker */ "test-maker");
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(test_maker__WEBPACK_IMPORTED_MODULE_0__);
// Copyright 2021 Knowledge Expert SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

const AdapterType = {
    UI: test_maker__WEBPACK_IMPORTED_MODULE_0__.adapters.playwright.adapter.name,
    UNIT: test_maker__WEBPACK_IMPORTED_MODULE_0__.adapters.unit.adapter.name,
};


/***/ }),

/***/ "./helpers/busy-app-evaluator/busy-app-evaluator.ts":
/*!**********************************************************!*\
  !*** ./helpers/busy-app-evaluator/busy-app-evaluator.ts ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isAppBusyEvaluator": () => (/* binding */ isAppBusyEvaluator)
/* harmony export */ });
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! test-maker */ "test-maker");
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(test_maker__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _busy_app_helper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./busy-app-helper */ "./helpers/busy-app-evaluator/busy-app-helper.ts");
/* harmony import */ var _error_message_helper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./error-message-helper */ "./helpers/busy-app-evaluator/error-message-helper.ts");
/* harmony import */ var _adapter_type__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./adapter-type */ "./helpers/busy-app-evaluator/adapter-type.ts");
/* eslint-disable @typescript-eslint/ban-ts-comment */




const isAppBusyEvaluator = {
    condition: async (I, runInfo) => {
        var _a, _b, _c;
        if (runInfo.adapter.name === _adapter_type__WEBPACK_IMPORTED_MODULE_3__.AdapterType.UNIT) {
            return false;
        }
        try {
            const { isAppBusy, log, error } = await (0,_busy_app_helper__WEBPACK_IMPORTED_MODULE_1__.evaluateIfAppIsBusy)(I);
            if (error) {
                await test_maker__WEBPACK_IMPORTED_MODULE_0__.logger.error(`[statetracker] ${log}`);
                await test_maker__WEBPACK_IMPORTED_MODULE_0__.logger.error(error);
            }
            else {
                await test_maker__WEBPACK_IMPORTED_MODULE_0__.logger.debug(`[statetracker] ${log}`);
            }
            return isAppBusy;
        }
        catch (error) {
            const errorMsg = error.message;
            const log = `[statetracker] An error occured while waiting for Pega state tracker not to be busy, cause: '${errorMsg}'`;
            const details = `[statetracker] Feature: '${(_a = runInfo.feature) === null || _a === void 0 ? void 0 : _a.name}', scenario: '${(_b = runInfo.scenario) === null || _b === void 0 ? void 0 : _b.name}', step: '${(_c = runInfo.step) === null || _c === void 0 ? void 0 : _c.name}'`;
            if ((0,_error_message_helper__WEBPACK_IMPORTED_MODULE_2__.isWarnMessage)(errorMsg)) {
                await test_maker__WEBPACK_IMPORTED_MODULE_0__.logger.warn(log);
                await test_maker__WEBPACK_IMPORTED_MODULE_0__.logger.warn(details);
            }
            else {
                await test_maker__WEBPACK_IMPORTED_MODULE_0__.logger.error(log);
                await test_maker__WEBPACK_IMPORTED_MODULE_0__.logger.error(details);
                await test_maker__WEBPACK_IMPORTED_MODULE_0__.logger.error(error);
            }
            return true;
        }
    },
    retry: {
        interval: 10,
        timeout: 60000,
        retryMessage: 'Waiting for Pega state tracker not to be busy',
    },
    runBefore: {
        controllerActions: true,
        selectorActions: true,
        assertionActions: true,
    },
};


/***/ }),

/***/ "./helpers/busy-app-evaluator/busy-app-helper.ts":
/*!*******************************************************!*\
  !*** ./helpers/busy-app-evaluator/busy-app-helper.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "bypassLogging": () => (/* binding */ bypassLogging),
/* harmony export */   "evaluateIfAppIsBusy": () => (/* binding */ evaluateIfAppIsBusy)
/* harmony export */ });
const evaluateIfAppIsBusy = async (I) => {
    const results = await I.evalInAllFrames({
        fn: evaluateIfAppIsBusyHelper,
        onlyMainFrames: true,
        breakOnFirstError: false,
        breakOnFirstResult: true,
    });
    const result = results.find((result) => result !== undefined);
    if (!result) {
        const currentUrl = await I.evalInCurrentWindowMainFrame(() => {
            console.log(`Current location href `, window.location.href);
            return window.location.href;
        });
        const log = `Not in Pega app (current URL: '${currentUrl}')`;
        return { isAppBusy: false, log };
    }
    return result;
};
const evaluateIfAppIsBusyHelper = () => {
    try {
        // @ts-ignore
        window.statetrackerSelector =
            // @ts-ignore
            window.statetrackerSelector || window.top.document.querySelector('.document-statetracker');
        // @ts-ignore
        if (!window.statetrackerSelector) {
            // @ts-ignore
            if (window.pega) {
                const log = `We are inside a Pega application, but statustracker is not available. Make sure it is enabled in Pega rules`;
                return { isAppBusy: false, log };
            }
            const log = `Data state busy status is not available`;
            return { isAppBusy: false, log };
        }
        else {
            // @ts-ignore
            const dataStateBusyStatus = window.statetrackerSelector.getAttribute('data-state-busy-status');
            const isAppBusy = dataStateBusyStatus === 'busy';
            const log = `Data state busy status is '${dataStateBusyStatus}'`;
            return { isAppBusy, log };
        }
    }
    catch (error) {
        const log = `An error occurred in the client while retrieving Pega state tracker: ${error.message}`;
        console.log(log);
        console.log(`Error message in the catch `, error.message);
        if (error === undefined) {
            error = new Error(`There is no iframe Selector available`);
        }
        return { isAppBusy: true, log, error };
    }
};
const bypassLogging = async ({ info }) => {
    return !!info.inAppBusyCondition;
};


/***/ }),

/***/ "./helpers/busy-app-evaluator/error-message-helper.ts":
/*!************************************************************!*\
  !*** ./helpers/busy-app-evaluator/error-message-helper.ts ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isWarnMessage": () => (/* binding */ isWarnMessage)
/* harmony export */ });
const warnMessages = [
    'Execution context was destroyed, most likely because of a navigation',
    'Target page, context or browser has been closed',
    'Session closed. Most likely the page has been closed',
];
const isWarnMessage = async (message) => {
    return warnMessages.filter((warnMessage) => message.includes(warnMessage)).length > 0;
};


/***/ }),

/***/ "./helpers/customDate.ts":
/*!*******************************!*\
  !*** ./helpers/customDate.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CustomDate": () => (/* binding */ CustomDate),
/* harmony export */   "dateFrom": () => (/* binding */ dateFrom),
/* harmony export */   "forCurrentDate": () => (/* binding */ forCurrentDate),
/* harmony export */   "forDate": () => (/* binding */ forDate),
/* harmony export */   "today": () => (/* binding */ today)
/* harmony export */ });
// Copyright 2018 Knowledge Expert SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
class CustomDate {
    constructor(date) {
        this.monthNames = [null, "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
        this.date = date;
    }
    get day() {
        const day = this.date.getDate();
        return day < 10 ? `0${day}` : `${day}`;
        //return `${day}`;
    }
    get month() {
        const month = this.date.getMonth() + 1;
        return month < 10 ? `0${month}` : `${month}`;
        //return `${month}`;
    }
    get year() {
        return `${this.date.getFullYear()}`;
    }
    get hour() {
        const hour = this.date.getHours();
        return hour < 10 ? `0${hour}` : `${hour}`;
    }
    get minutes() {
        const minutes = this.date.getMinutes();
        return minutes < 10 ? `0${minutes}` : `${minutes}`;
    }
    minusYears(years) {
        return new CustomDate(CustomDate.buildDate(this.date, { year: -years }));
    }
    plusYears(years) {
        return new CustomDate(CustomDate.buildDate(this.date, { year: years }));
    }
    minusMonths(months) {
        return new CustomDate(CustomDate.buildDate(this.date, { month: -months }));
    }
    plusMonths(months) {
        return new CustomDate(CustomDate.buildDate(this.date, { month: months }));
    }
    minusDays(days) {
        return new CustomDate(CustomDate.buildDate(this.date, { days: -days }));
    }
    plusDays(days) {
        return new CustomDate(CustomDate.buildDate(this.date, { days: days }));
    }
    plusMinutes(minutes) {
        return new CustomDate(CustomDate.buildDate(this.date, { minutes: minutes }));
    }
    minusMinutes(minutes) {
        return new CustomDate(CustomDate.buildDate(this.date, { minutes: -minutes }));
    }
    plusHours(hours) {
        return new CustomDate(CustomDate.buildDate(this.date, { hour: hours }));
    }
    minusHours(hours) {
        return new CustomDate(CustomDate.buildDate(this.date, { hour: -hours }));
    }
    equals(customDate) {
        return this.compareTo(customDate) === 0;
    }
    isBeforeThan(customDate) {
        return this.compareTo(customDate) === -1;
    }
    isAfterThan(customDate) {
        return this.compareTo(customDate) === 1;
    }
    toString(separator = '.', order = ['m', 'd', 'y']) {
        return order.map(it => {
            return it.charAt(0) == ('d') ? this.day :
                it.charAt(0) == ('m') ? this.month :
                    it.charAt(0) == ('M') ? this.monthNames[parseInt(this.month)] :
                        this.year;
        }).join(separator);
    }
    dateWithTimeToString(separator = '/', order = ['m', 'd', 'y', 'h', 'min']) {
        return order.map(it => {
            return it.charAt(0) == ('d') ? this.day :
                it.charAt(0) == ('m') ? this.month :
                    it.charAt(0) == ('M') ? this.monthNames[parseInt(this.month)] :
                        this.year;
        }).join(separator) + ` ${this.hour}:${this.minutes}`;
    }
    toStringBySlash() {
        return this.toString('/');
    }
    compareTo(customDate) {
        if (this.year > customDate.year) {
            return 1;
        }
        else if (this.year < customDate.year) {
            return -1;
        }
        if (this.month > customDate.month) {
            return 1;
        }
        else if (this.month < customDate.month) {
            return -1;
        }
        if (this.day > customDate.day) {
            return 1;
        }
        else if (this.day < customDate.day) {
            return -1;
        }
        return 0;
    }
    static buildDate(fromDate, options) {
        const result = new Date(fromDate.toString());
        if (options.days) {
            result.setDate(fromDate.getDate() + options.days);
        }
        if (options.month) {
            result.setMonth(fromDate.getMonth() + options.month);
        }
        if (options.year) {
            result.setFullYear(fromDate.getFullYear() + options.year);
        }
        if (options.hour) {
            result.setHours(fromDate.getHours() + options.hour);
        }
        if (options.minutes) {
            result.setMinutes(fromDate.getMinutes() + options.minutes);
        }
        return result;
    }
}
function forCurrentDate() {
    return new CustomDate(new Date());
}
function today() {
    return forCurrentDate();
}
function forDate(date) {
    return new CustomDate(date);
}
function dateFrom(date, delimiter = ' ', order = ['d', 'm', 'y']) {
    const chunks = date.toLowerCase().split(delimiter);
    const day = chunks[order.indexOf('d')];
    const month = chunks[order.indexOf('m')];
    const year = chunks[order.indexOf('y')];
    return forDate(new Date(`${month} ${day} ${year}`));
}


/***/ }),

/***/ "./helpers/operator-manager.ts":
/*!*************************************!*\
  !*** ./helpers/operator-manager.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "OperatorsManager": () => (/* binding */ OperatorsManager)
/* harmony export */ });
/* harmony import */ var p_queue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! p-queue */ "./node_modules/p-queue/dist/index.js");
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! test-maker */ "test-maker");
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(test_maker__WEBPACK_IMPORTED_MODULE_1__);
// Copyright 2020 Knowledge Expert SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


// @ts-ignore
class OperatorsManager {
    constructor() {
        this.queue = new p_queue__WEBPACK_IMPORTED_MODULE_0__["default"]({ concurrency: 1 });
        this.operatorsGroups = new Map();
        this.operatorsGroupsInUse = new Map();
    }
    async SetOperatorsSource(operators) {
        for (let operatorGroup of operators) {
            this.operatorsGroups.set(operatorGroup.id, operatorGroup.alt);
            this.operatorsGroupsInUse.set(operatorGroup.id, new Set());
        }
    }
    // @ts-ignore
    async assignOperator(groupId) {
        return this.queue.add(async () => {
            if (!this.operatorsGroups.size)
                throw new Error("No operators Source has been set yet");
            const alternatives = this.operatorsGroups.get(groupId);
            let freeOperator;
            if (!alternatives)
                throw new Error(`Operator Id: ${groupId} does not exist`);
            const inUseGroup = this.operatorsGroupsInUse.get(groupId);
            if (inUseGroup) {
                for (let altOperator of alternatives) {
                    if (!inUseGroup.has(altOperator.username)) {
                        inUseGroup.add(altOperator.username);
                        freeOperator = altOperator;
                        break;
                    }
                }
            }
            if (!freeOperator)
                throw new Error(`Could not find free operator for Group:${groupId}`);
            await test_maker__WEBPACK_IMPORTED_MODULE_1__.logger.info(`The operator "${freeOperator.username}" with the password "${freeOperator.password}" of the usergroup "${groupId}" was successfully assigned`);
            return freeOperator;
        });
    }
    async assignOperatorWithoutLocking(groupId) {
        return this.queue.add(async () => {
            if (!this.operatorsGroups.size)
                throw new Error("No operators Source has been set yet");
            const alternatives = this.operatorsGroups.get(groupId);
            let freeOperator;
            if (!alternatives)
                throw new Error(`Operator Id: ${groupId} does not exist`);
            let randomIndex = Math.floor(Math.random() * (alternatives.length));
            freeOperator = alternatives[randomIndex];
            await test_maker__WEBPACK_IMPORTED_MODULE_1__.logger.info(`The operator "${freeOperator.username}" with the password "${freeOperator.password}" of the usergroup "${groupId}" was successfully assigned`);
            return freeOperator;
        });
    }
    async unAssignOperator(groupId, username) {
        await this.queue.add(async () => {
            if (!this.operatorsGroups.size)
                throw new Error("No operators Source has been set yet");
            const inUseGroup = this.operatorsGroupsInUse.get(groupId);
            if (!inUseGroup)
                throw new Error(`Operator Id: ${groupId} does not exist`);
            await test_maker__WEBPACK_IMPORTED_MODULE_1__.logger.info(`The operator "${username}" of the usergroup "${groupId}" was successfully unassigned`);
            if (inUseGroup === null || inUseGroup === void 0 ? void 0 : inUseGroup.has(username))
                inUseGroup === null || inUseGroup === void 0 ? void 0 : inUseGroup.delete(username);
        });
    }
}


/***/ }),

/***/ "./helpers/options/defaultOptions.ts":
/*!*******************************************!*\
  !*** ./helpers/options/defaultOptions.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DefaultOptions": () => (/* binding */ DefaultOptions),
/* harmony export */   "defaultOptions": () => (/* binding */ defaultOptions)
/* harmony export */ });
// Copyright 2020 Knowledge Expert SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
class DefaultOptions {
    constructor() {
        if (DefaultOptions.instance) {
            throw new Error("Error - use Singleton.getInstance()");
        }
        this._selector = 0;
        this._assertion = 0;
    }
    static getInstance() {
        DefaultOptions.instance = DefaultOptions.instance || new DefaultOptions();
        return DefaultOptions.instance;
    }
    setSelector(value) {
        this._selector = value;
    }
    getSelector() {
        return this._selector;
    }
    setAssertion(value) {
        this._assertion = value;
    }
    getAssertion() {
        return this._assertion;
    }
}
const defaultOptions = new DefaultOptions();


/***/ }),

/***/ "./helpers/options/methodOptions.ts":
/*!******************************************!*\
  !*** ./helpers/options/methodOptions.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Options": () => (/* binding */ Options),
/* harmony export */   "methodOptions": () => (/* binding */ methodOptions)
/* harmony export */ });
/* harmony import */ var _defaultOptions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./defaultOptions */ "./helpers/options/defaultOptions.ts");
// Copyright 2020 Knowledge Expert SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

class Options {
    setOptions(options) {
        let actualOptions = {
            timeout: _defaultOptions__WEBPACK_IMPORTED_MODULE_0__.defaultOptions.getSelector(),
            interval: 50,
            retries: Math.trunc(_defaultOptions__WEBPACK_IMPORTED_MODULE_0__.defaultOptions.getSelector() / 50),
            assertionTimeout: _defaultOptions__WEBPACK_IMPORTED_MODULE_0__.defaultOptions.getAssertion(),
            index: 0,
            isCaseSensitive: true,
        };
        if (options === null || options === void 0 ? void 0 : options.timeout) {
            actualOptions.timeout = options.timeout;
        }
        if (options === null || options === void 0 ? void 0 : options.interval) {
            actualOptions.interval = options.interval;
        }
        if (options === null || options === void 0 ? void 0 : options.retries) {
            actualOptions.retries = options.retries;
        }
        if (options === null || options === void 0 ? void 0 : options.assertionTimeout) {
            actualOptions.assertionTimeout = options.assertionTimeout;
        }
        if (options === null || options === void 0 ? void 0 : options.index) {
            actualOptions.index = options.index;
        }
        if ((options === null || options === void 0 ? void 0 : options.isCaseSensitive) == false) {
            actualOptions.isCaseSensitive = false;
        }
        return actualOptions;
    }
    setOptionsAndIndex(index, options) {
        let actualOptions = {
            index: index,
            timeout: _defaultOptions__WEBPACK_IMPORTED_MODULE_0__.defaultOptions.getSelector(),
            interval: 50,
            retries: Math.trunc(_defaultOptions__WEBPACK_IMPORTED_MODULE_0__.defaultOptions.getSelector() / 50),
            assertionTimeout: _defaultOptions__WEBPACK_IMPORTED_MODULE_0__.defaultOptions.getAssertion()
        };
        if (options === null || options === void 0 ? void 0 : options.timeout) {
            actualOptions.timeout = options.timeout;
        }
        if (options === null || options === void 0 ? void 0 : options.interval) {
            actualOptions.interval = options.interval;
        }
        if (options === null || options === void 0 ? void 0 : options.retries) {
            actualOptions.retries = options.retries;
        }
        if (options === null || options === void 0 ? void 0 : options.assertionTimeout) {
            actualOptions.assertionTimeout = options.assertionTimeout;
        }
        return actualOptions;
    }
}
const methodOptions = new Options();


/***/ }),

/***/ "./helpers/pegaVersion.ts":
/*!********************************!*\
  !*** ./helpers/pegaVersion.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PegaVersion": () => (/* binding */ PegaVersion),
/* harmony export */   "pegaVersion": () => (/* binding */ pegaVersion)
/* harmony export */ });
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! test-maker */ "test-maker");
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(test_maker__WEBPACK_IMPORTED_MODULE_0__);
// Copyright 2021 Knowledge Expert SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

class PegaVersion {
    constructor() {
        if (PegaVersion.instance) {
            throw new Error("Error - use Singleton.getInstance()");
        }
    }
    static getInstance() {
        PegaVersion.instance = PegaVersion.instance || new PegaVersion();
        return PegaVersion.instance;
    }
    async setVersion() {
        //@ts-ignore
        let currentVersion = await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.evalInCurrentWindowMainFrame(() => pega.desktop.pxPdnURI);
        currentVersion = currentVersion.substring(currentVersion.length - 3);
        //console.log('Current Pega version is ' + currentVersion);
        this._version = currentVersion;
    }
    getVersion() {
        return +this._version;
    }
}
const pegaVersion = new PegaVersion();


/***/ }),

/***/ "./helpers/value/abstractValue.ts":
/*!****************************************!*\
  !*** ./helpers/value/abstractValue.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AbstractValue": () => (/* binding */ AbstractValue)
/* harmony export */ });
class AbstractValue {
    constructor(key, value) {
        this.key = key;
        this.value = value;
    }
    get() {
        return this.value;
    }
    getAsBoolean() {
        return (this.get() === 'true');
    }
    getAsNumber() {
        return (Number(this.get()));
    }
    describe() {
        return this.key;
    }
}


/***/ }),

/***/ "./helpers/value/describedValue.ts":
/*!*****************************************!*\
  !*** ./helpers/value/describedValue.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DescribedValue": () => (/* binding */ DescribedValue),
/* harmony export */   "booleanValue": () => (/* binding */ booleanValue),
/* harmony export */   "numberValue": () => (/* binding */ numberValue)
/* harmony export */ });
/* harmony import */ var _abstractValue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./abstractValue */ "./helpers/value/abstractValue.ts");

class DescribedValue extends _abstractValue__WEBPACK_IMPORTED_MODULE_0__.AbstractValue {
    toString() {
        return this.describe() + ' - ' + this.get();
    }
}
function booleanValue(key, value) {
    return new DescribedValue(key, String(value));
}
function numberValue(key, value) {
    return new DescribedValue(key, String(value));
}


/***/ }),

/***/ "./helpers/value/keyValuePair.ts":
/*!***************************************!*\
  !*** ./helpers/value/keyValuePair.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "KeyValuePair": () => (/* binding */ KeyValuePair),
/* harmony export */   "keyValuePair": () => (/* binding */ keyValuePair)
/* harmony export */ });
/* harmony import */ var _abstractValue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./abstractValue */ "./helpers/value/abstractValue.ts");

class KeyValuePair extends _abstractValue__WEBPACK_IMPORTED_MODULE_0__.AbstractValue {
    toString() {
        return this.describe();
    }
}
function keyValuePair(key, value) {
    return new KeyValuePair(key, value);
}


/***/ }),

/***/ "./src/api/apiCalls.ts":
/*!*****************************!*\
  !*** ./src/api/apiCalls.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PegaApi": () => (/* binding */ PegaApi),
/* harmony export */   "pegaApi": () => (/* binding */ pegaApi)
/* harmony export */ });
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! test-maker */ "test-maker");
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(test_maker__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _apiVariables__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./apiVariables */ "./src/api/apiVariables.ts");


//sometimes if actionID is needed and there is no Assignment visible try pyLastFlowStepLabel (without spaces)
// or pxSubscript
class PegaApi {
    constructor() {
        this.logInfo = "";
    }
    async createCaseViaApi(args) {
        let body = "";
        let logInfo = "";
        let successfulStatus;
        //https://dev.k-expert.com:8082/prweb/api/v1/cases
        const src = `https://${args.username}:${args.password}@${args.partialUrl}/prweb/api/v1/cases`;
        if (args.body) {
            body = args.body;
        }
        if (!args.successfulStatus) {
            successfulStatus = 201;
        }
        else {
            successfulStatus = args.successfulStatus;
        }
        try {
            const response = await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.sendPostRequest(src, body);
            if (args.logInfo) {
                logInfo = args.logInfo;
                await test_maker__WEBPACK_IMPORTED_MODULE_0__.logger.log('Log info: ' + logInfo);
                // console.log(response.status);
                // console.log(response.statusText);
            }
            if (response.status == successfulStatus) {
                if (typeof response.data !== 'undefined') {
                    await test_maker__WEBPACK_IMPORTED_MODULE_0__.logger.log('+++++');
                    await test_maker__WEBPACK_IMPORTED_MODULE_0__.logger.log(response.data);
                    let fullCaseId = response.data.ID;
                    let caseId = fullCaseId.replace(`${args.workId} `, '');
                    _apiVariables__WEBPACK_IMPORTED_MODULE_1__.ApiVars.caseId = caseId;
                    //console.log(caseId);
                    return caseId;
                }
            }
        }
        catch (error) {
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.logger.log(error);
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.logger.log(error.response.status);
        }
    }
    async requestPost(args) {
        let logInfo = "";
        if (!args.workBasketOrWorkList) {
            args.workBasketOrWorkList = "ASSIGN-WORKLIST";
        }
        const src = `https://${args.username}:${args.password}@${args.partialUrl}/prweb/api/v1/assignments/${args.workBasketOrWorkList}%20${args.workId}%20${args.actualCaseId}!${args.assignment}?actionID=${args.actionId}`;
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.logger.log(src);
        if (!args.body) {
            args.body = "";
        }
        if (args.debug) {
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.logger.log('Passed body: ' + args.body);
        }
        if (args.logInfo) {
            logInfo = args.logInfo;
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.logger.log('Log info: ' + logInfo);
        }
        try {
            const response = await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.sendPostRequest(src, args.body);
            if (response.status == 200) {
                await test_maker__WEBPACK_IMPORTED_MODULE_0__.logger.log(response.data);
            }
            else {
                await test_maker__WEBPACK_IMPORTED_MODULE_0__.logger.log('status Code: ' + response.statusText + ' and status Code ' + response.status);
                if (response.status != 200) {
                    throw new Error('Pega API response includes the error, check the console log');
                }
            }
            if (args.timeout) {
                await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.wait(args.timeout);
            }
        }
        catch (error) {
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.logger.log(error);
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.logger.log(error.response.status);
        }
    }
    async getChildCase(args) {
        _apiVariables__WEBPACK_IMPORTED_MODULE_1__.ApiVars.childCaseId = '';
        let logInfo = "";
        const src = `https://${args.username}:${args.password}@${args.partialUrl}/api/v1/cases/${args.workId}%20${args.actualCaseId}`;
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.logger.log(src);
        if (args.logInfo) {
            logInfo = args.logInfo;
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.logger.log('Log info: ' + logInfo);
        }
        try {
            let response = await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.sendGetRequest(src);
            if (response.status == 200) {
                if (typeof response.data !== 'undefined') {
                    //console.log('+++++');
                    //console.log(response.data);
                    let firstChildCase = response.data[0].ID;
                    //console.log(firstChildCase);
                    firstChildCase = firstChildCase.replace(`${args.workId} `, '');
                    //console.log(firstChildCase);
                    _apiVariables__WEBPACK_IMPORTED_MODULE_1__.ApiVars.childCaseId = firstChildCase;
                }
            }
        }
        catch (error) {
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.logger.log(error);
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.logger.log(error.response.status);
        }
    }
    async getChildCaseByCaseName(args) {
        _apiVariables__WEBPACK_IMPORTED_MODULE_1__.ApiVars.childCaseId = '';
        let logInfo = "";
        const src = `https://${args.username}:${args.password}@${args.partialUrl}/api/v1/cases/${args.workId}%20${args.actualCaseId}`;
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.logger.log(src);
        if (args.logInfo) {
            logInfo = args.logInfo;
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.logger.log('Log info: ' + logInfo);
        }
        try {
            let response = await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.sendGetRequest(src);
            if (response.status == 200) {
                if (typeof response.data !== 'undefined') {
                    //console.log('+++++');
                    //console.log(response.data);
                    let childCases = response.data.childCases;
                    let counter = 0;
                    for (let i = 0; i < childCases.length; i++) {
                        let childCase = childCases[i].ID;
                        childCase = childCase.replace(`${args.workId} `, '');
                        if (childCase.includes(args.childCaseName)) {
                            _apiVariables__WEBPACK_IMPORTED_MODULE_1__.ApiVars.childCaseId = childCase;
                            await test_maker__WEBPACK_IMPORTED_MODULE_0__.logger.log(childCase);
                            counter++;
                        }
                    }
                    if (counter === 0) {
                        await test_maker__WEBPACK_IMPORTED_MODULE_0__.logger.log(`No child case was found by case name "${args.childCaseName}"`);
                        throw new Error(`No child case was found by case name "${args.childCaseName}"`);
                    }
                }
            }
        }
        catch (error) {
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.logger.log(error);
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.logger.log(error.response.status);
        }
    }
    async checkTheStatusOfTheToggle(args) {
        let environmentUrl = args.partialUrl;
        let operator = args.username;
        let password = args.password;
        _apiVariables__WEBPACK_IMPORTED_MODULE_1__.ApiVars.toggleStatus = false;
        const src = `https://${operator}:${password}@${environmentUrl}/api/v1/data/D_pxListOfAvailableToggles`;
        //console.log(src);
        try {
            let response = await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.sendGetRequest(src);
            if (response.status == 200) {
                if (typeof response.data !== 'undefined') {
                    //console.log('+++++');
                    //console.log(response.data);
                    let pxResults = response.data.pxResults;
                    let counter = 0;
                    for (let i = 0; i < pxResults.length; i++) {
                        if (pxResults[i].pyToggleIdentifier === args.toggleIdentifier) {
                            await test_maker__WEBPACK_IMPORTED_MODULE_0__.logger.log(`Toggle status for "${args.toggleIdentifier}" is ` + pxResults[i].pyToggleStatus);
                            counter++;
                            if (pxResults[i].pyToggleIdentifier === args.toggleIdentifier && pxResults[i].pyToggleStatus === "ON") {
                                _apiVariables__WEBPACK_IMPORTED_MODULE_1__.ApiVars.toggleStatus = true;
                                return true;
                            }
                        }
                    }
                    if (counter === 0) {
                        await test_maker__WEBPACK_IMPORTED_MODULE_0__.logger.log(`No toggle was found by identifier "${args.toggleIdentifier}"`);
                        return false;
                    }
                }
            }
            return false;
        }
        catch (error) {
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.logger.log(error);
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.logger.log(error.response.status);
            return false;
        }
    }
}
const pegaApi = new PegaApi();


/***/ }),

/***/ "./src/api/apiVariables.ts":
/*!*********************************!*\
  !*** ./src/api/apiVariables.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ApiVars": () => (/* binding */ ApiVars),
/* harmony export */   "apiVariables": () => (/* binding */ apiVariables)
/* harmony export */ });
// Copyright 2019 Knowledge Expert SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
class ApiVars {
}
ApiVars.caseId = '';
ApiVars.childCaseId = "";
const apiVariables = new ApiVars();


/***/ }),

/***/ "./src/pega.ts":
/*!*********************!*\
  !*** ./src/pega.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Pega": () => (/* binding */ Pega),
/* harmony export */   "pega": () => (/* binding */ pega)
/* harmony export */ });
/* harmony import */ var _widgets_actionsButton__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./widgets/actionsButton */ "./src/widgets/actionsButton.ts");
/* harmony import */ var _widgets_alerts__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./widgets/alerts */ "./src/widgets/alerts.ts");
/* harmony import */ var _widgets_assignmentTitle__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./widgets/assignmentTitle */ "./src/widgets/assignmentTitle.ts");
/* harmony import */ var _widgets_frame__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./widgets/frame */ "./src/widgets/frame.ts");
/* harmony import */ var _widgets_controls_buttons_button__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./widgets/controls/buttons/button */ "./src/widgets/controls/buttons/button.ts");
/* harmony import */ var _widgets_controls_buttons_formButtons__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./widgets/controls/buttons/formButtons */ "./src/widgets/controls/buttons/formButtons.ts");
/* harmony import */ var _widgets_controls_checkbox__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./widgets/controls/checkbox */ "./src/widgets/controls/checkbox.ts");
/* harmony import */ var _widgets_controls_multiSelect__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./widgets/controls/multiSelect */ "./src/widgets/controls/multiSelect.ts");
/* harmony import */ var _widgets_controls_readonlyTextInput__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./widgets/controls/readonlyTextInput */ "./src/widgets/controls/readonlyTextInput.ts");
/* harmony import */ var _widgets_controls_table_table__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./widgets/controls/table/table */ "./src/widgets/controls/table/table.ts");
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! test-maker */ "test-maker");
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(test_maker__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var _widgets_case__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./widgets/case */ "./src/widgets/case.ts");
/* harmony import */ var _widgets_menu__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./widgets/menu */ "./src/widgets/menu.ts");
/* harmony import */ var _widgets_progressBar__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./widgets/progressBar */ "./src/widgets/progressBar.ts");
/* harmony import */ var _widgets_caseWorkerMenu__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./widgets/caseWorkerMenu */ "./src/widgets/caseWorkerMenu.ts");
/* harmony import */ var _widgets_emailAttachment__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./widgets/emailAttachment */ "./src/widgets/emailAttachment.ts");
/* harmony import */ var _widgets_leftPanelMenu__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./widgets/leftPanelMenu */ "./src/widgets/leftPanelMenu.ts");
/* harmony import */ var _widgets_loginForm__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./widgets/loginForm */ "./src/widgets/loginForm.ts");
/* harmony import */ var _widgets_pulse__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./widgets/pulse */ "./src/widgets/pulse.ts");
/* harmony import */ var _widgets_stepRouting__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./widgets/stepRouting */ "./src/widgets/stepRouting.ts");
/* harmony import */ var _widgets_topPanel__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./widgets/topPanel */ "./src/widgets/topPanel.ts");
/* harmony import */ var _widgets_status__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./widgets/status */ "./src/widgets/status.ts");
/* harmony import */ var _widgets_controls_customControl_customControlByAttribute__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./widgets/controls/customControl/customControlByAttribute */ "./src/widgets/controls/customControl/customControlByAttribute.ts");
/* harmony import */ var _widgets_controls_customControl_CustomConrolByXPath__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./widgets/controls/customControl/CustomConrolByXPath */ "./src/widgets/controls/customControl/CustomConrolByXPath.ts");
/* harmony import */ var _widgets_controls_customControl_CustomControlByCss__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./widgets/controls/customControl/CustomControlByCss */ "./src/widgets/controls/customControl/CustomControlByCss.ts");
/* harmony import */ var _helpers_options_defaultOptions__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ../helpers/options/defaultOptions */ "./helpers/options/defaultOptions.ts");
/* harmony import */ var _widgets_controls_image__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./widgets/controls/image */ "./src/widgets/controls/image.ts");
/* harmony import */ var _widgets_controls_logo__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./widgets/controls/logo */ "./src/widgets/controls/logo.ts");
/* harmony import */ var _widgets_controls_autocompletionField_autocompletionByAttribute__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./widgets/controls/autocompletionField/autocompletionByAttribute */ "./src/widgets/controls/autocompletionField/autocompletionByAttribute.ts");
/* harmony import */ var _widgets_controls_autocompletionField_autocompletionByLabel__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./widgets/controls/autocompletionField/autocompletionByLabel */ "./src/widgets/controls/autocompletionField/autocompletionByLabel.ts");
/* harmony import */ var _widgets_controls_autocompletionField_autocompletionByXPath__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./widgets/controls/autocompletionField/autocompletionByXPath */ "./src/widgets/controls/autocompletionField/autocompletionByXPath.ts");
/* harmony import */ var _widgets_controls_autocompletionField_autocompletionByCss__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./widgets/controls/autocompletionField/autocompletionByCss */ "./src/widgets/controls/autocompletionField/autocompletionByCss.ts");
/* harmony import */ var _widgets_controls_textInput_textInputByAttribute__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./widgets/controls/textInput/textInputByAttribute */ "./src/widgets/controls/textInput/textInputByAttribute.ts");
/* harmony import */ var _widgets_controls_textInput_textInputByLabel__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./widgets/controls/textInput/textInputByLabel */ "./src/widgets/controls/textInput/textInputByLabel.ts");
/* harmony import */ var _widgets_controls_textInput_textInputByXPath__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./widgets/controls/textInput/textInputByXPath */ "./src/widgets/controls/textInput/textInputByXPath.ts");
/* harmony import */ var _widgets_controls_textInput_textInputByCss__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./widgets/controls/textInput/textInputByCss */ "./src/widgets/controls/textInput/textInputByCss.ts");
/* harmony import */ var _widgets_controls_datePicker_datePickerByXPath__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./widgets/controls/datePicker/datePickerByXPath */ "./src/widgets/controls/datePicker/datePickerByXPath.ts");
/* harmony import */ var _widgets_controls_datePicker_datePickerByAttribute__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./widgets/controls/datePicker/datePickerByAttribute */ "./src/widgets/controls/datePicker/datePickerByAttribute.ts");
/* harmony import */ var _widgets_controls_datePicker_datePickerByCss__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./widgets/controls/datePicker/datePickerByCss */ "./src/widgets/controls/datePicker/datePickerByCss.ts");
/* harmony import */ var _widgets_controls_datePicker_datePickerByLabel__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./widgets/controls/datePicker/datePickerByLabel */ "./src/widgets/controls/datePicker/datePickerByLabel.ts");
/* harmony import */ var _widgets_controls_dropdown_dropdownByAttribute__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./widgets/controls/dropdown/dropdownByAttribute */ "./src/widgets/controls/dropdown/dropdownByAttribute.ts");
/* harmony import */ var _widgets_controls_dropdown_dropdownByCss__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./widgets/controls/dropdown/dropdownByCss */ "./src/widgets/controls/dropdown/dropdownByCss.ts");
/* harmony import */ var _widgets_controls_dropdown_dropdownByLabel__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./widgets/controls/dropdown/dropdownByLabel */ "./src/widgets/controls/dropdown/dropdownByLabel.ts");
/* harmony import */ var _widgets_controls_dropdown_dropdownByXPath__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./widgets/controls/dropdown/dropdownByXPath */ "./src/widgets/controls/dropdown/dropdownByXPath.ts");
/* harmony import */ var _widgets_controls_textarea_textAreaByAttribute__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./widgets/controls/textarea/textAreaByAttribute */ "./src/widgets/controls/textarea/textAreaByAttribute.ts");
/* harmony import */ var _widgets_controls_textarea_textAreaByCss__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./widgets/controls/textarea/textAreaByCss */ "./src/widgets/controls/textarea/textAreaByCss.ts");
/* harmony import */ var _widgets_controls_textarea_textAreaByLabel__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ./widgets/controls/textarea/textAreaByLabel */ "./src/widgets/controls/textarea/textAreaByLabel.ts");
/* harmony import */ var _widgets_controls_textarea_textAreaByXPath__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ./widgets/controls/textarea/textAreaByXPath */ "./src/widgets/controls/textarea/textAreaByXPath.ts");
/* harmony import */ var _widgets_controls_label__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ./widgets/controls/label */ "./src/widgets/controls/label.ts");
/* harmony import */ var _widgets_controls_richTextEditor__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ./widgets/controls/richTextEditor */ "./src/widgets/controls/richTextEditor.ts");
/* harmony import */ var _widgets_controls_radiobuttons_radiobuttonById__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ./widgets/controls/radiobuttons/radiobuttonById */ "./src/widgets/controls/radiobuttons/radiobuttonById.ts");
/* harmony import */ var _widgets_controls_radiobuttons_radiobuttonByAttribute__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ./widgets/controls/radiobuttons/radiobuttonByAttribute */ "./src/widgets/controls/radiobuttons/radiobuttonByAttribute.ts");
/* harmony import */ var _widgets_toDoList__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ./widgets/toDoList */ "./src/widgets/toDoList.ts");
/* harmony import */ var _widgets_rightPanel__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! ./widgets/rightPanel */ "./src/widgets/rightPanel.ts");
/* harmony import */ var _widgets_controls_dateRange__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! ./widgets/controls/dateRange */ "./src/widgets/controls/dateRange.ts");
/* harmony import */ var _widgets_controls_anyPicker__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! ./widgets/controls/anyPicker */ "./src/widgets/controls/anyPicker.ts");
























































class Pega {
    constructor() {
        this.alert = new _widgets_alerts__WEBPACK_IMPORTED_MODULE_1__.Alerts();
        this.assignmentTitle = new _widgets_assignmentTitle__WEBPACK_IMPORTED_MODULE_2__.AssignmentTitle();
        this.case = new _widgets_case__WEBPACK_IMPORTED_MODULE_11__.Case();
        this.caseWorkerMenu = new _widgets_caseWorkerMenu__WEBPACK_IMPORTED_MODULE_14__.CaseWorkerMenu();
        this.emailAttachment = new _widgets_emailAttachment__WEBPACK_IMPORTED_MODULE_15__.EmailAttachment();
        this.frame = new _widgets_frame__WEBPACK_IMPORTED_MODULE_3__.Frame();
        this.leftPanelMenu = new _widgets_leftPanelMenu__WEBPACK_IMPORTED_MODULE_16__.LeftPanelMenu();
        this.loginForm = new _widgets_loginForm__WEBPACK_IMPORTED_MODULE_17__.LoginForm();
        this.progressBar = new _widgets_progressBar__WEBPACK_IMPORTED_MODULE_13__.ProgressBar();
        this.pulse = new _widgets_pulse__WEBPACK_IMPORTED_MODULE_18__.Pulse();
        this.stepRouting = new _widgets_stepRouting__WEBPACK_IMPORTED_MODULE_19__.StepRouting();
        this.topPanel = new _widgets_topPanel__WEBPACK_IMPORTED_MODULE_20__.TopPanel();
        this.status = new _widgets_status__WEBPACK_IMPORTED_MODULE_21__.Status();
        this.richTextEditor = new _widgets_controls_richTextEditor__WEBPACK_IMPORTED_MODULE_49__.RichTextEditor();
        this.rightPanel = new _widgets_rightPanel__WEBPACK_IMPORTED_MODULE_53__.RightPanel();
        this.actionsMenu = new _widgets_actionsButton__WEBPACK_IMPORTED_MODULE_0__.ActionsMenu('//button[contains(@title, "ctions")]'); //the typo made on purpose
        this.button = new _widgets_controls_buttons_formButtons__WEBPACK_IMPORTED_MODULE_5__.FormButtons();
    }
    async visit(url, runInfo) {
        var _a, _b, _c, _d, _e, _f;
        await test_maker__WEBPACK_IMPORTED_MODULE_10__.I.goto(url);
        if (runInfo) {
            _helpers_options_defaultOptions__WEBPACK_IMPORTED_MODULE_25__.defaultOptions.setSelector((_c = (_b = (_a = runInfo === null || runInfo === void 0 ? void 0 : runInfo.configuration) === null || _a === void 0 ? void 0 : _a.runner) === null || _b === void 0 ? void 0 : _b.timeout) === null || _c === void 0 ? void 0 : _c.selector);
            _helpers_options_defaultOptions__WEBPACK_IMPORTED_MODULE_25__.defaultOptions.setAssertion((_f = (_e = (_d = runInfo === null || runInfo === void 0 ? void 0 : runInfo.configuration) === null || _d === void 0 ? void 0 : _d.runner) === null || _e === void 0 ? void 0 : _e.timeout) === null || _f === void 0 ? void 0 : _f.assertion);
            _helpers_options_defaultOptions__WEBPACK_IMPORTED_MODULE_25__.defaultOptions.getSelector();
            _helpers_options_defaultOptions__WEBPACK_IMPORTED_MODULE_25__.defaultOptions.getAssertion();
        }
        else {
            _helpers_options_defaultOptions__WEBPACK_IMPORTED_MODULE_25__.defaultOptions.setSelector(11111);
            _helpers_options_defaultOptions__WEBPACK_IMPORTED_MODULE_25__.defaultOptions.setAssertion(15555);
            _helpers_options_defaultOptions__WEBPACK_IMPORTED_MODULE_25__.defaultOptions.getSelector();
            _helpers_options_defaultOptions__WEBPACK_IMPORTED_MODULE_25__.defaultOptions.getAssertion();
        }
    }
    async switchToPegaExpress() {
        await test_maker__WEBPACK_IMPORTED_MODULE_10__.I.click('[data-test-id="switch-to-in-app-editing"]')
            .wait(2000);
    }
    async logoff(text = 'Log off', selector = `[data-test-id="px-opr-image-ctrl"]`) {
        await test_maker__WEBPACK_IMPORTED_MODULE_10__.I.switchToMainFrame()
            .waitForSelectActionabilityCheck(selector, [`attached`, 'stable', 'visible'])
            .hover(selector)
            .click(selector)
            .waitForSelectorToBeVisible((0,test_maker__WEBPACK_IMPORTED_MODULE_10__.Selector)('.menu-item-title').withExactText(text))
            .click((0,test_maker__WEBPACK_IMPORTED_MODULE_10__.Selector)('.menu-item-title').withExactText(text));
    }
    async moveFocusOutside() {
        await test_maker__WEBPACK_IMPORTED_MODULE_10__.I.click(`body`)
            .wait(2000);
    }
    menu() {
        return new _widgets_menu__WEBPACK_IMPORTED_MODULE_12__.Menu();
    }
    // because title might be 'Actions' or 'Other Actions'
    actionsMenuBySelector(selector) {
        return new _widgets_actionsButton__WEBPACK_IMPORTED_MODULE_0__.ActionsMenu(selector);
    }
    anypickerByDataTestId(dataTestId, container) {
        return new _widgets_controls_anyPicker__WEBPACK_IMPORTED_MODULE_55__.AnyPicker(`data-test-id`, dataTestId, container);
    }
    anypickerById(id, container) {
        return new _widgets_controls_anyPicker__WEBPACK_IMPORTED_MODULE_55__.AnyPicker(`id`, id, container);
    }
    autocompletionFieldBy(attributeName, attributeValue, container) {
        return new _widgets_controls_autocompletionField_autocompletionByAttribute__WEBPACK_IMPORTED_MODULE_28__.AutocompletionByAttribute(attributeName, attributeValue, container);
    }
    ;
    autocompletionFieldById(id, container) {
        return new _widgets_controls_autocompletionField_autocompletionByAttribute__WEBPACK_IMPORTED_MODULE_28__.AutocompletionByAttribute('id', id, container);
    }
    ;
    autocompletionField(dataTestId, container) {
        return new _widgets_controls_autocompletionField_autocompletionByAttribute__WEBPACK_IMPORTED_MODULE_28__.AutocompletionByAttribute('data-test-id', dataTestId, container);
    }
    ;
    autocompletionFieldByDataTestId(dataTestId, container) {
        return new _widgets_controls_autocompletionField_autocompletionByAttribute__WEBPACK_IMPORTED_MODULE_28__.AutocompletionByAttribute('data-test-id', dataTestId, container);
    }
    ;
    autocompletionFieldByLabel(label) {
        return new _widgets_controls_autocompletionField_autocompletionByLabel__WEBPACK_IMPORTED_MODULE_29__.AutocompletionByLabel(label);
    }
    ;
    autocompletionFieldByXPath(xpath, container) {
        return new _widgets_controls_autocompletionField_autocompletionByXPath__WEBPACK_IMPORTED_MODULE_30__.AutocompletionByXPath(xpath, container);
    }
    ;
    autocompletionFieldByCss(css) {
        return new _widgets_controls_autocompletionField_autocompletionByCss__WEBPACK_IMPORTED_MODULE_31__.AutocompletionByCss(css);
    }
    ;
    buttonBy(attributeName, attributeValue, container) {
        return new _widgets_controls_buttons_button__WEBPACK_IMPORTED_MODULE_4__.Button(attributeName, attributeValue, container);
    }
    ;
    buttonById(id, container) {
        return new _widgets_controls_buttons_button__WEBPACK_IMPORTED_MODULE_4__.Button('id', id, container);
    }
    ;
    buttonByDataTestId(dataTestId, container) {
        return new _widgets_controls_buttons_button__WEBPACK_IMPORTED_MODULE_4__.Button('data-test-id', dataTestId, container);
    }
    ;
    buttonByTitle(title, container) {
        return new _widgets_controls_buttons_button__WEBPACK_IMPORTED_MODULE_4__.Button('title', title, container);
    }
    ;
    checkboxBy(attributeName, attributeValue, container) {
        return new _widgets_controls_checkbox__WEBPACK_IMPORTED_MODULE_6__.CheckBox(attributeName, attributeValue, container);
    }
    ;
    checkboxById(id, container) {
        return new _widgets_controls_checkbox__WEBPACK_IMPORTED_MODULE_6__.CheckBox('id', id, container);
    }
    ;
    checkboxByDataTestId(dataTestId, container) {
        return new _widgets_controls_checkbox__WEBPACK_IMPORTED_MODULE_6__.CheckBox('data-test-id', dataTestId, container);
    }
    ;
    checkbox(dataTestIs, container) {
        return new _widgets_controls_checkbox__WEBPACK_IMPORTED_MODULE_6__.CheckBox('data-test-id', dataTestIs, container);
    }
    ;
    datePickerBy(attributeName, attributeValue, container) {
        return new _widgets_controls_datePicker_datePickerByAttribute__WEBPACK_IMPORTED_MODULE_37__.DatePickerByAttribute(attributeName, attributeValue, container);
    }
    ;
    datePickerById(id, container) {
        return new _widgets_controls_datePicker_datePickerByAttribute__WEBPACK_IMPORTED_MODULE_37__.DatePickerByAttribute('id', id, container);
    }
    ;
    datePickerByDataTestId(dataTestId, container) {
        return new _widgets_controls_datePicker_datePickerByAttribute__WEBPACK_IMPORTED_MODULE_37__.DatePickerByAttribute('data-test-id', dataTestId, container);
    }
    ;
    datePicker(dataTestId, container) {
        return new _widgets_controls_datePicker_datePickerByAttribute__WEBPACK_IMPORTED_MODULE_37__.DatePickerByAttribute('data-test-id', dataTestId, container);
    }
    ;
    datePickerByXpath(xpath, container) {
        return new _widgets_controls_datePicker_datePickerByXPath__WEBPACK_IMPORTED_MODULE_36__.DatePickerByXPath(xpath, container);
    }
    ;
    datePickerByCss(css) {
        return new _widgets_controls_datePicker_datePickerByCss__WEBPACK_IMPORTED_MODULE_38__.DatePickerByCss(css);
    }
    ;
    datePickerByLabel(label, container) {
        return new _widgets_controls_datePicker_datePickerByLabel__WEBPACK_IMPORTED_MODULE_39__.DatePickerByLabel(label, container);
    }
    ;
    dateRangeByDataTestId(dataTestId) {
        return new _widgets_controls_dateRange__WEBPACK_IMPORTED_MODULE_54__.DateRange(dataTestId);
    }
    dropdownBy(attributeName, attributeValue, container) {
        return new _widgets_controls_dropdown_dropdownByAttribute__WEBPACK_IMPORTED_MODULE_40__.DropdownByAttribute(attributeName, attributeValue, container);
    }
    ;
    dropdownById(id, container) {
        return new _widgets_controls_dropdown_dropdownByAttribute__WEBPACK_IMPORTED_MODULE_40__.DropdownByAttribute('id', id, container);
    }
    ;
    dropdownByDataTestId(dataTestId, container) {
        return new _widgets_controls_dropdown_dropdownByAttribute__WEBPACK_IMPORTED_MODULE_40__.DropdownByAttribute('data-test-id', dataTestId, container);
    }
    ;
    dropdown(dataTestId, container) {
        return new _widgets_controls_dropdown_dropdownByAttribute__WEBPACK_IMPORTED_MODULE_40__.DropdownByAttribute('data-test-id', dataTestId, container);
    }
    ;
    dropdownByCss(css) {
        return new _widgets_controls_dropdown_dropdownByCss__WEBPACK_IMPORTED_MODULE_41__.DropdownByCss(css);
    }
    ;
    dropdownByLabel(label, container) {
        return new _widgets_controls_dropdown_dropdownByLabel__WEBPACK_IMPORTED_MODULE_42__.DropdownByLabel(label, container);
    }
    ;
    dropdownByXPath(xpath, container) {
        return new _widgets_controls_dropdown_dropdownByXPath__WEBPACK_IMPORTED_MODULE_43__.DropdownByXPath(xpath, container);
    }
    ;
    elementByAttributes(args) {
        return new _widgets_controls_customControl_customControlByAttribute__WEBPACK_IMPORTED_MODULE_22__.CustomControlByAttributes({
            attributeName: args.attributeName,
            attributeValue: args.attributeValue,
            elementType: args.elementType,
            container: args.container
        });
    }
    ;
    elementById(args) {
        return new _widgets_controls_customControl_customControlByAttribute__WEBPACK_IMPORTED_MODULE_22__.CustomControlByAttributes({
            attributeName: 'id',
            attributeValue: args.id,
            elementType: args.elementType,
            container: args.container
        });
    }
    ;
    elementByDataTestId(args) {
        return new _widgets_controls_customControl_customControlByAttribute__WEBPACK_IMPORTED_MODULE_22__.CustomControlByAttributes({
            attributeName: 'data-test-id',
            attributeValue: args.dataTestId,
            elementType: args.elementType,
            container: args.container
        });
    }
    ;
    element(args) {
        return new _widgets_controls_customControl_customControlByAttribute__WEBPACK_IMPORTED_MODULE_22__.CustomControlByAttributes({
            attributeName: 'data-test-id',
            attributeValue: args.dataTestId,
            elementType: args.elementType,
            container: args.container
        });
    }
    ;
    elementByXpath(xpath, container) {
        return new _widgets_controls_customControl_CustomConrolByXPath__WEBPACK_IMPORTED_MODULE_23__.CustomControlByXPath(xpath, container);
    }
    ;
    elementByCss(css) {
        return new _widgets_controls_customControl_CustomControlByCss__WEBPACK_IMPORTED_MODULE_24__.CustomControlByCss(css);
    }
    ;
    image(dataTestId, container) {
        return new _widgets_controls_image__WEBPACK_IMPORTED_MODULE_26__.ImageElement(`data-test-id`, dataTestId, container);
    }
    ;
    imageByTestId(dataTestId, container) {
        return new _widgets_controls_image__WEBPACK_IMPORTED_MODULE_26__.ImageElement(`data-test-id`, dataTestId, container);
    }
    ;
    imageById(id, container) {
        return new _widgets_controls_image__WEBPACK_IMPORTED_MODULE_26__.ImageElement(`id`, id, container);
    }
    ;
    imageBy(attributeName, attributeValue, container) {
        return new _widgets_controls_image__WEBPACK_IMPORTED_MODULE_26__.ImageElement(attributeName, attributeValue, container);
    }
    ;
    imageBySource(src, container) {
        return new _widgets_controls_image__WEBPACK_IMPORTED_MODULE_26__.ImageElement(`src`, src, container);
    }
    ;
    label(dataTestId, container) {
        return new _widgets_controls_label__WEBPACK_IMPORTED_MODULE_48__.Label('data-test-id', dataTestId, container);
    }
    ;
    labelByTestId(dataTestId, container) {
        return new _widgets_controls_label__WEBPACK_IMPORTED_MODULE_48__.Label('data-test-id', dataTestId, container);
    }
    ;
    labelByAttribute(attributeName, attributeValue, container) {
        return new _widgets_controls_label__WEBPACK_IMPORTED_MODULE_48__.Label(attributeName, attributeValue, container);
    }
    ;
    logo() {
        return new _widgets_controls_logo__WEBPACK_IMPORTED_MODULE_27__.Logo();
    }
    ;
    logoBy(attributeName, attributeValue) {
        return new _widgets_controls_logo__WEBPACK_IMPORTED_MODULE_27__.Logo(attributeName, attributeValue);
    }
    ;
    multiselectBy(attributeName, attributeValue, args) {
        return new _widgets_controls_multiSelect__WEBPACK_IMPORTED_MODULE_7__.MultiSelect(attributeName, attributeValue, args);
    }
    ;
    multiselectById(id, args) {
        return new _widgets_controls_multiSelect__WEBPACK_IMPORTED_MODULE_7__.MultiSelect('id', id, args);
    }
    ;
    multiselectByIdDataTestId(dataTestId, args) {
        return new _widgets_controls_multiSelect__WEBPACK_IMPORTED_MODULE_7__.MultiSelect('data-test-id', dataTestId, args);
    }
    ;
    multiselect(dataTestId, args) {
        return new _widgets_controls_multiSelect__WEBPACK_IMPORTED_MODULE_7__.MultiSelect('data-test-id', dataTestId, args);
    }
    ;
    radioButtonByPartialId(partialId, container) {
        return new _widgets_controls_radiobuttons_radiobuttonById__WEBPACK_IMPORTED_MODULE_50__.RadiobuttonById(partialId, container);
    }
    ;
    radioButtonGroupByPartialId(partialId, container) {
        return new _widgets_controls_radiobuttons_radiobuttonById__WEBPACK_IMPORTED_MODULE_50__.RadiobuttonById(partialId, container);
    }
    ;
    radioButtonByAriaLabel(ariaLabel, container) {
        return new _widgets_controls_radiobuttons_radiobuttonByAttribute__WEBPACK_IMPORTED_MODULE_51__.RadiobuttonByAttribute('aria-label', ariaLabel, container);
    }
    ;
    radioButtonGroupByAriaLabel(ariaLabel, container) {
        return new _widgets_controls_radiobuttons_radiobuttonByAttribute__WEBPACK_IMPORTED_MODULE_51__.RadiobuttonByAttribute('aria-label', ariaLabel, container);
    }
    ;
    radioButtonByDataTestId(dataTestId, container) {
        return new _widgets_controls_radiobuttons_radiobuttonByAttribute__WEBPACK_IMPORTED_MODULE_51__.RadiobuttonByAttribute('data-test-id', dataTestId, container);
    }
    ;
    radioButtonGroupByDataTestId(dataTestId, container) {
        return new _widgets_controls_radiobuttons_radiobuttonByAttribute__WEBPACK_IMPORTED_MODULE_51__.RadiobuttonByAttribute('data-test-id', dataTestId, container);
    }
    ;
    radioButton(dataTestId, container) {
        return new _widgets_controls_radiobuttons_radiobuttonByAttribute__WEBPACK_IMPORTED_MODULE_51__.RadiobuttonByAttribute('data-test-id', dataTestId, container);
    }
    ;
    radioButtonGroup(dataTestId, container) {
        return new _widgets_controls_radiobuttons_radiobuttonByAttribute__WEBPACK_IMPORTED_MODULE_51__.RadiobuttonByAttribute('data-test-id', dataTestId, container);
    }
    ;
    readonlyTextInputBy(attributeName, attributeValue, container) {
        return new _widgets_controls_readonlyTextInput__WEBPACK_IMPORTED_MODULE_8__.ReadonlyTextInput(attributeName, attributeValue, container);
    }
    ;
    readonlyTextInputById(id, container) {
        return new _widgets_controls_readonlyTextInput__WEBPACK_IMPORTED_MODULE_8__.ReadonlyTextInput('id', id, container);
    }
    ;
    readonlyTextInputByDataTestId(dataTestId, container) {
        return new _widgets_controls_readonlyTextInput__WEBPACK_IMPORTED_MODULE_8__.ReadonlyTextInput('data-test-id', dataTestId, container);
    }
    ;
    readonlyTextInput(dataTestId, container) {
        return new _widgets_controls_readonlyTextInput__WEBPACK_IMPORTED_MODULE_8__.ReadonlyTextInput('data-test-id', dataTestId, container);
    }
    ;
    tableByTestId(dataTestId, elementType = "div", container) {
        return new _widgets_controls_table_table__WEBPACK_IMPORTED_MODULE_9__.Table('data-test-id', dataTestId, elementType, container);
    }
    ;
    table(dataTestId, elementType = "div", container) {
        return new _widgets_controls_table_table__WEBPACK_IMPORTED_MODULE_9__.Table('data-test-id', dataTestId, elementType, container);
    }
    ;
    tableByTitle(plProp, elementType = "table", container) {
        return new _widgets_controls_table_table__WEBPACK_IMPORTED_MODULE_9__.Table('pl_prop', plProp, elementType, container);
    }
    ;
    tableBy(by, value, elementType, container) {
        return new _widgets_controls_table_table__WEBPACK_IMPORTED_MODULE_9__.Table(by, value, elementType, container);
    }
    ;
    textAreaBy(attributeName, attributeValue, container) {
        return new _widgets_controls_textarea_textAreaByAttribute__WEBPACK_IMPORTED_MODULE_44__.TextAreaByAttribute(attributeName, attributeValue, container);
    }
    ;
    textAreaById(id, container) {
        return new _widgets_controls_textarea_textAreaByAttribute__WEBPACK_IMPORTED_MODULE_44__.TextAreaByAttribute('id', id, container);
    }
    ;
    textAreaByIdDataTestId(dataTestId, container) {
        return new _widgets_controls_textarea_textAreaByAttribute__WEBPACK_IMPORTED_MODULE_44__.TextAreaByAttribute('data-test-id', dataTestId, container);
    }
    ;
    textAreaByDataTestId(dataTestId, container) {
        return new _widgets_controls_textarea_textAreaByAttribute__WEBPACK_IMPORTED_MODULE_44__.TextAreaByAttribute('data-test-id', dataTestId, container);
    }
    ;
    textArea(dataTestId, container) {
        return new _widgets_controls_textarea_textAreaByAttribute__WEBPACK_IMPORTED_MODULE_44__.TextAreaByAttribute('data-test-id', dataTestId, container);
    }
    ;
    textAreaByCss(css) {
        return new _widgets_controls_textarea_textAreaByCss__WEBPACK_IMPORTED_MODULE_45__.TextAreaByCss(css);
    }
    ;
    textAreaByLabel(label, container) {
        return new _widgets_controls_textarea_textAreaByLabel__WEBPACK_IMPORTED_MODULE_46__.TextAreaByLabel(label, container);
    }
    ;
    textAreaByXpath(xpath, container) {
        return new _widgets_controls_textarea_textAreaByXPath__WEBPACK_IMPORTED_MODULE_47__.TextAreaByXPath(xpath, container);
    }
    ;
    textInputBy(attributeName, attributeValue, container) {
        return new _widgets_controls_textInput_textInputByAttribute__WEBPACK_IMPORTED_MODULE_32__.TextInputByAttribute(attributeName, attributeValue, container);
    }
    ;
    textInputById(id, container) {
        return new _widgets_controls_textInput_textInputByAttribute__WEBPACK_IMPORTED_MODULE_32__.TextInputByAttribute('id', id, container);
    }
    ;
    textInputByDataTestId(dataTestId, container) {
        return new _widgets_controls_textInput_textInputByAttribute__WEBPACK_IMPORTED_MODULE_32__.TextInputByAttribute('data-test-id', dataTestId, container);
    }
    ;
    textInput(dataTestId, container) {
        return new _widgets_controls_textInput_textInputByAttribute__WEBPACK_IMPORTED_MODULE_32__.TextInputByAttribute('data-test-id', dataTestId, container);
    }
    ;
    textInputByLabel(label, container) {
        return new _widgets_controls_textInput_textInputByLabel__WEBPACK_IMPORTED_MODULE_33__.TextInputByLabel(label, container);
    }
    ;
    textInputByXPath(xpath, container) {
        return new _widgets_controls_textInput_textInputByXPath__WEBPACK_IMPORTED_MODULE_34__.TextInputByXPath(xpath, container);
    }
    ;
    textInputByXpath(xpath, container) {
        return new _widgets_controls_textInput_textInputByXPath__WEBPACK_IMPORTED_MODULE_34__.TextInputByXPath(xpath, container);
    }
    ;
    textInputByCss(css) {
        return new _widgets_controls_textInput_textInputByCss__WEBPACK_IMPORTED_MODULE_35__.TextInputByCss(css);
    }
    ;
    toDoList(args) {
        return new _widgets_toDoList__WEBPACK_IMPORTED_MODULE_52__.ToDoList(args);
    }
}
const pega = new Pega();


/***/ }),

/***/ "./src/widgets/actionsButton.ts":
/*!**************************************!*\
  !*** ./src/widgets/actionsButton.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ActionsMenu": () => (/* binding */ ActionsMenu)
/* harmony export */ });
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! test-maker */ "test-maker");
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(test_maker__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../helpers/options/methodOptions */ "./helpers/options/methodOptions.ts");
// Copyright 2019 Knowledge Expert SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


class ActionsMenu {
    constructor(buttonSelector) {
        //private readonly button: string = '//button[contains(@title, "ctions")]';
        //private readonly buttonOnTheLastScreen: Selector = Selector('//button[contains(@data-test-id, "2014100911285001362285")]');
        this.menuItems = '//ul[contains(@id, "pyNavigation")]//span[@class="menu-item-title"]';
        this.buttonSelector = buttonSelector;
    }
    async waitForActionsMenuButtonToBeVisible(options) {
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.waitForSelectorToBeVisible((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.buttonSelector, options));
    }
    async waitForActionsMenuButtonToBeEnabled() {
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.waitForSelectActionabilityCheck((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.buttonSelector), ["stable", "visible", "enabled"]);
    }
    async selectOption(menuItem, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await this.open(this.actualOptions);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.hover((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.menuItems, this.actualOptions).filterVisible().withExactText(menuItem)).click((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.menuItems, this.actualOptions).filterVisible().withExactText(menuItem));
    }
    //await I.waitForSelectorToBeInvisible(Selector(this.menuItems, options));
    async refresh(menuItem = `Refresh`, options) {
        await this.selectOption(menuItem, options);
    }
    async open(options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await this.waitForActionsMenuButtonToBeVisible(this.actualOptions);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.waitForCondition({
            condition: async () => {
                await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.hover((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.buttonSelector, this.actualOptions)).click((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.buttonSelector, this.actualOptions));
                return await (0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.menuItems).visible;
            },
            interval: this.actualOptions.interval,
            timeout: this.actualOptions.timeout,
            retryMessage: `Waiting for the Actions menu to be opened`,
        });
    }
    async close(options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await this.waitForActionsMenuButtonToBeVisible(this.actualOptions);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.pressKey('Escape');
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.waitForSelectorToBeInvisible((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.menuItems, this.actualOptions));
    }
    // async selectOptionOnTheLastScreen(menuItem: string) {
    //     await I.wait(4000)
    //         .click(this.buttonOnTheLastScreen)
    //         .wait(4000)
    //         .hover((this.menuItems).withExactText(menuItem))
    //         .click((this.menuItems).withExactText(menuItem));
    // }
    async assertMenuItemSize(size, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await this.waitForActionsMenuButtonToBeVisible(options);
        await this.open(this.actualOptions);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.menuItems, this.actualOptions).count, {
            timeout: options.assertionTimeout,
            interval: options.interval,
            retries: options.retries,
        }).toBeSameAs(size);
    }
    async isMenuItemVisible(menuItem, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        const buttonIsVisible = await (0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.buttonSelector, this.actualOptions).exists && await (0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.buttonSelector, this.actualOptions).visible;
        if (buttonIsVisible) {
            await this.open(options);
            const menuItemIsVisible = await (0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.menuItems, options).withExactText(menuItem).filterVisible()
                .visible;
            await this.close(this.actualOptions);
            return menuItemIsVisible;
        }
        else {
            return false;
        }
    }
    async assertMenuItemIsVisible(menuItem, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.waitForSelectorToBeVisible(this.buttonSelector);
        await this.open(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.menuItems, this.actualOptions).withExactText(menuItem).filterVisible().visible).toBeTrue();
        await this.close(this.actualOptions);
    }
    async assertMenuItemIsNotVisible(menuItem, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.waitForSelectorToBeVisible(this.buttonSelector);
        await this.open(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.menuItems, this.actualOptions).filterVisible().withExactText(menuItem).visible, {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries,
        }).not.toBeOk();
        await this.close(this.actualOptions);
    }
    async assertMenuItemDoesNotExist(menuItem, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.waitForSelectorToBeVisible(this.buttonSelector);
        await this.open(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.menuItems, this.actualOptions).filterVisible().withExactText(menuItem).exists, {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries,
        }).not.toBeTrue();
        await this.close(this.actualOptions);
    }
}


/***/ }),

/***/ "./src/widgets/alerts.ts":
/*!*******************************!*\
  !*** ./src/widgets/alerts.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Alerts": () => (/* binding */ Alerts)
/* harmony export */ });
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! test-maker */ "test-maker");
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(test_maker__WEBPACK_IMPORTED_MODULE_0__);
// Copyright 2019 Knowledge Expert SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

class Alerts {
    async accept(disposeAfterHandling) {
        let actualDisposeAfterHandling;
        disposeAfterHandling ? actualDisposeAfterHandling = disposeAfterHandling : actualDisposeAfterHandling = false;
        try {
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.handleNativeDialog((alert) => true, { disposeAfterHandling: actualDisposeAfterHandling });
        }
        catch (error) {
            console.log(`Can\`t accept the alert, an error ${error}`);
        }
    }
}


/***/ }),

/***/ "./src/widgets/assignmentTitle.ts":
/*!****************************************!*\
  !*** ./src/widgets/assignmentTitle.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AssignmentTitle": () => (/* binding */ AssignmentTitle)
/* harmony export */ });
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! test-maker */ "test-maker");
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(test_maker__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../helpers/options/methodOptions */ "./helpers/options/methodOptions.ts");
/* harmony import */ var _controls_controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./controls/controlsCommonActions */ "./src/widgets/controls/controlsCommonActions.ts");



class AssignmentTitle {
    constructor() {
        this.element = '.heading_2';
    }
    async shouldHaveText(text, options) {
        let actualOptions;
        actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.waitForSelectorToExist((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)('.heading_2', actualOptions));
        if (actualOptions.isCaseSensitive == false) {
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect(async () => {
                return ((await (0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)('.heading_2', actualOptions).filterVisible().innerText).toLowerCase());
            }, {
                timeout: actualOptions.assertionTimeout,
                interval: actualOptions.interval,
                retries: actualOptions.retries
            }).toEqual(text.toLowerCase());
        }
        else {
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.element, actualOptions).innerText, {
                timeout: actualOptions.assertionTimeout,
                interval: actualOptions.interval,
                retries: actualOptions.retries
            }).toEqual(text);
        }
    }
    async getText() {
        await _controls_controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.getText(this.element);
    }
}


/***/ }),

/***/ "./src/widgets/case.ts":
/*!*****************************!*\
  !*** ./src/widgets/case.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Case": () => (/* binding */ Case)
/* harmony export */ });
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! test-maker */ "test-maker");
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(test_maker__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../helpers/options/methodOptions */ "./helpers/options/methodOptions.ts");
/* harmony import */ var _pega__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../pega */ "./src/pega.ts");
/* harmony import */ var _helpers_pegaVersion__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../helpers/pegaVersion */ "./helpers/pegaVersion.ts");
// Copyright 2019 Knowledge Expert SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.





class Case {
    constructor() {
        this.caseId = '';
    }
    pegaVersion() {
        _helpers_pegaVersion__WEBPACK_IMPORTED_MODULE_3__.pegaVersion.setVersion();
        return _helpers_pegaVersion__WEBPACK_IMPORTED_MODULE_3__.pegaVersion.getVersion();
    }
    static create() {
        if (!this.object) {
            this.object = new Case();
        }
        return this.object;
    }
    caseIdElement() {
        let currentVersion = +this.pegaVersion();
        return currentVersion < 850 ? '[class="workarea_header_id"]' : 'span[data-test-id="20190510022618055338234"]';
    }
    async getId() {
        await _helpers_pegaVersion__WEBPACK_IMPORTED_MODULE_3__.pegaVersion.setVersion();
        let actualElement = this.caseIdElement();
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(actualElement).exists).toBeOk();
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(actualElement).visible).toBeOk();
        this.caseId = await (0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(actualElement).innerText;
        if (this.pegaVersion() < 850) {
            this.caseId = this.caseId.substring(1, this.caseId.length - 1);
        }
        return this.caseId;
    }
    async assertCaseId(caseId, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.caseIdElement(), this.actualOptions).innerText, {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        }).toContain(caseId);
    }
    async consoleLogId() {
        await this.getId();
        let caseId = this.caseId;
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.logger.log(caseId);
    }
    async findAndOpenCase(caseNumber, isIframeAvailable, timeToHardWait = 1, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.waitForSelectorToBeVisible((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(`[data-test-id="2015030515570700545405"]`, this.actualOptions));
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.fillField((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)('[data-test-id="2015030515570700545405"]', this.actualOptions), caseNumber);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.pressEnterKey();
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.wait(timeToHardWait);
        if (isIframeAvailable) {
            await _pega__WEBPACK_IMPORTED_MODULE_2__.pega.frame.switchToWorkAreaIframe(timeToHardWait);
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.wait(timeToHardWait);
        }
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.click('[data-test-id="201609091025020567152987"]')
            .wait(timeToHardWait);
        if (isIframeAvailable) {
            await _pega__WEBPACK_IMPORTED_MODULE_2__.pega.frame.switchToWorkAreaIframe(timeToHardWait);
        }
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.click((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)('[data-test-id="20161017110917023176385"]', this.actualOptions));
    }
    async shouldHaveName(caseName, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        let titleElement;
        await _helpers_pegaVersion__WEBPACK_IMPORTED_MODULE_3__.pegaVersion.setVersion();
        this.pegaVersion() < 850 ? titleElement = '[class="workarea_header_titles"]' : '//div[@data-test-id="201806191352120508640_header"]//div[@class="header-content"]/h1[@class="header-title"]';
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(titleElement, this.actualOptions).innerText, {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        }).toEqual(caseName);
    }
}


/***/ }),

/***/ "./src/widgets/caseWorkerMenu.ts":
/*!***************************************!*\
  !*** ./src/widgets/caseWorkerMenu.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CaseWorkerMenu": () => (/* binding */ CaseWorkerMenu)
/* harmony export */ });
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! test-maker */ "test-maker");
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(test_maker__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../helpers/options/methodOptions */ "./helpers/options/methodOptions.ts");
/* harmony import */ var _pega__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../pega */ "./src/pega.ts");
// Copyright 2019 Knowledge Expert SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.



class CaseWorkerMenu {
    constructor() {
        this.NORMALIZE_SPACE_XPATH = "normalize-space(translate(string(.), '\t\n\r\u00a0', '    '))";
        this.element = '#appview-nav-toggle-one';
        this.searchFieldElement = 'i[data-test-id="2018081314444308025608"]';
        this.plusIconElement = '[class="menu-item-icon-imageclass pi pi-plus"]';
    }
    async open(options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.click((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.element, this.actualOptions));
    }
    async focus(text, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.focus((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(".menu-item-title-wrap", this.actualOptions).withText(text));
    }
    async close(options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        if (await (0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)('#screen-layout-mask', this.actualOptions).visible) {
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.click((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)('#screen-layout-mask', this.actualOptions));
        }
    }
    async shouldBeVisible(options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.element, this.actualOptions).visible, {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        }).toBeOk();
    }
    async shouldExist(options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.element, this.actualOptions).exists, {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        }).toBeOk();
    }
    async expandLeftPanelMenu(expectedMenuItem = "Create") {
        await _pega__WEBPACK_IMPORTED_MODULE_2__.pega.elementByCss(this.plusIconElement).hover();
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.waitForSelectorToExist((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(".menu-item-title-wrap").withText(expectedMenuItem));
    }
    async createNewCase(caseName, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.resizeWindow(1600, 900);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.waitForSelectorToExist((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.plusIconElement, this.actualOptions));
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.waitForSelectActionabilityCheck((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.plusIconElement), [`attached`, 'stable']);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.click((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.plusIconElement, this.actualOptions))
            .click((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(`//*[@class="menu-item-title-wrap"]//span[text()="${caseName}"]`, this.actualOptions).filterVisible());
    }
    async createNewCaseWithNameContaining(caseName, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.click((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.plusIconElement, this.actualOptions))
            .click((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(`//*[@class="menu-item-title-wrap"]//span[contains(normalize-space(.), "${caseName}")]`, this.actualOptions)
            .filterVisible());
    }
    async selectItem(item, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.waitForSelectorToExist((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.plusIconElement, this.actualOptions));
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.waitForSelectActionabilityCheck((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.plusIconElement), [`attached`, 'stable']);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.click((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.plusIconElement, this.actualOptions));
        await _pega__WEBPACK_IMPORTED_MODULE_2__.pega.menu().select(item);
    }
    async search(value, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.waitForSelectorToExist((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.searchFieldElement, this.actualOptions))
            .waitForSelectActionabilityCheck((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.searchFieldElement), [`attached`, 'stable'])
            .hover((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.searchFieldElement))
            .click((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.searchFieldElement))
            .fillField(this.searchFieldElement, value)
            .pressEnterKey();
    }
}


/***/ }),

/***/ "./src/widgets/controls/anyPicker.ts":
/*!*******************************************!*\
  !*** ./src/widgets/controls/anyPicker.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AnyPicker": () => (/* binding */ AnyPicker)
/* harmony export */ });
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! test-maker */ "test-maker");
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(test_maker__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./controlsCommonActions */ "./src/widgets/controls/controlsCommonActions.ts");
// Copyright 2021 Knowledge Expert SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


class AnyPicker {
    constructor(attributeName, attributeValue, container = '') {
        this.resultsList = `.anypicker-results`;
        this.selectedItem = `span[data-ctl='["Anypicker"]']`;
        this.container = container;
        this.attributeName = attributeName;
        this.attributeValue = attributeValue;
        if (this.attributeName === 'data-test-id') {
            this.element = `${container}//div[@${this.attributeName}="${this.attributeValue}"]`;
        }
        if (this.attributeName === 'id') {
            this.element = `${container}//input[@${this.attributeName}="${this.attributeValue}"]/parent::div[@class="anypicker"]`;
        }
    }
    async click(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__.controlsCommonActions.click(this.element, options);
    }
    async focus(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__.controlsCommonActions.focus(this.element, options);
    }
    async pressTab() {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__.controlsCommonActions.pressTab();
    }
    async shouldBeVisible(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__.controlsCommonActions.shouldBeVisible(this.element, options);
    }
    async shouldNotBeVisible(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__.controlsCommonActions.shouldNotBeVisible(this.element, options);
    }
    async shouldExist(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__.controlsCommonActions.shouldExist(this.element, options);
    }
    async shouldNotExist(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__.controlsCommonActions.shouldNotExist(this.element, options);
    }
    async resultsListShouldBeVisible() {
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expectSelector(this.resultsList).toBeVisible();
    }
    async resultsListShouldNotBeVisible() {
        if (await (0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.resultsList).exists) {
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expectSelector(this.resultsList).not.toBeVisible();
        }
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expectSelector(this.resultsList).not.toExist();
    }
    async openList() {
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.click((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.element).find(`//i[@class="pi pi-caret-down"]`));
    }
    async selectValue(value) {
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.click((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.resultsList).find(`li span`).withExactText(value));
    }
    async shouldHaveValue(value) {
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expectSelector((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.element).find(`input[data-ctl='["Anypicker"]']`)).toHaveValue(value);
    }
    async shouldNotHaveValue(value) {
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expectSelector((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.element).find(`input[data-ctl='["Anypicker"]']`)).not.toHaveValue(value);
    }
    async deleteSelectedResult(value) {
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.hover((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.element).find(this.selectedItem).withExactText(`TestAppl:User4`))
            .click((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.element).find(this.selectedItem).find(`.ap-clear`));
    }
}


/***/ }),

/***/ "./src/widgets/controls/autocompletionField/autocompletionByAttribute.ts":
/*!*******************************************************************************!*\
  !*** ./src/widgets/controls/autocompletionField/autocompletionByAttribute.ts ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AutocompletionByAttribute": () => (/* binding */ AutocompletionByAttribute),
/* harmony export */   "autocompletionFieldByAttribute": () => (/* binding */ autocompletionFieldByAttribute)
/* harmony export */ });
/* harmony import */ var _autocompletionCommon__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./autocompletionCommon */ "./src/widgets/controls/autocompletionField/autocompletionCommon.ts");
// Copyright 2020 Knowledge Expert SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

class AutocompletionByAttribute extends _autocompletionCommon__WEBPACK_IMPORTED_MODULE_0__.AutocompletionCommon {
    constructor(attributeName, attributeValue, container = '') {
        super(`${container}//input[@data-ctl='["AutoCompleteAG"]' and contains (@${attributeName}, "${attributeValue}")]`);
    }
}
function autocompletionFieldByAttribute(attributeName, attributeValue, container) {
    return new AutocompletionByAttribute(attributeName, attributeValue, container);
}


/***/ }),

/***/ "./src/widgets/controls/autocompletionField/autocompletionByCss.ts":
/*!*************************************************************************!*\
  !*** ./src/widgets/controls/autocompletionField/autocompletionByCss.ts ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AutocompletionByCss": () => (/* binding */ AutocompletionByCss),
/* harmony export */   "autocompletionFieldByCss": () => (/* binding */ autocompletionFieldByCss)
/* harmony export */ });
/* harmony import */ var _autocompletionCommon__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./autocompletionCommon */ "./src/widgets/controls/autocompletionField/autocompletionCommon.ts");
// Copyright 2020 Knowledge Expert SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

class AutocompletionByCss extends _autocompletionCommon__WEBPACK_IMPORTED_MODULE_0__.AutocompletionCommon {
    constructor(css) {
        super(`${css}`);
    }
}
function autocompletionFieldByCss(css) {
    return new AutocompletionByCss(css);
}


/***/ }),

/***/ "./src/widgets/controls/autocompletionField/autocompletionByLabel.ts":
/*!***************************************************************************!*\
  !*** ./src/widgets/controls/autocompletionField/autocompletionByLabel.ts ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AutocompletionByLabel": () => (/* binding */ AutocompletionByLabel),
/* harmony export */   "autocompletionFieldByLabel": () => (/* binding */ autocompletionFieldByLabel)
/* harmony export */ });
/* harmony import */ var _autocompletionCommon__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./autocompletionCommon */ "./src/widgets/controls/autocompletionField/autocompletionCommon.ts");
// Copyright 2020 Knowledge Expert SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

class AutocompletionByLabel extends _autocompletionCommon__WEBPACK_IMPORTED_MODULE_0__.AutocompletionCommon {
    constructor(label, container = '') {
        super(`${container}//label[contains(text(), "${label}") and not(contains(@for, "${label}"))]/following-sibling::div/input[@data-ctl='["AutoCompleteAG"]']`);
    }
}
function autocompletionFieldByLabel(xpath, container) {
    return new AutocompletionByLabel(xpath, container);
}


/***/ }),

/***/ "./src/widgets/controls/autocompletionField/autocompletionByXPath.ts":
/*!***************************************************************************!*\
  !*** ./src/widgets/controls/autocompletionField/autocompletionByXPath.ts ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AutocompletionByXPath": () => (/* binding */ AutocompletionByXPath),
/* harmony export */   "autocompletionFieldByXPath": () => (/* binding */ autocompletionFieldByXPath)
/* harmony export */ });
/* harmony import */ var _autocompletionCommon__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./autocompletionCommon */ "./src/widgets/controls/autocompletionField/autocompletionCommon.ts");
// Copyright 2020 Knowledge Expert SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

class AutocompletionByXPath extends _autocompletionCommon__WEBPACK_IMPORTED_MODULE_0__.AutocompletionCommon {
    constructor(xpath, container = '') {
        super(`${container}${xpath}`);
    }
}
function autocompletionFieldByXPath(xpath, container) {
    return new AutocompletionByXPath(xpath, container);
}


/***/ }),

/***/ "./src/widgets/controls/autocompletionField/autocompletionCommon.ts":
/*!**************************************************************************!*\
  !*** ./src/widgets/controls/autocompletionField/autocompletionCommon.ts ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AutocompletionCommon": () => (/* binding */ AutocompletionCommon)
/* harmony export */ });
/* harmony import */ var _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../controlsCommonActions */ "./src/widgets/controls/controlsCommonActions.ts");
/* harmony import */ var _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../helpers/options/methodOptions */ "./helpers/options/methodOptions.ts");
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! test-maker */ "test-maker");
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(test_maker__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _pega_error_messages_pegaErrorMessages__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../pega-error-messages/pegaErrorMessages */ "./src/widgets/controls/pega-error-messages/pegaErrorMessages.ts");
// Copyright 2020 Knowledge Expert SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.




class AutocompletionCommon {
    constructor(element) {
        this.element = element;
    }
    async waitUntilVisibility(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilVisibility(this.element, options);
    }
    async waitUntilVisibilityByText(text, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilVisibilityByText(this.element, text, options);
    }
    async waitUntilVisibilityByAttribute(attributeName, attributeValue, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilVisibilityByAttribute(this.element, attributeName, attributeValue, options);
    }
    async waitUntilVisibilityByIndex(index, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilVisibilityByIndex(this.element, index, options);
    }
    async waitUntilCollectionOfElementsSizeIsGreaterOrEqual(expectedSize, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilCollectionOfElementsSizeIsGreaterOrEqual(this.element, expectedSize, options);
    }
    async waitUntilCollectionOfElementsSizeIsLessThan(expectedSize, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilCollectionOfElementsSizeIsLessThan(this.element, expectedSize, options);
    }
    async waitUntilInvisibility(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilInvisibility(this.element, options);
    }
    async waitUntilInvisibilityByIndex(index, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilInvisibilityByIndex(this.element, index, options);
    }
    async waitUntilElementExists(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilElementExists(this.element, options);
    }
    async waitUntilElementNotExist(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilElementNotExist(this.element, options);
    }
    async waitForSelectActionabilityCheck(checks, isFilterByVisibility = true) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitForSelectActionabilityCheck(this.element, checks, isFilterByVisibility = true);
    }
    async shouldExist(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldExist(this.element, options);
    }
    async shouldNotExist(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldNotExist(this.element, options);
    }
    async click(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.click(this.element, options);
    }
    async focus(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.focus(this.element, options);
    }
    async pressTab() {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.pressTab();
    }
    async filterAndSelect(filter, text, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        if (filter === undefined) {
            return;
        }
        if (!text) {
            text = filter;
        }
        const autocompletionItemByText = (0,test_maker__WEBPACK_IMPORTED_MODULE_2__.Selector)(`.autocomplete-results .ac-item .match`, { timeout: this.actualOptions.timeout }).withExactText(`${text}`)
            .filterVisible();
        await test_maker__WEBPACK_IMPORTED_MODULE_2__.I.fillField(this.element, filter)
            .wait(1000)
            .waitForSelectorToExist(autocompletionItemByText)
            .waitForSelectActionabilityCheck(autocompletionItemByText, ['attached'])
            .click(autocompletionItemByText);
    }
    async filter(filter, options) {
        if (filter === undefined || filter === null) {
            throw `Selected value must no be empty, but got ${filter}`;
        }
        await this.shouldExist(options);
        await this.click(options);
        let truncatedValue;
        typeof filter !== 'string' ? truncatedValue = filter[0] : truncatedValue = filter;
        if (truncatedValue.length >= 3) {
            truncatedValue = truncatedValue.substring(0, truncatedValue.length - 1);
        }
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.set(this.element, truncatedValue, options);
    }
    async filterCharacterByCharacter(filter, intervalBetweenCharacters, options) {
        if (filter === undefined || filter === null) {
            throw `Selected value must no be empty, but got ${filter}`;
        }
        if (!intervalBetweenCharacters) {
            intervalBetweenCharacters = 1000;
        }
        await this.shouldExist(options);
        await this.click(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_2__.I.wait(500);
        let i = filter.length;
        while (i > 0) {
            await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.appendValue(this.element, filter.substring(filter.length - i, filter.length - (i - 1)), options);
            await test_maker__WEBPACK_IMPORTED_MODULE_2__.I.wait(intervalBetweenCharacters);
            i = i - 1;
        }
        await test_maker__WEBPACK_IMPORTED_MODULE_2__.I.pressArrowDownKey();
    }
    async select(text, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        const autocompletionItemByText = (0,test_maker__WEBPACK_IMPORTED_MODULE_2__.Selector)(`.autocomplete-results .ac-item .match`, { timeout: this.actualOptions.timeout }).withExactText(`${text}`)
            .filterVisible();
        await test_maker__WEBPACK_IMPORTED_MODULE_2__.I.waitForSelectActionabilityCheck(autocompletionItemByText, ['attached'])
            .hover(autocompletionItemByText)
            .click(autocompletionItemByText);
    }
    async selectByIndex(index, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_2__.I.waitForSelectActionabilityCheck((0,test_maker__WEBPACK_IMPORTED_MODULE_2__.Selector)(`.autocomplete-results .ac-item .match`, this.actualOptions).nth(index), ['attached'])
            .click((0,test_maker__WEBPACK_IMPORTED_MODULE_2__.Selector)(`.autocomplete-results .ac-item .match`, this.actualOptions).nth(index));
    }
    // async selectResultFromExternalSource(plPropName: string, text: string, options?: { timeout?: number, interval?: number, retries?: number }) {
    //     this.actualOptions = methodOptions.setOptions(options);
    //     let elementSelector = `//table[contains (@pl_prop, "${plPropName}")]//tr[contains (@data-gargs, "${text}")]//td//span[contains(@class, "match-highlight")]`;
    //     await I.waitForSelectorToExist(elementSelector)
    //         .waitForSelectActionabilityCheck(Selector(elementSelector), ['attached'])
    //         .click(Selector(elementSelector, this.actualOptions));
    //     await this.shouldHaveValue(text);
    // }
    async getElementToSelect(plPropName, texts) {
        let tableSelector = `//table[contains (@pl_prop, "${plPropName}")]`;
        let rowSelector = `//tr[@data-gargs]`;
        let collectionSelector = `${tableSelector}${rowSelector}`;
        let hasAllItems = true;
        let counter = 0;
        await test_maker__WEBPACK_IMPORTED_MODULE_2__.I.waitForSelectorToExist(collectionSelector);
        await test_maker__WEBPACK_IMPORTED_MODULE_2__.I.waitForSelectorToBeVisible(collectionSelector);
        let collectionCount = await (0,test_maker__WEBPACK_IMPORTED_MODULE_2__.Selector)(collectionSelector).count;
        for (let j = 0; j < collectionCount; j++) {
            hasAllItems = true;
            let value = await (0,test_maker__WEBPACK_IMPORTED_MODULE_2__.Selector)(collectionSelector).nth(j).getAttribute(`data-gargs`);
            //console.log(value);
            if (typeof texts === 'string') {
                if (value.indexOf(texts) === -1) {
                    hasAllItems = false;
                }
                if (hasAllItems) {
                    counter = j;
                    break;
                }
            }
            else {
                for (let i = 0; i < texts.length; i++) {
                    hasAllItems = true;
                    if (value.indexOf(texts[i]) === -1) {
                        hasAllItems = false;
                        break;
                    }
                }
                if (hasAllItems) {
                    counter = j;
                    break;
                }
            }
        }
        if (hasAllItems) {
            this.elementToSelect = `${tableSelector}${rowSelector}[${counter + 1}]//td//span[contains(@class, "match-highlight")]`;
        }
        if (!hasAllItems) {
            throw new Error(`There is no result for the given text ${texts}`);
        }
        return this.elementToSelect;
    }
    async selectResultFromExternalSource(plPropName, texts, expectedValueAfterSelection, options) {
        if (!texts) {
            throw Error(`Expecting at least 1 entry, but got ${texts}`);
        }
        if (!expectedValueAfterSelection) {
            typeof texts !== 'string' ? expectedValueAfterSelection = texts[0] : expectedValueAfterSelection = texts;
        }
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        let elementSelector = await this.getElementToSelect(plPropName, texts);
        await test_maker__WEBPACK_IMPORTED_MODULE_2__.I.waitForSelectorToExist(elementSelector)
            .waitForSelectorToBeVisible(elementSelector)
            .hover(elementSelector)
            .click((0,test_maker__WEBPACK_IMPORTED_MODULE_2__.Selector)(elementSelector, this.actualOptions));
        await this.shouldHaveValue(expectedValueAfterSelection);
    }
    async selectResultFromExternalSourceByJsClick(plPropName, texts, expectedValueAfterSelection, options) {
        if (!texts) {
            throw Error(`Expecting at least 1 entry, but got ${texts}`);
        }
        if (!expectedValueAfterSelection) {
            // @ts-ignore
            typeof texts !== 'string' ? expectedValueAfterSelection = texts[0] : expectedValueAfterSelection = texts;
        }
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        let elementSelector = await this.getElementToSelect(plPropName, texts);
        await test_maker__WEBPACK_IMPORTED_MODULE_2__.I.waitForSelectorToExist(elementSelector)
            .waitForSelectorToBeVisible(elementSelector);
        await test_maker__WEBPACK_IMPORTED_MODULE_2__.I.eval(({ item }) => {
            item.click();
        }, { item: (0,test_maker__WEBPACK_IMPORTED_MODULE_2__.Selector)(`${elementSelector}`) });
        await this.shouldHaveValue(expectedValueAfterSelection);
    }
    async selectResultFromExternalSourceByJsClickWithRetries(plPropName, texts, expectedValueAfterSelection, options) {
        if (!texts) {
            throw Error(`Expecting at least 1 entry, but got ${texts}`);
        }
        if (!expectedValueAfterSelection) {
            typeof texts !== 'string' ? expectedValueAfterSelection = texts[0] : expectedValueAfterSelection = texts;
        }
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        let elementSelector = await this.getElementToSelect(plPropName, texts);
        await test_maker__WEBPACK_IMPORTED_MODULE_2__.I.waitForCondition({
            condition: async () => {
                if (await (0,test_maker__WEBPACK_IMPORTED_MODULE_2__.Selector)(elementSelector).exists && await (0,test_maker__WEBPACK_IMPORTED_MODULE_2__.Selector)(elementSelector).visible) {
                    await test_maker__WEBPACK_IMPORTED_MODULE_2__.I.eval(({ item }) => {
                        item.click();
                    }, { item: (0,test_maker__WEBPACK_IMPORTED_MODULE_2__.Selector)(`${elementSelector}`) });
                }
                return await (0,test_maker__WEBPACK_IMPORTED_MODULE_2__.Selector)(this.element).value === expectedValueAfterSelection;
            },
            interval: this.actualOptions.interval,
            timeout: this.actualOptions.timeout,
            retryMessage: `Waiting for the autocomplete item to be selected`,
        });
    }
    async selectResultFromExternalSourceWithRetries(plPropName, texts, expectedValueAfterSelection, options) {
        if (!texts) {
            throw Error(`Expecting at least 1 entry, but got ${texts}`);
        }
        if (!expectedValueAfterSelection) {
            typeof texts !== 'string' ? expectedValueAfterSelection = texts[0] : expectedValueAfterSelection = texts;
        }
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        let elementSelector = await this.getElementToSelect(plPropName, texts);
        await test_maker__WEBPACK_IMPORTED_MODULE_2__.I.waitForCondition({
            condition: async () => {
                if (await (0,test_maker__WEBPACK_IMPORTED_MODULE_2__.Selector)(elementSelector).exists && await (0,test_maker__WEBPACK_IMPORTED_MODULE_2__.Selector)(elementSelector).visible) {
                    await test_maker__WEBPACK_IMPORTED_MODULE_2__.I.hover(elementSelector)
                        .click(elementSelector);
                }
                return await (0,test_maker__WEBPACK_IMPORTED_MODULE_2__.Selector)(this.element).value === expectedValueAfterSelection;
            },
            interval: this.actualOptions.interval,
            timeout: this.actualOptions.timeout,
            retryMessage: `Waiting for the autocomplete item to be selected`,
        });
    }
    async filterAndSelectResultsFromExternalSource(plPropName, filterValue, expectedValueAfterSelection, options) {
        if (!expectedValueAfterSelection) {
            typeof filterValue !== 'string' ? expectedValueAfterSelection = filterValue[0] : expectedValueAfterSelection = filterValue;
        }
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await this.filter(filterValue);
        await this.selectResultFromExternalSource(plPropName, filterValue, expectedValueAfterSelection, options);
    }
    async filterAndSelectResultsFromExternalSourceWithRetries(plPropName, filterValue, expectedValueAfterSelection, options) {
        if (!expectedValueAfterSelection) {
            typeof filterValue !== 'string' ? expectedValueAfterSelection = filterValue[0] : expectedValueAfterSelection = filterValue;
        }
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await this.filter(filterValue);
        await this.selectResultFromExternalSourceWithRetries(plPropName, filterValue, expectedValueAfterSelection, options);
    }
    async filterAndSelectResultsFromExternalSourceByJsClick(plPropName, filterValue, expectedValueAfterSelection, options) {
        if (!expectedValueAfterSelection) {
            typeof filterValue !== 'string' ? expectedValueAfterSelection = filterValue[0] : expectedValueAfterSelection = filterValue;
        }
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await this.filter(filterValue);
        await this.selectResultFromExternalSourceByJsClick(plPropName, filterValue, expectedValueAfterSelection, options);
    }
    async filterAndSelectResultsFromExternalSourceByJsClickWithRetries(plPropName, filterValue, expectedValueAfterSelection, options) {
        if (!expectedValueAfterSelection) {
            typeof filterValue !== 'string' ? expectedValueAfterSelection = filterValue[0] : expectedValueAfterSelection = filterValue;
        }
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await this.filter(filterValue);
        await this.selectResultFromExternalSourceByJsClickWithRetries(plPropName, filterValue, expectedValueAfterSelection, options);
    }
    // async filterAndSelectResultsWithComponents(plPropName: string, filterValue: string, texts: string[], options?: { timeout?: number, interval?: number, retries?: number }) {
    //     this.actualOptions = methodOptions.setOptions(options);
    //     await this.filter(filterValue);
    //     await this.selectResultFromExternalSource(plPropName, texts, expectedValueAfterSelection, options);
    // }
    async assertSuggestedResultsFromExternalSourceAre(plPropName, texts, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await this.openList();
        for (let i = 0; i < texts.length; i++) {
            await test_maker__WEBPACK_IMPORTED_MODULE_2__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_2__.Selector)(`//table[contains (@pl_prop, "${plPropName}")]//tr[contains (@data-gargs, "${texts[i]}")]`, this.actualOptions).exists, {
                timeout: this.actualOptions.assertionTimeout,
                interval: this.actualOptions.interval,
                retries: this.actualOptions.retries
            }).toBeOk();
        }
        await this.closeList();
    }
    async assertSuggestedResultsFromExternalSourceAreNotVisible(plPropName, texts, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await this.openList();
        for (let i = 0; i < texts.length; i++) {
            await test_maker__WEBPACK_IMPORTED_MODULE_2__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_2__.Selector)(`//table[contains (@pl_prop, "${plPropName}")]//tr[contains (@data-gargs, "${texts[i]}")]`, this.actualOptions)
                .exists, {
                timeout: this.actualOptions.assertionTimeout,
                interval: this.actualOptions.interval,
                retries: this.actualOptions.retries
            }).not.toBeOk();
        }
        await this.closeList();
    }
    async openList(options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_2__.I.click((0,test_maker__WEBPACK_IMPORTED_MODULE_2__.Selector)(this.element, this.actualOptions)
            .filterVisible())
            .pressArrowDownKey();
    }
    async closeList(options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_2__.I.click((0,test_maker__WEBPACK_IMPORTED_MODULE_2__.Selector)(this.element, this.actualOptions)
            .filterVisible());
    }
    async assertResultFromExternalSourceIsVisible(plPropName, text, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_2__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_2__.Selector)(`//table[contains (@pl_prop, "${plPropName}")]//tr[contains (@data-gargs, "${text}")]`, this.actualOptions)
            .visible, {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        }).toBeOk();
    }
    async assertResultFromExternalSourceIsNotVisible(plPropName, text, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_2__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_2__.Selector)(`//table[contains (@pl_prop, "${plPropName}")]//tr[contains (@data-gargs, "${text}")]`, this.actualOptions)
            .visible, {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        }).not.toBeOk();
    }
    async assertResultWithComponentsIsVisible(plPropName, texts, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_2__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_2__.Selector)(`//table[contains (@pl_prop, "${plPropName}")]//tr[contains (@data-gargs, "${texts.join('") and contains(@data-gargs, "')}")]`, this.actualOptions)
            .visible, {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        }).toBeOk();
    }
    async assertResultWithComponentsIsNotVisible(plPropName, texts, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_2__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_2__.Selector)(`//table[contains (@pl_prop, "${plPropName}")]//tr[contains (@data-gargs, "${texts.join('") and contains(@data-gargs, "')}")]`, this.actualOptions)
            .visible, {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        }).not.toBeOk();
    }
    async selectResultFromExternalSourceByIndex(plPropName, index, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_2__.I.waitForSelectActionabilityCheck((0,test_maker__WEBPACK_IMPORTED_MODULE_2__.Selector)(`//table[contains (@pl_prop, "${plPropName}")]//tr[@data-gargs]`).nth(index), ['attached'])
            .click((0,test_maker__WEBPACK_IMPORTED_MODULE_2__.Selector)(`//table[contains (@pl_prop, "${plPropName}")]//tr[@data-gargs][${index + 1}]//td//span[contains(@class, "match-highlight")]`, this.actualOptions));
    }
    async shouldHaveSizeOfResultsFromExternalSource(plPropName, size, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        let valuesList = `//table[contains (@pl_prop, "${plPropName}")]//tr[@data-gargs]/td[contains(@class, "autocomplete") and not(contains(@class, "hiddenCell"))]`;
        if (await (0,test_maker__WEBPACK_IMPORTED_MODULE_2__.Selector)(valuesList).visible) {
            await test_maker__WEBPACK_IMPORTED_MODULE_2__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_2__.Selector)(valuesList, this.actualOptions).filterVisible().count, {
                timeout: this.actualOptions.assertionTimeout,
                interval: this.actualOptions.interval,
                retries: this.actualOptions.retries
            }).toEqual(size);
        }
        else {
            await test_maker__WEBPACK_IMPORTED_MODULE_2__.logger.warn('The list or results is not visible');
            await test_maker__WEBPACK_IMPORTED_MODULE_2__.I.expect(0).toEqual(size);
        }
    }
    async shouldBeVisible(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldBeVisible(this.element, options);
    }
    async shouldNotBeVisible(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldNotBeVisible(this.element, options);
    }
    async shouldHaveText(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldHaveText(this.element, value, options);
    }
    async shouldNotHaveText(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldNotHaveText(this.element, value, options);
    }
    async shouldHaveExactText(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldHaveExactText(this.element, value, options);
    }
    async shouldNotHaveExactText(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldNotHaveExactText(this.element, value, options);
    }
    async shouldHaveValue(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldHaveValue(this.element, value, options);
    }
    async shouldNotHaveValue(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldNotHaveValue(this.element, value, options);
    }
    async shouldHaveSizeOfResultsList(size, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_2__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_2__.Selector)('.autocomplete-results li', this.actualOptions)
            .filterVisible().count, {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        }).toEqual(size);
    }
    async shouldBeEnabled(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldBeEnabled(this.element, options);
    }
    async shouldBeDisabled(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldBeDisabled(this.element, options);
    }
    async shouldBeRequired(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldBeRequired(this.element, options);
    }
    async shouldNotBeRequired(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldNotBeRequired(this.element, options);
    }
    async shouldHaveValidationType(validationType, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldHaveValidationType(this.element, validationType, options);
    }
    async shouldNotHaveValidationType(validationType, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldNotHaveValidationType(this.element, validationType, options);
    }
    async getValue() {
        return await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.getValue(this.element);
    }
    async getText() {
        return await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.getText(this.element);
    }
    error() {
        return new _pega_error_messages_pegaErrorMessages__WEBPACK_IMPORTED_MODULE_3__.PegaErrorMessages(this.element);
    }
    async isVisible(options) {
        return await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.isVisible(this.element, options);
    }
    async isExists(options) {
        return await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.isExists(this.element, options);
    }
}


/***/ }),

/***/ "./src/widgets/controls/buttons/button.ts":
/*!************************************************!*\
  !*** ./src/widgets/controls/buttons/button.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Button": () => (/* binding */ Button)
/* harmony export */ });
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! test-maker */ "test-maker");
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(test_maker__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../helpers/options/methodOptions */ "./helpers/options/methodOptions.ts");
/* harmony import */ var _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../controlsCommonActions */ "./src/widgets/controls/controlsCommonActions.ts");
/* harmony import */ var _pega_error_messages_pegaErrorMessages__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../pega-error-messages/pegaErrorMessages */ "./src/widgets/controls/pega-error-messages/pegaErrorMessages.ts");
// Copyright 2019 Knowledge Expert SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.




class Button {
    constructor(attributeName, attributeValue, container = '') {
        this.attributeName = attributeName;
        this.attributeValue = attributeValue;
        this.element = `${container}//button[@${this.attributeName}="${this.attributeValue}"]`;
    }
    async waitUntilVisibility(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.waitUntilVisibility(this.element, options);
    }
    async waitUntilVisibilityByText(text, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.waitUntilVisibilityByText(this.element, text, options);
    }
    async waitUntilVisibilityByAttribute(attributeName, attributeValue, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.waitUntilVisibilityByAttribute(this.element, attributeName, attributeValue, options);
    }
    async waitUntilVisibilityByIndex(index, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.waitUntilVisibilityByIndex(this.element, index, options);
    }
    async waitUntilCollectionOfElementsSizeIsGreaterOrEqual(expectedSize, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.waitUntilCollectionOfElementsSizeIsGreaterOrEqual(this.element, expectedSize, options);
    }
    async waitUntilCollectionOfElementsSizeIsLessThan(expectedSize, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.waitUntilCollectionOfElementsSizeIsLessThan(this.element, expectedSize, options);
    }
    async waitUntilInvisibility(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.waitUntilInvisibility(this.element, options);
    }
    async waitUntilInvisibilityByIndex(index, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.waitUntilInvisibilityByIndex(this.element, index, options);
    }
    async waitForSelectActionabilityCheck(checks, isFilterByVisibility = true) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.waitForSelectActionabilityCheck(this.element, checks, isFilterByVisibility = true);
    }
    async clickWithoutHover(options) {
        //await this.waitForSelectActionabilityCheck([`attached`, `stable`]);
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.click(this.element, options);
    }
    async hover(options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.hover((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.element, this.actualOptions).filterVisible());
    }
    async click(options) {
        await this.shouldBeVisible(options);
        await this.clickWithoutHover(options);
    }
    async rightClick(options) {
        await this.shouldBeVisible(options);
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.rightClick(this.element, options);
    }
    async middleClick(options) {
        await this.shouldBeVisible(options);
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.middleClick(this.element, options);
    }
    async doubleClick(options) {
        await this.shouldBeVisible(options);
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.doubleClick(this.element, options);
    }
    async hoverAndClick(options) {
        await this.shouldBeVisible(options);
        await this.hover(options);
        await this.clickWithoutHover(options);
    }
    async shouldBeVisible(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.shouldBeVisible(this.element, options);
    }
    async shouldNotBeVisible(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.shouldNotBeVisible(this.element, options);
    }
    async waitUntilElementExists(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.waitUntilElementExists(this.element, options);
    }
    async waitUntilElementNotExist(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.waitUntilElementNotExist(this.element, options);
    }
    async shouldExist(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.shouldExist(this.element, options);
    }
    async shouldNotExist(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.shouldNotExist(this.element, options);
    }
    async shouldHaveText(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.shouldHaveText(this.element, value, options);
    }
    async shouldNotHaveText(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.shouldNotHaveText(this.element, value, options);
    }
    async shouldHaveExactText(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.shouldHaveExactText(this.element, value, options);
    }
    async shouldNotHaveExactText(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.shouldNotHaveExactText(this.element, value, options);
    }
    async shouldBeEnabled(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.shouldBeEnabled(this.element, options);
    }
    async shouldBeDisabled(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.shouldBeDisabled(this.element, options);
    }
    toString() {
        return `Button: ${this.element}`;
    }
    error() {
        return new _pega_error_messages_pegaErrorMessages__WEBPACK_IMPORTED_MODULE_3__.PegaErrorMessages(this.element);
    }
    async isVisible(options) {
        return await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.isVisible(this.element, options);
    }
    async isExists(options) {
        return await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.isExists(this.element, options);
    }
}


/***/ }),

/***/ "./src/widgets/controls/buttons/buttonsActions.ts":
/*!********************************************************!*\
  !*** ./src/widgets/controls/buttons/buttonsActions.ts ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ButtonsActions": () => (/* binding */ ButtonsActions)
/* harmony export */ });
/* harmony import */ var _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../controlsCommonActions */ "./src/widgets/controls/controlsCommonActions.ts");
/* harmony import */ var _pega_error_messages_pegaErrorMessages__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../pega-error-messages/pegaErrorMessages */ "./src/widgets/controls/pega-error-messages/pegaErrorMessages.ts");
// Copyright 2020 Knowledge Expert SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


class ButtonsActions {
    constructor(element, index = 0) {
        this.element = element;
        this.index = index;
    }
    async shouldBeVisible(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldBeVisibleByIndex(this.element, this.index, options);
    }
    async shouldNotBeVisible(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldNotBeVisibleByIndex(this.element, this.index, options);
    }
    async click(options) {
        //await I.scrollToSelector(Selector(this.element).filterVisible(), 0, 0);
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.hoverAndClickByIndex(this.element, this.index, options);
    }
    toString() {
        return `Button: ${this.element}`;
    }
    error() {
        return new _pega_error_messages_pegaErrorMessages__WEBPACK_IMPORTED_MODULE_1__.PegaErrorMessages(this.element);
    }
}


/***/ }),

/***/ "./src/widgets/controls/buttons/formButtons.ts":
/*!*****************************************************!*\
  !*** ./src/widgets/controls/buttons/formButtons.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FormButtons": () => (/* binding */ FormButtons)
/* harmony export */ });
/* harmony import */ var _buttonsActions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./buttonsActions */ "./src/widgets/controls/buttons/buttonsActions.ts");
/* harmony import */ var _button__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./button */ "./src/widgets/controls/buttons/button.ts");
// Copyright 2020 Knowledge Expert SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


class FormButtons {
    element(text) {
        return `//button[@type="button"][text()="${text}"]`;
    }
    save() {
        return new _buttonsActions__WEBPACK_IMPORTED_MODULE_0__.ButtonsActions(this.element('Save'));
    }
    submit() {
        return new _buttonsActions__WEBPACK_IMPORTED_MODULE_0__.ButtonsActions(this.element('Submit'));
    }
    submitPopUp() {
        return new _button__WEBPACK_IMPORTED_MODULE_1__.Button('id', 'ModalButtonSubmit');
    }
    byText(value) {
        return new _buttonsActions__WEBPACK_IMPORTED_MODULE_0__.ButtonsActions(this.element(value));
    }
}


/***/ }),

/***/ "./src/widgets/controls/checkbox.ts":
/*!******************************************!*\
  !*** ./src/widgets/controls/checkbox.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CheckBox": () => (/* binding */ CheckBox)
/* harmony export */ });
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! test-maker */ "test-maker");
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(test_maker__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../helpers/options/methodOptions */ "./helpers/options/methodOptions.ts");
/* harmony import */ var _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./controlsCommonActions */ "./src/widgets/controls/controlsCommonActions.ts");
/* harmony import */ var _pega_error_messages_pegaErrorMessages__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pega-error-messages/pegaErrorMessages */ "./src/widgets/controls/pega-error-messages/pegaErrorMessages.ts");
// Copyright 2019 Knowledge Expert SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.




class CheckBox {
    constructor(attributeName, attributeValue, container = '') {
        this.container = container;
        this.attributeName = attributeName;
        this.attributeValue = attributeValue;
        this.element = `${container}//input[@type="checkbox" and contains (@${this.attributeName}, "${this.attributeValue}")]`;
        this.checkBoxElement = `${container}//input[@type="checkbox" and contains (@${this.attributeName}, "${this.attributeValue}")]
        /following-sibling::label[@for="${this.attributeValue}"]`;
    }
    async focus(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.focus(this.element, options);
    }
    async check(options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        if (!await (0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.element, this.actualOptions).filterVisible().nth(this.actualOptions.index).checked) {
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.click((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.element, this.actualOptions).filterVisible().nth(this.actualOptions.index));
        }
        else {
            throw new Error(`Element ${this.toString()} should be unchecked, but was checked`);
        }
    }
    async checkByIndex(index, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        if (!await (0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.element, this.actualOptions).filterVisible().nth(index).checked) {
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.click((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.element, this.actualOptions).filterVisible().nth(index));
        }
        else {
            throw new Error(`Element ${this.toString()} should be unchecked, but was checked`);
        }
    }
    async checkButton(options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        if (!await (0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.checkBoxElement, this.actualOptions).filterVisible().nth(this.actualOptions.index).checked) {
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.click((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.checkBoxElement, this.actualOptions).filterVisible().nth(this.actualOptions.index));
        }
        else {
            throw new Error(`Element ${this.toString()} should be unchecked, but was checked`);
        }
    }
    async uncheck(options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        if (!await (0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.element, this.actualOptions).filterVisible().nth(this.actualOptions.index).checked) {
            throw new Error(`Element ${this.toString()} should be checked, but was unchecked`);
        }
        else {
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.click((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.element, this.actualOptions).filterVisible().nth(this.actualOptions.index));
        }
    }
    async uncheckByIndex(index, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        if (!await (0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.element, this.actualOptions).filterVisible().nth(index).checked) {
            throw new Error(`Element ${this.toString()} should be checked, but was unchecked`);
        }
        else {
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.click((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.element, this.actualOptions).filterVisible().nth(index));
        }
    }
    async uncheckButton(options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        if (!await (0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.checkBoxElement, this.actualOptions).filterVisible().nth(this.actualOptions.index).checked) {
            throw new Error(`Element ${this.toString()} should be checked, but was unchecked`);
        }
        else {
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.click((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.checkBoxElement, this.actualOptions).filterVisible().nth(this.actualOptions.index));
        }
    }
    async checkIf(toClick, options) {
        if (toClick === undefined) {
            return;
        }
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        if (toClick) {
            await this.check(this.actualOptions);
        }
    }
    async shouldBeChecked(options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.element, this.actualOptions).filterVisible().nth(this.actualOptions.index).checked, {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        }).toBeOk();
    }
    async shouldBeUnChecked(options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.element, this.actualOptions).filterVisible().nth(this.actualOptions.index).checked, {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        }).not.toBeOk();
    }
    async waitUntilVisibility(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.waitUntilVisibility(this.element, options);
    }
    async waitUntilVisibilityByText(text, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.waitUntilVisibilityByText(this.element, text, options);
    }
    async waitUntilVisibilityByAttribute(attributeName, attributeValue, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.waitUntilVisibilityByAttribute(this.element, attributeName, attributeValue, options);
    }
    async waitUntilVisibilityByIndex(index, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.waitUntilVisibilityByIndex(this.element, index, options);
    }
    async waitUntilCollectionOfElementsSizeIsGreaterOrEqual(expectedSize, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.waitUntilCollectionOfElementsSizeIsGreaterOrEqual(this.element, expectedSize, options);
    }
    async waitUntilCollectionOfElementsSizeIsLessThan(expectedSize, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.waitUntilCollectionOfElementsSizeIsLessThan(this.element, expectedSize, options);
    }
    async waitUntilInvisibility(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.waitUntilInvisibility(this.element, options);
    }
    async waitUntilInvisibilityByIndex(index, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.waitUntilInvisibilityByIndex(this.element, index, options);
    }
    async waitUntilElementExists(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.waitUntilElementExists(this.element, options);
    }
    async waitUntilElementNotExist(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.waitUntilElementNotExist(this.element, options);
    }
    async waitForSelectActionabilityCheck(checks, isFilterByVisibility = true) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.waitForSelectActionabilityCheck(this.element, checks, isFilterByVisibility = true);
    }
    async shouldExist(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.shouldExist(this.element, options);
    }
    async shouldNotExist(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.shouldNotExist(this.element, options);
    }
    async shouldBeVisible(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.shouldBeVisible(this.element, options);
    }
    async shouldNotBeVisible(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.shouldNotBeVisible(this.element, options);
    }
    async shouldBeEnabled(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.shouldBeEnabled(this.element, options);
    }
    async shouldBeDisabled(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.shouldBeDisabled(this.element, options);
    }
    async isChecked(options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        this.checked = await (0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.element, this.actualOptions).nth(this.actualOptions.index).checked;
        return this.checked;
    }
    toString() {
        return `(Checkbox with ${this.attributeName}='${this.attributeValue}')`;
    }
    error() {
        return new _pega_error_messages_pegaErrorMessages__WEBPACK_IMPORTED_MODULE_3__.PegaErrorMessages(this.element);
    }
    async isVisible(options) {
        return await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.isVisible(this.element, options);
    }
    async isExists(options) {
        return await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.isExists(this.element, options);
    }
}


/***/ }),

/***/ "./src/widgets/controls/controlsCommonActions.ts":
/*!*******************************************************!*\
  !*** ./src/widgets/controls/controlsCommonActions.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ControlsCommonActions": () => (/* binding */ ControlsCommonActions),
/* harmony export */   "controlsCommonActions": () => (/* binding */ controlsCommonActions)
/* harmony export */ });
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! test-maker */ "test-maker");
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(test_maker__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../helpers/options/methodOptions */ "./helpers/options/methodOptions.ts");
// Copyright 2020 Knowledge Expert SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// @ts-ignore


class ControlsCommonActions {
    constructor() {
        this.value = '';
        this.text = '';
    }
    //mouse actions
    async click(element, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.click((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(element, this.actualOptions).filterVisible());
    }
    async rightClick(element, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.rightClick((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(element, this.actualOptions).filterVisible());
    }
    async doubleClick(element, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.doubleClick((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(element, this.actualOptions).filterVisible());
    }
    async middleClick(element, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.middleClick((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(element, this.actualOptions).filterVisible());
    }
    async focus(element, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.focus((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(element, this.actualOptions).filterVisible());
    }
    async hoverAndClick(element, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        // await this.shouldExist(element, this.actualOptions);
        // await this.shouldBeVisible(element, this.actualOptions);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.waitForSelectActionabilityCheck((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(element).filterVisible(), [`attached`, 'stable'])
            .hover((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(element, this.actualOptions).filterVisible(), this.actualOptions)
            .click((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(element, this.actualOptions).filterVisible(), this.actualOptions);
    }
    async hoverAndClickByIndex(element, index, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        // await this.shouldExist(element, this.actualOptions);
        // await this.shouldBeVisible(element, this.actualOptions);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.waitForSelectActionabilityCheck((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(element).filterVisible().nth(index), [`attached`, 'stable'])
            .hover((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(element, this.actualOptions).filterVisible().nth(index), this.actualOptions)
            .click((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(element, this.actualOptions).filterVisible().nth(index), this.actualOptions);
    }
    //keyboard actions
    async pressTab() {
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.pressTabKey();
    }
    //interaction
    async set(element, value, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        if (value === undefined) {
            return;
        }
        // await this.shouldExist(element, this.actualOptions);
        value = value + "";
        await this.shouldBeVisible(element, this.actualOptions);
        await this.click(element, this.actualOptions);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.fillField((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(element, this.actualOptions).filterVisible(), value);
    }
    async paste(element, value, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        if (value === undefined) {
            return;
        }
        // await this.shouldExist(element, this.actualOptions);
        value = value + "";
        await this.shouldBeVisible(element, this.actualOptions);
        await this.focus(element, this.actualOptions);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.fillField((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(element, this.actualOptions).filterVisible(), value, { paste: true });
    }
    async setByCharacter(element, value, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        if (value === undefined) {
            return;
        }
        value = value + "";
        await this.shouldBeVisible(element, this.actualOptions);
        await this.click(element, this.actualOptions);
        //await I.fillField(Selector(element, this.actualOptions).filterVisible(), value);
        let i = value.length;
        while (i > 0) {
            await controlsCommonActions.appendValue(element, value.substring(value.length - i, value.length - (i - 1)), options);
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.wait(20);
            i = i - 1;
        }
    }
    async appendValue(element, value, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        if (value === undefined) {
            return;
        }
        // await this.shouldExist(element, this.actualOptions);
        value = value + "";
        await this.shouldBeVisible(element, this.actualOptions);
        await this.click(element, this.actualOptions);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.appendField((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(element, this.actualOptions).filterVisible(), value);
    }
    //wait methods
    async waitUntilVisibility(element, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.waitForSelectorToBeVisible((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(element, this.actualOptions));
    }
    async waitUntilElementExists(element, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.waitForSelectorToExist((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(element, this.actualOptions));
    }
    async waitUntilElementNotExist(element, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.waitForSelectorToNotExist((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(element, this.actualOptions));
    }
    async waitUntilVisibilityByText(element, text, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        if (this.actualOptions.isCaseSensitive) {
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.waitForSelectorToBeVisible((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(element, this.actualOptions).withText(text));
        }
        else {
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.waitForSelectorToBeVisible((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(element, this.actualOptions).withText(text.toLowerCase()));
        }
    }
    async waitUntilVisibilityByAttribute(element, attributeName, attributeValue, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.waitForSelectorToBeVisible((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(element, this.actualOptions).withAttribute(attributeName, attributeValue));
    }
    async waitUntilVisibilityByIndex(element, index, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.waitForSelectorToBeVisible((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(element, this.actualOptions).nth(index));
    }
    async waitUntilCollectionOfElementsSizeIsGreaterOrEqual(element, expectedSize, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.waitForCondition({
            condition: async () => {
                const actualSize = await (0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(element).count;
                return actualSize >= expectedSize;
            },
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        });
    }
    async waitUntilCollectionOfElementsSizeIsLessThan(element, expectedSize, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.waitForCondition({
            condition: async () => {
                const actualSize = await (0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(element).count;
                return actualSize < expectedSize;
            },
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        });
    }
    async waitUntilInvisibility(element, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.waitForSelectorToBeInvisible((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(element, this.actualOptions));
    }
    async waitUntilInvisibilityByIndex(element, index, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.waitForSelectorToBeInvisible((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(element, this.actualOptions).nth(index));
    }
    async waitForSelectActionabilityCheck(element, checks, isFilterByVisibility = true) {
        if (isFilterByVisibility == false) {
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.waitForSelectActionabilityCheck((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(element), checks);
        }
        else {
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.waitForSelectActionabilityCheck((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(element).filterVisible(), checks);
        }
    }
    //assertions
    async shouldExist(element, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expectSelector((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(element, this.actualOptions).nth(this.actualOptions.index)).toExist();
    }
    async shouldNotExist(element, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expectSelector((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(element, this.actualOptions).nth(this.actualOptions.index)).not.toExist();
    }
    async shouldBeVisible(element, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(element, this.actualOptions)
            .filterVisible().nth(this.actualOptions.index).visible, {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        }).toBeOk();
    }
    async shouldBeVisibleByIndex(element, index, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(element, this.actualOptions)
            .filterVisible().nth(index).visible, {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        }).toBeOk();
    }
    async shouldNotBeVisible(element, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(element, this.actualOptions)
            .nth(this.actualOptions.index).visible, {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        })
            .not.toBeOk();
    }
    async shouldNotBeVisibleByIndex(element, index, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(element, this.actualOptions)
            .nth(index).visible, {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        })
            .not.toBeOk();
    }
    async shouldHaveText(element, value, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        if (!this.actualOptions.isCaseSensitive) {
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect(async () => {
                return (await (0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(element, this.actualOptions).filterVisible()
                    .nth(this.actualOptions.index).innerText).toUpperCase();
            }, {
                timeout: this.actualOptions.assertionTimeout,
                interval: this.actualOptions.interval,
                retries: this.actualOptions.retries
            }).toContain(value.toUpperCase());
        }
        else {
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(element, this.actualOptions)
                .filterVisible().nth(this.actualOptions.index).innerText, {
                timeout: this.actualOptions.assertionTimeout,
                interval: this.actualOptions.interval,
                retries: this.actualOptions.retries
            })
                .toContain(value);
        }
    }
    async shouldNotHaveText(element, value, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        if (!this.actualOptions.isCaseSensitive) {
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect(async () => {
                return (await (0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(element, this.actualOptions).filterVisible()
                    .nth(this.actualOptions.index).innerText).toUpperCase();
            }, {
                timeout: this.actualOptions.assertionTimeout,
                interval: this.actualOptions.interval,
                retries: this.actualOptions.retries
            }).not.toContain(value.toUpperCase());
        }
        else {
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(element, this.actualOptions)
                .filterVisible().nth(this.actualOptions.index).innerText, {
                timeout: this.actualOptions.assertionTimeout,
                interval: this.actualOptions.interval,
                retries: this.actualOptions.retries
            })
                .not.toContain(value);
        }
    }
    async shouldHaveExactText(element, value, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(element, this.actualOptions)
            .filterVisible().nth(this.actualOptions.index).innerText, {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        })
            .toEqual(value);
    }
    async shouldNotHaveExactText(element, value, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(element, this.actualOptions)
            .filterVisible().nth(this.actualOptions.index).innerText, {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        })
            .not.toEqual(value);
    }
    async shouldHaveValue(element, value, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        value = value + "";
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(element, this.actualOptions)
            .filterVisible().nth(this.actualOptions.index).value).not.toBeUndefined();
        if (!this.actualOptions.isCaseSensitive) {
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect(async () => {
                return (await (0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(element, this.actualOptions).filterVisible()
                    .nth(this.actualOptions.index).value).toUpperCase();
            }, {
                timeout: this.actualOptions.assertionTimeout,
                interval: this.actualOptions.interval,
                retries: this.actualOptions.retries
            }).toContain(value.toUpperCase());
        }
        else {
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(element, this.actualOptions)
                .filterVisible().nth(this.actualOptions.index).value, {
                timeout: this.actualOptions.assertionTimeout,
                interval: this.actualOptions.interval,
                retries: this.actualOptions.retries
            })
                .toContain(value);
        }
    }
    async shouldNotHaveValue(element, value, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        value = value + "";
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(element, this.actualOptions)
            .filterVisible().nth(this.actualOptions.index).value).not.toBeUndefined();
        if (!this.actualOptions.isCaseSensitive) {
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect(async () => {
                return (await (0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(element, this.actualOptions).filterVisible()
                    .nth(this.actualOptions.index).value).toUpperCase();
            }, {
                timeout: this.actualOptions.assertionTimeout,
                interval: this.actualOptions.interval,
                retries: this.actualOptions.retries
            }).not.toContain(value.toUpperCase());
        }
        else {
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(element, this.actualOptions)
                .filterVisible().nth(this.actualOptions.index).value, {
                timeout: this.actualOptions.assertionTimeout,
                interval: this.actualOptions.interval,
                retries: this.actualOptions.retries
            })
                .not.toContain(value);
        }
    }
    async shouldBeEnabled(element, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expectSelector((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(element, this.actualOptions).filterVisible().nth(this.actualOptions.index), {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        }).toBeEnabled();
    }
    async shouldBeDisabled(element, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expectSelector((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(element, this.actualOptions).filterVisible().nth(this.actualOptions.index), {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        }).toBeDisabled();
    }
    async shouldNotBeBlank(element, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(element, this.actualOptions).filterVisible().nth(this.actualOptions.index).innerText, {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        }).not.toEqual("");
    }
    async shouldNotBeBlankByIndex(element, index, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(element, this.actualOptions).filterVisible().nth(index).innerText, {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        }).not.toEqual("");
    }
    async isVisible(element, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        if (options === null || options === void 0 ? void 0 : options.filterByVisibility) {
            return await (0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(element, this.actualOptions).filterVisible().nth(this.actualOptions.index).visible;
        }
        return await (0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(element, this.actualOptions).nth(this.actualOptions.index).visible;
    }
    async isExists(element, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        return await (0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(element, this.actualOptions).nth(this.actualOptions.index).exists;
    }
    async getValue(element) {
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(element).filterVisible().value).not.toBeUndefined();
        this.value = await (0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(element).filterVisible().value;
        return this.value;
    }
    async getText(element) {
        this.text = await (0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(element).filterVisible().innerText;
        return this.text;
    }
    async shouldBeRequired(element, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(element, this.actualOptions).filterVisible().getAttribute('validationtype'), {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        }).toContain('required');
    }
    async shouldNotBeRequired(element, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(element, this.actualOptions).filterVisible().getAttribute('validationtype'), {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        }).not.toContain('required').or.toBeNull().or.toBeUndefined();
    }
    async shouldHaveValidationType(element, validationType, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(element, this.actualOptions).filterVisible().getAttribute('validationtype'), {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        }).toContain(validationType);
    }
    async shouldNotHaveValidationType(element, validationType, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(element, this.actualOptions).filterVisible().getAttribute('validationtype'), {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        }).toContain(validationType).or.toBeUndefined();
    }
    async setValueByJs(element, initialValue, formattedValue) {
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.eval(({ element, initialValue }) => {
            var inputField = document.evaluate(`${element}`, document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;
            // @ts-ignore
            inputField.setAttribute('data-value', `${initialValue}`);
        }, { element: element, initialValue: initialValue });
        if (formattedValue) {
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.eval(({ element, formattedValue }) => {
                var inputField = document.evaluate(`${element}`, document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;
                // @ts-ignore
                inputField.value = formattedValue;
            }, { element: element, formattedValue: formattedValue });
        }
    }
}
const controlsCommonActions = new ControlsCommonActions();


/***/ }),

/***/ "./src/widgets/controls/customControl/CustomConrolByXPath.ts":
/*!*******************************************************************!*\
  !*** ./src/widgets/controls/customControl/CustomConrolByXPath.ts ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CustomControlByXPath": () => (/* binding */ CustomControlByXPath),
/* harmony export */   "customControlByXPath": () => (/* binding */ customControlByXPath)
/* harmony export */ });
/* harmony import */ var _customControlCommon__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./customControlCommon */ "./src/widgets/controls/customControl/customControlCommon.ts");
// Copyright 2020 Knowledge Expert SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

class CustomControlByXPath extends _customControlCommon__WEBPACK_IMPORTED_MODULE_0__.CustomControlCommon {
    constructor(xpath, container = '') {
        super(`${container}${xpath}`);
    }
}
function customControlByXPath(xpath, container) {
    return new CustomControlByXPath(xpath, container);
}


/***/ }),

/***/ "./src/widgets/controls/customControl/CustomControlByCss.ts":
/*!******************************************************************!*\
  !*** ./src/widgets/controls/customControl/CustomControlByCss.ts ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CustomControlByCss": () => (/* binding */ CustomControlByCss),
/* harmony export */   "customControlByCss": () => (/* binding */ customControlByCss)
/* harmony export */ });
/* harmony import */ var _customControlCommon__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./customControlCommon */ "./src/widgets/controls/customControl/customControlCommon.ts");
// Copyright 2020 Knowledge Expert SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

class CustomControlByCss extends _customControlCommon__WEBPACK_IMPORTED_MODULE_0__.CustomControlCommon {
    constructor(css) {
        super(`${css}`);
    }
}
function customControlByCss(css) {
    return new CustomControlByCss(css);
}


/***/ }),

/***/ "./src/widgets/controls/customControl/customControlByAttribute.ts":
/*!************************************************************************!*\
  !*** ./src/widgets/controls/customControl/customControlByAttribute.ts ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CustomControlByAttributes": () => (/* binding */ CustomControlByAttributes),
/* harmony export */   "customControlByAttribute": () => (/* binding */ customControlByAttribute)
/* harmony export */ });
/* harmony import */ var _customControlCommon__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./customControlCommon */ "./src/widgets/controls/customControl/customControlCommon.ts");
// Copyright 2020 Knowledge Expert SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

class CustomControlByAttributes extends _customControlCommon__WEBPACK_IMPORTED_MODULE_0__.CustomControlCommon {
    constructor(args) {
        let actualContainer, actualElementType;
        args.container ? actualContainer = args.container : actualContainer = "";
        args.elementType ? actualElementType = args.elementType : actualElementType = "*";
        super(`${actualContainer}//${actualElementType}[@${args.attributeName}="${args.attributeValue}"]`);
    }
}
function customControlByAttribute(args) {
    return new CustomControlByAttributes({
        attributeName: args.attributeName,
        attributeValue: args.attributeValue,
        elementType: args.elementType,
        container: args.container
    });
}


/***/ }),

/***/ "./src/widgets/controls/customControl/customControlCommon.ts":
/*!*******************************************************************!*\
  !*** ./src/widgets/controls/customControl/customControlCommon.ts ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CustomControlCommon": () => (/* binding */ CustomControlCommon)
/* harmony export */ });
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! test-maker */ "test-maker");
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(test_maker__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../helpers/options/methodOptions */ "./helpers/options/methodOptions.ts");
/* harmony import */ var _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../controlsCommonActions */ "./src/widgets/controls/controlsCommonActions.ts");
/* harmony import */ var _pega_error_messages_pegaErrorMessages__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../pega-error-messages/pegaErrorMessages */ "./src/widgets/controls/pega-error-messages/pegaErrorMessages.ts");
// Copyright 2020 Knowledge Expert SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.




class CustomControlCommon {
    constructor(element) {
        this.element = element;
    }
    async waitUntilVisibility(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.waitUntilVisibility(this.element, options);
    }
    async waitUntilVisibilityByText(text, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.waitUntilVisibilityByText(this.element, text, options);
    }
    async waitUntilVisibilityByAttribute(attributeName, attributeValue, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.waitUntilVisibilityByAttribute(this.element, attributeName, attributeValue, options);
    }
    async waitUntilVisibilityByIndex(index, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.waitUntilVisibilityByIndex(this.element, index, options);
    }
    async waitUntilCollectionOfElementsSizeIsGreaterOrEqual(expectedSize, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.waitUntilCollectionOfElementsSizeIsGreaterOrEqual(this.element, expectedSize, options);
    }
    async waitUntilCollectionOfElementsSizeIsLessThan(expectedSize, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.waitUntilCollectionOfElementsSizeIsLessThan(this.element, expectedSize, options);
    }
    async waitUntilInvisibility(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.waitUntilInvisibility(this.element, options);
    }
    async waitUntilInvisibilityByIndex(index, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.waitUntilInvisibilityByIndex(this.element, index, options);
    }
    async waitForSelectActionabilityCheck(checks, isFilterByVisibility = true) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.waitForSelectActionabilityCheck(this.element, checks, isFilterByVisibility = true);
    }
    async click(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.click(this.element, options);
    }
    async focus(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.focus(this.element, options);
    }
    async pressTab() {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.pressTab();
    }
    async set(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.set(this.element, value, options);
    }
    async paste(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.paste(this.element, value, options);
    }
    async check(options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.checkOption((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.element, this.actualOptions).filterVisible().nth(this.actualOptions.index));
    }
    async uncheck(options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.uncheckOption((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.element, this.actualOptions).filterVisible().nth(this.actualOptions.index));
    }
    async hover(options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.hover((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.element, this.actualOptions).filterVisible().nth(this.actualOptions.index));
    }
    async pressEnter() {
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.pressEnterKey();
    }
    async appendValue(appendedValue, options) {
        if (appendedValue === undefined) {
            return;
        }
        appendedValue = appendedValue + "";
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.appendField((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.element, this.actualOptions).filterVisible().nth(this.actualOptions.index), appendedValue);
    }
    async clearField(options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.clearField((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.element, this.actualOptions).filterVisible().nth(this.actualOptions.index));
    }
    async shouldBeVisible(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.shouldBeVisible(this.element, options);
    }
    async shouldNotBeVisible(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.shouldNotBeVisible(this.element, options);
    }
    async waitUntilElementExists(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.waitUntilElementExists(this.element, options);
    }
    async waitUntilElementNotExist(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.waitUntilElementNotExist(this.element, options);
    }
    async shouldExist(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.shouldExist(this.element, options);
    }
    async shouldNotExist(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.shouldNotExist(this.element, options);
    }
    async shouldHaveValue(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.shouldHaveValue(this.element, value, options);
    }
    async shouldNotHaveValue(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.shouldNotHaveValue(this.element, value, options);
    }
    async shouldBeEnabled(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.shouldBeEnabled(this.element, options);
    }
    async shouldBeDisabled(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.shouldBeDisabled(this.element, options);
    }
    async shouldNotBeBlank(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.shouldNotBeBlank(this.element, options);
    }
    async shouldHaveText(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.shouldHaveText(this.element, value, options);
    }
    async shouldHaveTextByIndex(value, index, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        if (!this.actualOptions.isCaseSensitive) {
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect(async () => {
                return (await (0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.element, this.actualOptions).filterVisible()
                    .nth(index).innerText).toLowerCase();
            }, {
                timeout: this.actualOptions.assertionTimeout,
                interval: this.actualOptions.interval,
                retries: this.actualOptions.retries
            }).toContain(value.toLowerCase());
        }
        else {
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.element, this.actualOptions)
                .filterVisible().nth(index).innerText, {
                timeout: this.actualOptions.assertionTimeout,
                interval: this.actualOptions.interval,
                retries: this.actualOptions.retries
            })
                .toContain(value);
        }
    }
    async shouldNotHaveText(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.shouldNotHaveText(this.element, value, options);
    }
    async shouldNotHaveTextByIndex(value, index, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        if (!this.actualOptions.isCaseSensitive) {
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect(async () => {
                return (await (0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.element, this.actualOptions).filterVisible()
                    .nth(index).innerText).toLowerCase();
            }, {
                timeout: this.actualOptions.assertionTimeout,
                interval: this.actualOptions.interval,
                retries: this.actualOptions.retries
            }).not.toContain(value.toLowerCase());
        }
        else {
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.element, this.actualOptions)
                .filterVisible().nth(index).innerText, {
                timeout: this.actualOptions.assertionTimeout,
                interval: this.actualOptions.interval,
                retries: this.actualOptions.retries
            })
                .not.toContain(value);
        }
    }
    async shouldHaveExactText(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.shouldHaveExactText(this.element, value, options);
    }
    async shouldHaveExactTextByIndex(value, index, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.element, this.actualOptions).filterVisible()
            .nth(index).innerText, {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        })
            .toEqual(value);
    }
    async shouldNotHaveExactText(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.shouldNotHaveExactText(this.element, value, options);
    }
    async shouldNotHaveExactTextByIndex(value, index, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.element, this.actualOptions).filterVisible()
            .nth(index)
            .innerText, {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        })
            .not.toContain(value);
    }
    async shouldNotBeBlankByIndex(index, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.shouldNotBeBlank(this.element, _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptionsAndIndex(index, options));
    }
    async shouldHaveValueByIndex(value, index, options) {
        value = value + "";
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        if (!this.actualOptions.isCaseSensitive) {
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect(async () => {
                return (await (0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.element, this.actualOptions).filterVisible()
                    .nth(index).getAttribute('value')).toLowerCase();
            }, {
                timeout: this.actualOptions.assertionTimeout,
                interval: this.actualOptions.interval,
                retries: this.actualOptions.retries
            }).toContain(value.toLowerCase());
        }
        else {
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.element, this.actualOptions)
                .filterVisible().nth(index).getAttribute('value'), {
                timeout: this.actualOptions.assertionTimeout,
                interval: this.actualOptions.interval,
                retries: this.actualOptions.retries
            })
                .toContain(value);
        }
    }
    async shouldNotHaveValueByIndex(value, index, options) {
        value = value + "";
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        if (!this.actualOptions.isCaseSensitive) {
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect(async () => {
                return (await (0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.element, this.actualOptions).filterVisible()
                    .nth(index).getAttribute('value')).toLowerCase();
            }, {
                timeout: this.actualOptions.assertionTimeout,
                interval: this.actualOptions.interval,
                retries: this.actualOptions.retries
            }).not.toContain(value.toLowerCase());
        }
        else {
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.element, this.actualOptions)
                .filterVisible().nth(index).getAttribute('value'), {
                timeout: this.actualOptions.assertionTimeout,
                interval: this.actualOptions.interval,
                retries: this.actualOptions.retries
            })
                .not.toContain(value);
        }
    }
    async shouldBeVisibleByIndex(index, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.element, this.actualOptions)
            .filterVisible()
            .nth(index)
            .visible, {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        }).toBeOk();
    }
    async shouldNotBeVisibleByIndex(index, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.element, this.actualOptions)
            .nth(index)
            .visible, {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        }).not.toBeOk();
    }
    async shouldBeVisibleByText(value, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        if (!this.actualOptions.isCaseSensitive) {
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect(async () => {
                return (await (0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.element, this.actualOptions).withExactText(value.toLowerCase()).visible);
            }, {
                timeout: this.actualOptions.assertionTimeout,
                interval: this.actualOptions.interval,
                retries: this.actualOptions.retries
            }).toBeOk();
        }
        else {
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.element, this.actualOptions).withExactText(value).visible, {
                timeout: this.actualOptions.assertionTimeout,
                interval: this.actualOptions.interval,
                retries: this.actualOptions.retries
            }).toBeOk();
        }
    }
    async shouldBeVisibleByAttribute(attributeName, attributeValue, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.element, this.actualOptions).withAttribute(attributeName, attributeValue).visible, {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        }).toBeOk();
    }
    async shouldBeRequired(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.shouldBeRequired(this.element, options);
    }
    async shouldNotBeRequired(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.shouldNotBeRequired(this.element, options);
    }
    async shouldHaveValidationType(validationType, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.shouldHaveValidationType(this.element, validationType, options);
    }
    async shouldNotHaveValidationType(validationType, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.shouldNotHaveValidationType(this.element, validationType, options);
    }
    async getValue() {
        return await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.getValue(this.element);
    }
    async getText() {
        return await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.getText(this.element);
    }
    toString() {
        return `(Element with ${this.element}')`;
    }
    error() {
        return new _pega_error_messages_pegaErrorMessages__WEBPACK_IMPORTED_MODULE_3__.PegaErrorMessages(this.element);
    }
    async isVisible(options) {
        return await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.isVisible(this.element, options);
    }
    async isExists(options) {
        return await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.isExists(this.element, options);
    }
}


/***/ }),

/***/ "./src/widgets/controls/datePicker/datePickerByAttribute.ts":
/*!******************************************************************!*\
  !*** ./src/widgets/controls/datePicker/datePickerByAttribute.ts ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DatePickerByAttribute": () => (/* binding */ DatePickerByAttribute),
/* harmony export */   "datePickerByAttribute": () => (/* binding */ datePickerByAttribute)
/* harmony export */ });
/* harmony import */ var _datePickerCommon__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./datePickerCommon */ "./src/widgets/controls/datePicker/datePickerCommon.ts");
// Copyright 2020 Knowledge Expert SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

class DatePickerByAttribute extends _datePickerCommon__WEBPACK_IMPORTED_MODULE_0__.DatePickerCommon {
    constructor(attributeName, attributeValue, container = '') {
        super(`${container}//input[@data-ctl='["DatePicker"]' and contains (@${attributeName}, "${attributeValue}")]`);
    }
}
function datePickerByAttribute(attributeName, attributeValue, container) {
    return new DatePickerByAttribute(attributeName, attributeValue, container);
}


/***/ }),

/***/ "./src/widgets/controls/datePicker/datePickerByCss.ts":
/*!************************************************************!*\
  !*** ./src/widgets/controls/datePicker/datePickerByCss.ts ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DatePickerByCss": () => (/* binding */ DatePickerByCss),
/* harmony export */   "datePickerByCss": () => (/* binding */ datePickerByCss)
/* harmony export */ });
/* harmony import */ var _datePickerCommon__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./datePickerCommon */ "./src/widgets/controls/datePicker/datePickerCommon.ts");
// Copyright 2020 Knowledge Expert SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

class DatePickerByCss extends _datePickerCommon__WEBPACK_IMPORTED_MODULE_0__.DatePickerCommon {
    constructor(css) {
        super(`${css}`);
    }
}
function datePickerByCss(css) {
    return new DatePickerByCss(css);
}


/***/ }),

/***/ "./src/widgets/controls/datePicker/datePickerByLabel.ts":
/*!**************************************************************!*\
  !*** ./src/widgets/controls/datePicker/datePickerByLabel.ts ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DatePickerByLabel": () => (/* binding */ DatePickerByLabel),
/* harmony export */   "datePickerByLabel": () => (/* binding */ datePickerByLabel)
/* harmony export */ });
/* harmony import */ var _datePickerCommon__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./datePickerCommon */ "./src/widgets/controls/datePicker/datePickerCommon.ts");
// Copyright 2020 Knowledge Expert SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

class DatePickerByLabel extends _datePickerCommon__WEBPACK_IMPORTED_MODULE_0__.DatePickerCommon {
    constructor(label, container = '') {
        super(`${container}//label[contains(text(), "${label}") and not(contains(@for, "${label}"))]/following-sibling::div//input[@data-ctl='["DatePicker"]']`);
    }
}
function datePickerByLabel(label, container) {
    return new DatePickerByLabel(label, container);
}


/***/ }),

/***/ "./src/widgets/controls/datePicker/datePickerByXPath.ts":
/*!**************************************************************!*\
  !*** ./src/widgets/controls/datePicker/datePickerByXPath.ts ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DatePickerByXPath": () => (/* binding */ DatePickerByXPath),
/* harmony export */   "datePickerByXPath": () => (/* binding */ datePickerByXPath)
/* harmony export */ });
/* harmony import */ var _datePickerCommon__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./datePickerCommon */ "./src/widgets/controls/datePicker/datePickerCommon.ts");
// Copyright 2020 Knowledge Expert SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

class DatePickerByXPath extends _datePickerCommon__WEBPACK_IMPORTED_MODULE_0__.DatePickerCommon {
    constructor(xpath, container = '') {
        super(`${container}${xpath}`);
    }
}
function datePickerByXPath(xpath, container) {
    return new DatePickerByXPath(xpath, container);
}


/***/ }),

/***/ "./src/widgets/controls/datePicker/datePickerCommon.ts":
/*!*************************************************************!*\
  !*** ./src/widgets/controls/datePicker/datePickerCommon.ts ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DatePickerCommon": () => (/* binding */ DatePickerCommon)
/* harmony export */ });
/* harmony import */ var _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../controlsCommonActions */ "./src/widgets/controls/controlsCommonActions.ts");
/* harmony import */ var _helpers_customDate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../helpers/customDate */ "./helpers/customDate.ts");
/* harmony import */ var _pega_error_messages_pegaErrorMessages__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../pega-error-messages/pegaErrorMessages */ "./src/widgets/controls/pega-error-messages/pegaErrorMessages.ts");
// Copyright 2020 Knowledge Expert SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.



class DatePickerCommon {
    constructor(element) {
        this.element = element;
    }
    async waitUntilVisibility(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilVisibility(this.element, options);
    }
    async waitUntilVisibilityByText(text, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilVisibilityByText(this.element, text, options);
    }
    async waitUntilVisibilityByAttribute(attributeName, attributeValue, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilVisibilityByAttribute(this.element, attributeName, attributeValue, options);
    }
    async waitUntilVisibilityByIndex(index, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilVisibilityByIndex(this.element, index, options);
    }
    async waitUntilCollectionOfElementsSizeIsGreaterOrEqual(expectedSize, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilCollectionOfElementsSizeIsGreaterOrEqual(this.element, expectedSize, options);
    }
    async waitUntilCollectionOfElementsSizeIsLessThan(expectedSize, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilCollectionOfElementsSizeIsLessThan(this.element, expectedSize, options);
    }
    async waitUntilInvisibility(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilInvisibility(this.element, options);
    }
    async waitUntilInvisibilityByIndex(index, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilInvisibilityByIndex(this.element, index, options);
    }
    async click(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.click(this.element, options);
    }
    async focus(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.focus(this.element, options);
    }
    async pressTab() {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.pressTab();
    }
    async shouldBeVisible(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldBeVisible(this.element, options);
    }
    async shouldNotBeVisible(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldNotBeVisible(this.element, options);
    }
    async waitUntilElementExists(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilElementExists(this.element, options);
    }
    async waitUntilElementNotExist(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilElementNotExist(this.element, options);
    }
    async waitForSelectActionabilityCheck(checks, isFilterByVisibility = true) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitForSelectActionabilityCheck(this.element, checks, isFilterByVisibility = true);
    }
    async shouldExist(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldExist(this.element, options);
    }
    async shouldNotExist(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldNotExist(this.element, options);
    }
    async shouldHaveText(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldHaveText(this.element, value, options);
    }
    async shouldNotHaveText(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldNotHaveText(this.element, value, options);
    }
    async shouldHaveExactText(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldHaveExactText(this.element, value, options);
    }
    async shouldNotHaveExactText(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldNotHaveExactText(this.element, value, options);
    }
    async shouldHaveValue(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldHaveValue(this.element, value, options);
    }
    async shouldNotHaveValue(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldNotHaveValue(this.element, value, options);
    }
    async shouldBeEnabled(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldBeEnabled(this.element, options);
    }
    async shouldBeDisabled(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldBeDisabled(this.element, options);
    }
    async shouldNotBeBlank(index, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldNotBeBlank(this.element, options);
    }
    async set(value, options) {
        if (value === undefined) {
            return;
        }
        let date;
        if (value instanceof _helpers_customDate__WEBPACK_IMPORTED_MODULE_1__.CustomDate) {
            date = value.toStringBySlash();
        }
        else {
            date = value + "";
        }
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.set(this.element, date, options);
    }
    async paste(value, options) {
        if (value === undefined) {
            return;
        }
        let date;
        if (value instanceof _helpers_customDate__WEBPACK_IMPORTED_MODULE_1__.CustomDate) {
            date = value.toStringBySlash();
        }
        else {
            date = value + "";
        }
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.paste(this.element, date, options);
    }
    async setTodayPlusDays(days, options) {
        if (days === undefined) {
            return;
        }
        let date = (0,_helpers_customDate__WEBPACK_IMPORTED_MODULE_1__.today)().plusDays(days).toString('/', ['d', 'm', 'y']);
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.set(this.element, date, options);
    }
    async setTodayMinusDays(days, options) {
        if (days === undefined) {
            return;
        }
        let date = (0,_helpers_customDate__WEBPACK_IMPORTED_MODULE_1__.today)().minusDays(days).toString('/', ['d', 'm', 'y']);
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.set(this.element, date, options);
    }
    async shouldHaveDateTodayPlusDays(days, options) {
        if (days === undefined) {
            return;
        }
        let date = (0,_helpers_customDate__WEBPACK_IMPORTED_MODULE_1__.today)().plusDays(days).toString('/', ['d', 'm', 'y']);
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldHaveValue(this.element, date, options);
    }
    async shouldHaveDateTodayMinusDays(days, options) {
        if (days === undefined) {
            return;
        }
        let date = (0,_helpers_customDate__WEBPACK_IMPORTED_MODULE_1__.today)().minusDays(days).toString('/', ['d', 'm', 'y']);
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldHaveValue(this.element, date, options);
    }
    async shouldBeRequired(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldBeRequired(this.element, options);
    }
    async shouldNotBeRequired(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldNotBeRequired(this.element, options);
    }
    async shouldHaveValidationType(validationType, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldHaveValidationType(this.element, validationType, options);
    }
    async shouldNotHaveValidationType(validationType, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldNotHaveValidationType(this.element, validationType, options);
    }
    async getValue() {
        return await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.getValue(this.element);
    }
    async getText() {
        return await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.getText(this.element);
    }
    error() {
        return new _pega_error_messages_pegaErrorMessages__WEBPACK_IMPORTED_MODULE_2__.PegaErrorMessages(this.element);
    }
    async isVisible(options) {
        return await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.isVisible(this.element, options);
    }
    async isExists(options) {
        return await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.isExists(this.element, options);
    }
}


/***/ }),

/***/ "./src/widgets/controls/dateRange.ts":
/*!*******************************************!*\
  !*** ./src/widgets/controls/dateRange.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DateRange": () => (/* binding */ DateRange)
/* harmony export */ });
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! test-maker */ "test-maker");
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(test_maker__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./controlsCommonActions */ "./src/widgets/controls/controlsCommonActions.ts");
// Copyright 2021 Knowledge Expert SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


class DateRange {
    constructor(dataTestId) {
        this.dataTestId = dataTestId;
    }
    inputElements() {
        return `//input[contains (@data-test-id, "${this.dataTestId}")][@data-ctl='["DateRange"]']`;
    }
    inputElement(dateType) {
        return `//input[@data-test-id=\"${this.dataTestId}_${dateType}\"]`;
    }
    spanElement(dateType) {
        return `${this.spanElement(dateType)}/following-sibling::span`;
    }
    parentSpan() {
        return `//input[contains (@data-test-id, "${this.dataTestId}")][@data-ctl='["DateRange"]']/parent::span`;
    }
    // @ts-ignore
    async set(startDate, endDate) {
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.eval(({ dataTestId, startDate, endDate }) => {
            var startInput = document.evaluate(`//input[@data-test-id=\"${dataTestId}_startDate\"]`, document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;
            // @ts-ignore
            startInput.value = startDate;
            var endInput = document.evaluate(`//input[@data-test-id=\"${dataTestId}_endDate\"]`, document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;
            // @ts-ignore
            endInput.value = endDate;
            var startSpan = document.evaluate(`//input[@data-test-id=\"${dataTestId}_startDate\"]/following-sibling::span`, document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;
            // @ts-ignore
            startSpan.innerText = startDate;
            var endSpan = document.evaluate(`//input[@data-test-id=\"${dataTestId}_endDate\"]/following-sibling::span`, document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;
            // @ts-ignore
            endSpan.innerText = endDate;
        }, { dataTestId: this.dataTestId, startDate: startDate, endDate: endDate });
    }
    ;
    async shouldBeVisible() {
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expectSelector(this.parentSpan()).toBeVisible();
    }
    async shouldNotBeVisible() {
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expectSelector(this.parentSpan()).toBeVisible();
    }
    async shouldHaveValue(dateType, value) {
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.inputElement(dateType)).value).toEqual(value);
    }
    async shouldNotHaveValue(dateType, value) {
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.inputElement(dateType)).value).not.toEqual(value);
    }
    async shouldHaveInnerText(dateType, value) {
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.spanElement(dateType)).innerText).toEqual(value);
    }
    async shouldNotHaveInnerText(dateType, value) {
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.spanElement(dateType)).innerText).not.toEqual(value);
    }
    async click(dateType) {
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.click(this.spanElement(dateType));
    }
    async isVisible(options) {
        return await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__.controlsCommonActions.isVisible(this.parentSpan(), options);
    }
    async isExists(options) {
        return await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__.controlsCommonActions.isExists(this.parentSpan(), options);
    }
}


/***/ }),

/***/ "./src/widgets/controls/dropdown/dropdownByAttribute.ts":
/*!**************************************************************!*\
  !*** ./src/widgets/controls/dropdown/dropdownByAttribute.ts ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DropdownByAttribute": () => (/* binding */ DropdownByAttribute),
/* harmony export */   "dropdownByAttribute": () => (/* binding */ dropdownByAttribute)
/* harmony export */ });
/* harmony import */ var _dropdownCommon__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dropdownCommon */ "./src/widgets/controls/dropdown/dropdownCommon.ts");
// Copyright 2020 Knowledge Expert SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

class DropdownByAttribute extends _dropdownCommon__WEBPACK_IMPORTED_MODULE_0__.DropdownCommon {
    constructor(attributeName, attributeValue, container = '') {
        super(`${container}//select[@data-ctl='["Dropdown"]' and contains (@${attributeName}, "${attributeValue}")]`);
    }
}
function dropdownByAttribute(attributeName, attributeValue, container) {
    return new DropdownByAttribute(attributeName, attributeValue, container);
}


/***/ }),

/***/ "./src/widgets/controls/dropdown/dropdownByCss.ts":
/*!********************************************************!*\
  !*** ./src/widgets/controls/dropdown/dropdownByCss.ts ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DropdownByCss": () => (/* binding */ DropdownByCss),
/* harmony export */   "dropdownByCss": () => (/* binding */ dropdownByCss)
/* harmony export */ });
/* harmony import */ var _dropdownCommon__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dropdownCommon */ "./src/widgets/controls/dropdown/dropdownCommon.ts");
// Copyright 2020 Knowledge Expert SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

class DropdownByCss extends _dropdownCommon__WEBPACK_IMPORTED_MODULE_0__.DropdownCommon {
    constructor(css) {
        super(`${css}`);
    }
}
function dropdownByCss(css) {
    return new DropdownByCss(css);
}


/***/ }),

/***/ "./src/widgets/controls/dropdown/dropdownByLabel.ts":
/*!**********************************************************!*\
  !*** ./src/widgets/controls/dropdown/dropdownByLabel.ts ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DropdownByLabel": () => (/* binding */ DropdownByLabel),
/* harmony export */   "dropdownByLabel": () => (/* binding */ dropdownByLabel)
/* harmony export */ });
/* harmony import */ var _dropdownCommon__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dropdownCommon */ "./src/widgets/controls/dropdown/dropdownCommon.ts");
// Copyright 2020 Knowledge Expert SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

class DropdownByLabel extends _dropdownCommon__WEBPACK_IMPORTED_MODULE_0__.DropdownCommon {
    constructor(label, container = '') {
        super(`${container}//label[contains(text(), "${label}") and not(contains(@for, "${label}"))]/following-sibling::div/select[@data-ctl='["Dropdown"]']`);
    }
}
function dropdownByLabel(label, container) {
    return new DropdownByLabel(label, container);
}


/***/ }),

/***/ "./src/widgets/controls/dropdown/dropdownByXPath.ts":
/*!**********************************************************!*\
  !*** ./src/widgets/controls/dropdown/dropdownByXPath.ts ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DropdownByXPath": () => (/* binding */ DropdownByXPath),
/* harmony export */   "dropdownByXPath": () => (/* binding */ dropdownByXPath)
/* harmony export */ });
/* harmony import */ var _dropdownCommon__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dropdownCommon */ "./src/widgets/controls/dropdown/dropdownCommon.ts");
// Copyright 2020 Knowledge Expert SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

class DropdownByXPath extends _dropdownCommon__WEBPACK_IMPORTED_MODULE_0__.DropdownCommon {
    constructor(xpath, container = '') {
        super(`${container}${xpath}`);
    }
}
function dropdownByXPath(xpath, container) {
    return new DropdownByXPath(xpath, container);
}


/***/ }),

/***/ "./src/widgets/controls/dropdown/dropdownCommon.ts":
/*!*********************************************************!*\
  !*** ./src/widgets/controls/dropdown/dropdownCommon.ts ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DropdownCommon": () => (/* binding */ DropdownCommon)
/* harmony export */ });
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! test-maker */ "test-maker");
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(test_maker__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../controlsCommonActions */ "./src/widgets/controls/controlsCommonActions.ts");
/* harmony import */ var _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../helpers/options/methodOptions */ "./helpers/options/methodOptions.ts");
/* harmony import */ var _pega_error_messages_pegaErrorMessages__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../pega-error-messages/pegaErrorMessages */ "./src/widgets/controls/pega-error-messages/pegaErrorMessages.ts");
// Copyright 2020 Knowledge Expert SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.




class DropdownCommon {
    constructor(element) {
        this.element = element;
    }
    async waitUntilVisibility(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__.controlsCommonActions.waitUntilVisibility(this.element, options);
    }
    async waitUntilVisibilityByText(text, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__.controlsCommonActions.waitUntilVisibilityByText(this.element, text, options);
    }
    async waitUntilVisibilityByAttribute(attributeName, attributeValue, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__.controlsCommonActions.waitUntilVisibilityByAttribute(this.element, attributeName, attributeValue, options);
    }
    async waitUntilVisibilityByIndex(index, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__.controlsCommonActions.waitUntilVisibilityByIndex(this.element, index, options);
    }
    async waitUntilCollectionOfElementsSizeIsGreaterOrEqual(expectedSize, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__.controlsCommonActions.waitUntilCollectionOfElementsSizeIsGreaterOrEqual(this.element, expectedSize, options);
    }
    async waitUntilCollectionOfElementsSizeIsLessThan(expectedSize, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__.controlsCommonActions.waitUntilCollectionOfElementsSizeIsLessThan(this.element, expectedSize, options);
    }
    async waitUntilInvisibility(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__.controlsCommonActions.waitUntilInvisibility(this.element, options);
    }
    async waitUntilInvisibilityByIndex(index, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__.controlsCommonActions.waitUntilInvisibilityByIndex(this.element, index, options);
    }
    async click(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__.controlsCommonActions.click(this.element, options);
    }
    async focus(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__.controlsCommonActions.focus(this.element, options);
    }
    async pressTab() {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__.controlsCommonActions.pressTab();
    }
    async shouldBeVisible(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__.controlsCommonActions.shouldBeVisible(this.element, options);
    }
    async shouldNotBeVisible(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__.controlsCommonActions.shouldNotBeVisible(this.element, options);
    }
    async waitUntilElementExists(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__.controlsCommonActions.waitUntilElementExists(this.element, options);
    }
    async waitUntilElementNotExist(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__.controlsCommonActions.waitUntilElementNotExist(this.element, options);
    }
    async waitForSelectActionabilityCheck(checks, isFilterByVisibility = true) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__.controlsCommonActions.waitForSelectActionabilityCheck(this.element, checks, isFilterByVisibility = true);
    }
    async shouldExist(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__.controlsCommonActions.shouldExist(this.element, options);
    }
    async shouldNotExist(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__.controlsCommonActions.shouldNotExist(this.element, options);
    }
    async shouldHaveText(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__.controlsCommonActions.shouldHaveText(this.element, value, options);
    }
    async shouldHaveExactText(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__.controlsCommonActions.shouldHaveExactText(this.element, value, options);
    }
    async shouldNotHaveExactText(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__.controlsCommonActions.shouldNotHaveExactText(this.element, value, options);
    }
    async shouldNotHaveText(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__.controlsCommonActions.shouldNotHaveText(this.element, value, options);
    }
    async shouldHaveValue(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__.controlsCommonActions.shouldHaveValue(this.element, value, options);
    }
    async shouldNotHaveValue(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__.controlsCommonActions.shouldNotHaveValue(this.element, value, options);
    }
    async shouldBeEnabled(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__.controlsCommonActions.shouldBeEnabled(this.element, options);
    }
    async shouldBeDisabled(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__.controlsCommonActions.shouldBeDisabled(this.element, options);
    }
    async waitForTheOptionToBeVisible(value, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_2__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.waitForSelectorToBeVisible((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(`${this.element}//option[@value="${value}"]`, {
            timeout: this.actualOptions.timeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        }));
    }
    async selectAndCheckTheValue(value, options) {
        await this.select(value, options);
        await this.shouldHaveSelectedItem(value);
    }
    async select(value, options) {
        if (value === undefined || value === null || value === '') {
            return;
        }
        await this.shouldBeVisible();
        await this.shouldBeEnabled();
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_2__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.selectOption((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.element, this.actualOptions).nth(this.actualOptions.index), [value]);
    }
    async shouldHaveSelectedItem(value, options) {
        await this.shouldHaveValue(value, options);
    }
    async shouldNotHaveSelectedItem(value, options) {
        await this.shouldNotHaveValue(value, options);
    }
    async isSelected(value, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_2__.methodOptions.setOptions(options);
        let actualValue = await (0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(`${this.element}`, this.actualOptions)
            .nth(this.actualOptions.index).value;
        if (actualValue == value) {
            this.selected = true;
        }
        return this.selected;
    }
    async shouldHaveAttributeSelected(value, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_2__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(`${this.element}//option[@value="${value}"]`, this.actualOptions)
            .nth(this.actualOptions.index).hasAttribute('selected'), {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        }).toBeOk();
    }
    async shouldNotHaveAttributeSelected(value, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_2__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(`${this.element}//option[@value="${value}"]`, this.actualOptions)
            .nth(this.actualOptions.index).hasAttribute('selected'), {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        }).not.toBeOk();
    }
    async hasSelectedAttribute(value, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_2__.methodOptions.setOptions(options);
        this.selected = await (0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(`${this.element}//option[@value="${value}"]`, this.actualOptions)
            .nth(this.actualOptions.index).hasAttribute('selected'), {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        };
        return this.selected;
    }
    async shouldHaveSuggestedItems(values, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_2__.methodOptions.setOptions(options);
        for (let i = 0; i < values.length; i++) {
            let value = values[i];
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expectSelector((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(`${this.element}//option[@value="${value}"]`, this.actualOptions), {
                timeout: this.actualOptions.assertionTimeout,
                interval: this.actualOptions.interval,
                retries: this.actualOptions.retries
            }).toExist();
        }
    }
    async shouldOnlyHaveSuggestedItems(values, isPlaceholderPresent = true, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_2__.methodOptions.setOptions(options);
        let valuesNumber = values.length;
        let dropdownValuesNumber = await (0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(`${this.element}//option[@value]`, this.actualOptions).count;
        if (isPlaceholderPresent) {
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect(valuesNumber).toEqual(dropdownValuesNumber - 1);
        }
        else {
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect(valuesNumber).toEqual(dropdownValuesNumber - 1);
        }
        for (let i = 0; i < values.length; i++) {
            let value = values[i];
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expectSelector((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(`${this.element}//option[@value="${value}"]`, this.actualOptions), {
                timeout: this.actualOptions.assertionTimeout,
                interval: this.actualOptions.interval,
                retries: this.actualOptions.retries
            }).toExist();
        }
    }
    async shouldHaveSuggestedItemsByInnerText(innerTexts, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_2__.methodOptions.setOptions(options);
        for (let i = 0; i < innerTexts.length; i++) {
            let text = innerTexts[i];
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expectSelector((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(`${this.element}//option[text()="${text}"]`, this.actualOptions), {
                timeout: this.actualOptions.assertionTimeout,
                interval: this.actualOptions.interval,
                retries: this.actualOptions.retries
            }).toExist();
        }
    }
    async shouldNotHaveSuggestedItemsByInnerText(innerTexts, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_2__.methodOptions.setOptions(options);
        for (let i = 0; i < innerTexts.length; i++) {
            let text = innerTexts[i];
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expectSelector((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(`${this.element}//option[text()="${text}"]`, this.actualOptions), {
                timeout: this.actualOptions.assertionTimeout,
                interval: this.actualOptions.interval,
                retries: this.actualOptions.retries
            }).not.toExist();
        }
    }
    async shouldHaveInnerTextPerOptionValue(optionValue, innerText, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_2__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expectSelector((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(`${this.element}//option[@value="${optionValue}"]`), {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        }).toHaveInnerText(innerText);
    }
    async shouldNotHaveInnerTextPerOptionValue(optionValue, innerText, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_2__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expectSelector((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(`${this.element}//option[@value="${optionValue}"]`), {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        }).not.toHaveInnerText(innerText);
    }
    async shouldHaveInnerTextsPerOptionValues(optionValues, innerTexts, options) {
        for (let i = 0; i < optionValues.length; i++) {
            let value = optionValues[i];
            let text = innerTexts[i];
            await this.shouldHaveInnerTextPerOptionValue(value, text, options);
        }
    }
    async shouldNotHaveSuggestedItems(values, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_2__.methodOptions.setOptions(options);
        //await this.click(this.actualOptions);
        //await I.wait(1000);
        for (let i = 0; i < values.length; i++) {
            let value = values[i];
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expectSelector((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(`${this.element}//option[@value="${value}"]`, this.actualOptions), {
                timeout: this.actualOptions.assertionTimeout,
                interval: this.actualOptions.interval,
                retries: this.actualOptions.retries
            }).not.toExist();
        }
    }
    async shouldBeRequired(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__.controlsCommonActions.shouldBeRequired(this.element, options);
    }
    async shouldNotBeRequired(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__.controlsCommonActions.shouldNotBeRequired(this.element, options);
    }
    async shouldHaveValidationType(validationType, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__.controlsCommonActions.shouldHaveValidationType(this.element, validationType, options);
    }
    async shouldNotHaveValidationType(validationType, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__.controlsCommonActions.shouldNotHaveValidationType(this.element, validationType, options);
    }
    async isListOfItemsVisible(values, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_2__.methodOptions.setOptions(options);
        for (let i = 0; i < values.length; i++) {
            let value = values[i];
            let item = (0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(`${this.element}//option[@value="${value}"]`, this.actualOptions).filterVisible();
            if (!item.visible) {
                return false;
            }
        }
        return true;
    }
    async getValue() {
        return await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__.controlsCommonActions.getValue(this.element);
    }
    async getText() {
        return await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__.controlsCommonActions.getText(this.element);
    }
    error() {
        return new _pega_error_messages_pegaErrorMessages__WEBPACK_IMPORTED_MODULE_3__.PegaErrorMessages(this.element);
    }
    async isVisible(options) {
        return await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__.controlsCommonActions.isVisible(this.element, options);
    }
    async isExists(options) {
        return await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__.controlsCommonActions.isExists(this.element, options);
    }
}


/***/ }),

/***/ "./src/widgets/controls/image.ts":
/*!***************************************!*\
  !*** ./src/widgets/controls/image.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ImageElement": () => (/* binding */ ImageElement)
/* harmony export */ });
/* harmony import */ var _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./controlsCommonActions */ "./src/widgets/controls/controlsCommonActions.ts");
/* harmony import */ var _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../helpers/options/methodOptions */ "./helpers/options/methodOptions.ts");
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! test-maker */ "test-maker");
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(test_maker__WEBPACK_IMPORTED_MODULE_2__);
// Copyright 2020 Knowledge Expert SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.



class ImageElement {
    constructor(attributeName, attributeValue, container = '') {
        this.container = container;
        this.attributeName = attributeName;
        this.attributeValue = attributeValue;
        this.element = `${container}//img[@data-ctl='Icon' and contains (@${this.attributeName}, "${this.attributeValue}")]`;
    }
    async waitUntilVisibility(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilVisibility(this.element, options);
    }
    async waitUntilVisibilityByAttribute(attributeName, attributeValue, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilVisibilityByAttribute(this.element, attributeName, attributeValue, options);
    }
    async waitUntilVisibilityByIndex(index, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilVisibilityByIndex(this.element, index, options);
    }
    async waitUntilCollectionOfElementsSizeIsGreaterOrEqual(expectedSize, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilCollectionOfElementsSizeIsGreaterOrEqual(this.element, expectedSize, options);
    }
    async waitUntilCollectionOfElementsSizeIsLessThan(expectedSize, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilCollectionOfElementsSizeIsLessThan(this.element, expectedSize, options);
    }
    async waitUntilInvisibility(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilInvisibility(this.element, options);
    }
    async waitUntilInvisibilityByIndex(index, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilInvisibilityByIndex(this.element, index, options);
    }
    async shouldBeVisible(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldBeVisible(this.element, options);
    }
    async shouldNotBeVisible(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldNotBeVisible(this.element, options);
    }
    async waitUntilElementExists(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilElementExists(this.element, options);
    }
    async waitUntilElementNotExist(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilElementNotExist(this.element, options);
    }
    async waitForSelectActionabilityCheck(checks, isFilterByVisibility = true) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitForSelectActionabilityCheck(this.element, checks, isFilterByVisibility = true);
    }
    async shouldExist(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldExist(this.element, options);
    }
    async shouldNotExist(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldNotExist(this.element, options);
    }
    async shouldBeVisibleByIndex(index, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_2__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_2__.Selector)(this.element, this.actualOptions)
            .filterVisible().nth(index).visible, {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        }).toBeOk();
    }
    async shouldNotBeVisibleByIndex(index, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_2__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_2__.Selector)(this.element, this.actualOptions).nth(index).visible, {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        }).not.toBeOk();
    }
    toString() {
        return `(Image with ${this.attributeName}='${this.attributeValue}')`;
    }
    async isVisible(options) {
        return await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.isVisible(this.element, options);
    }
    async isExists(options) {
        return await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.isExists(this.element, options);
    }
}


/***/ }),

/***/ "./src/widgets/controls/label.ts":
/*!***************************************!*\
  !*** ./src/widgets/controls/label.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Label": () => (/* binding */ Label)
/* harmony export */ });
/* harmony import */ var _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./controlsCommonActions */ "./src/widgets/controls/controlsCommonActions.ts");
/* harmony import */ var _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../helpers/options/methodOptions */ "./helpers/options/methodOptions.ts");
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! test-maker */ "test-maker");
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(test_maker__WEBPACK_IMPORTED_MODULE_2__);
// Copyright 2020 Knowledge Expert SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.



class Label {
    constructor(attributeName, attributeValue, container = '') {
        this.container = container;
        this.attributeName = attributeName;
        this.attributeValue = attributeValue;
        this.element = `${container}//label[contains (@${this.attributeName}, "${this.attributeValue}")]`;
    }
    async waitUntilVisibility(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilVisibility(this.element, options);
    }
    async waitUntilVisibilityByText(text, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilVisibilityByText(this.element, text, options);
    }
    async waitUntilVisibilityByAttribute(attributeName, attributeValue, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilVisibilityByAttribute(this.element, attributeName, attributeValue, options);
    }
    async waitUntilVisibilityByIndex(index, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilVisibilityByIndex(this.element, index, options);
    }
    async waitUntilInvisibility(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilInvisibility(this.element, options);
    }
    async waitUntilInvisibilityByIndex(index, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilInvisibilityByIndex(this.element, index, options);
    }
    async shouldBeVisible(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldBeVisible(this.element, options);
    }
    async shouldNotBeVisible(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldNotBeVisible(this.element, options);
    }
    async waitUntilElementExists(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilElementExists(this.element, options);
    }
    async waitUntilElementNotExist(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilElementNotExist(this.element, options);
    }
    async waitForSelectActionabilityCheck(checks, isFilterByVisibility = true) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitForSelectActionabilityCheck(this.element, checks, isFilterByVisibility = true);
    }
    async shouldExist(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldExist(this.element, options);
    }
    async shouldNotExist(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldNotExist(this.element, options);
    }
    async shouldNotBeBlank(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldNotBeBlank(this.element, options);
    }
    async shouldHaveText(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldHaveText(this.element, value, options);
    }
    async shouldNotHaveText(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldNotHaveText(this.element, value, options);
    }
    async shouldHaveExactText(value, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        if (options.index) {
            await this.shouldHaveExactTextByIndex(value, this.actualOptions);
        }
        else {
            await test_maker__WEBPACK_IMPORTED_MODULE_2__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_2__.Selector)(this.element, this.actualOptions)
                .filterVisible().innerText, {
                timeout: this.actualOptions.assertionTimeout,
                interval: this.actualOptions.interval,
                retries: this.actualOptions.retries
            })
                .toEqual(value);
        }
    }
    async shouldHaveExactTextByIndex(value, index, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_2__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_2__.Selector)(this.element, this.actualOptions)
            .filterVisible().nth(index).innerText, {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        })
            .toEqual(value);
    }
    async shouldNotHaveExactTextByIndex(value, index, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_2__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_2__.Selector)(this.element, this.actualOptions)
            .filterVisible().nth(index).innerText, {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        })
            .not.toContain(value);
    }
    async shouldNotBeBlankByIndex(index, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldNotBeBlankByIndex(this.element, index, options);
    }
    async shouldHaveTextByIndex(value, index, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_2__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_2__.Selector)(this.element, this.actualOptions)
            .filterVisible().nth(index).innerText, {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        })
            .toContain(value);
    }
    async shouldNotHaveTextByIndex(value, index, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_2__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_2__.Selector)(this.element, this.actualOptions)
            .filterVisible().nth(index).innerText, {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        })
            .not.toContain(value);
    }
    async shouldBeVisibleByIndex(index, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_2__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_2__.Selector)(this.element, this.actualOptions)
            .filterVisible().nth(index).visible, {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        }).toBeOk();
    }
    async shouldNotBeVisibleByIndex(index, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_2__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_2__.Selector)(this.element, this.actualOptions).nth(index).visible, {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        }).not.toBeOk();
    }
    async getText() {
        return await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.getText(this.element);
    }
    toString() {
        return `(Readonly text box with ${this.attributeName}='${this.attributeValue}')`;
    }
    async isVisible(options) {
        return await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.isVisible(this.element, options);
    }
    async isExists(options) {
        return await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.isExists(this.element, options);
    }
}


/***/ }),

/***/ "./src/widgets/controls/logo.ts":
/*!**************************************!*\
  !*** ./src/widgets/controls/logo.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Logo": () => (/* binding */ Logo)
/* harmony export */ });
/* harmony import */ var _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./controlsCommonActions */ "./src/widgets/controls/controlsCommonActions.ts");
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! test-maker */ "test-maker");
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(test_maker__WEBPACK_IMPORTED_MODULE_1__);
// Copyright 2020 Knowledge Expert SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


class Logo {
    constructor(attributeName = `data-test-id`, attributeValue = `2019032707440904433327`) {
        this.attributeName = attributeName;
        this.attributeValue = attributeValue;
        this.element = `//img[@data-ctl='Icon' and contains (@${this.attributeName}, "${this.attributeValue}")]`;
    }
    async waitUntilVisibility(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilVisibility(this.element, options);
    }
    async waitUntilInvisibility(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilInvisibility(this.element, options);
    }
    async shouldBeVisible(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldBeVisible(this.element, options);
    }
    async shouldNotBeVisible(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldNotBeVisible(this.element, options);
    }
    async waitUntilElementExists(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilElementExists(this.element, options);
    }
    async waitUntilElementNotExist(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilElementNotExist(this.element, options);
    }
    async waitForSelectActionabilityCheck(checks, isFilterByVisibility = true) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitForSelectActionabilityCheck(this.element, checks, isFilterByVisibility = true);
    }
    async shouldExist(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldExist(this.element, options);
    }
    async shouldNotExist(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldNotExist(this.element, options);
    }
    async shouldHaveSourceFile(sourceFileName, options) {
        await test_maker__WEBPACK_IMPORTED_MODULE_1__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_1__.Selector)(this.element, options).getAttribute('src')).toContain(sourceFileName);
    }
    async shouldNotHaveSourceFile(sourceFileName, options) {
        await test_maker__WEBPACK_IMPORTED_MODULE_1__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_1__.Selector)(this.element, options).getAttribute('src')).not.toContain(sourceFileName);
    }
    toString() {
        return `(Logo with ${this.attributeName}='${this.attributeValue}')`;
    }
    async isVisible(options) {
        return await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.isVisible(this.element, options);
    }
    async isExists(options) {
        return await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.isExists(this.element, options);
    }
}


/***/ }),

/***/ "./src/widgets/controls/multiSelect.ts":
/*!*********************************************!*\
  !*** ./src/widgets/controls/multiSelect.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MultiSelect": () => (/* binding */ MultiSelect)
/* harmony export */ });
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! test-maker */ "test-maker");
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(test_maker__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../helpers/options/methodOptions */ "./helpers/options/methodOptions.ts");
/* harmony import */ var _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./controlsCommonActions */ "./src/widgets/controls/controlsCommonActions.ts");
/* harmony import */ var _pega_error_messages_pegaErrorMessages__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pega-error-messages/pegaErrorMessages */ "./src/widgets/controls/pega-error-messages/pegaErrorMessages.ts");
/* harmony import */ var _pega__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../pega */ "./src/pega.ts");
// Copyright 2020 Knowledge Expert SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.





class MultiSelect {
    constructor(attributeName, attributeValue, args) {
        this.container = '';
        if (args === null || args === void 0 ? void 0 : args.container) {
            this.container = args.container;
        }
        this.attributeValue = attributeValue;
        this.attributeName = attributeName;
        if ((args === null || args === void 0 ? void 0 : args.elementType) == 'div') {
            this.element = `${this.container}//div[contains(@data-test-id, "${this.attributeValue}")]/input[@data-ctl='["MultiSelect"]']`;
        }
        else {
            this.element = `${this.container}//input[@data-ctl='["MultiSelect"]' and contains (@${this.attributeName}, "${this.attributeValue}")]`;
        }
    }
    async waitUntilVisibility(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.waitUntilVisibility(this.element, options);
    }
    async waitUntilVisibilityByText(text, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.waitUntilVisibilityByText(this.element, text, options);
    }
    async waitUntilVisibilityByAttribute(attributeName, attributeValue, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.waitUntilVisibilityByAttribute(this.element, attributeName, attributeValue, options);
    }
    async waitUntilVisibilityByIndex(index, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.waitUntilVisibilityByIndex(this.element, index, options);
    }
    async waitUntilCollectionOfElementsSizeIsGreaterOrEqual(expectedSize, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.waitUntilCollectionOfElementsSizeIsGreaterOrEqual(this.element, expectedSize, options);
    }
    async waitUntilCollectionOfElementsSizeIsLessThan(expectedSize, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.waitUntilCollectionOfElementsSizeIsLessThan(this.element, expectedSize, options);
    }
    async waitUntilInvisibility(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.waitUntilInvisibility(this.element, options);
    }
    async waitUntilInvisibilityByIndex(index, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.waitUntilInvisibilityByIndex(this.element, index, options);
    }
    async waitUntilElementExists(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.waitUntilElementExists(this.element, options);
    }
    async waitUntilElementNotExist(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.waitUntilElementNotExist(this.element, options);
    }
    async waitForSelectActionabilityCheck(checks, isFilterByVisibility = true) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.waitForSelectActionabilityCheck(this.element, checks, isFilterByVisibility = true);
    }
    async click(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.click(this.element, options);
    }
    async focus(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.focus(this.element, options);
    }
    async pressTab() {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.pressTab();
    }
    async set(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.set(this.element, value, options);
    }
    async shouldBeVisible(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.shouldBeVisible(this.element, options);
    }
    async shouldNotBeVisible(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.shouldNotBeVisible(this.element, options);
    }
    async shouldExist(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.shouldExist(this.element, options);
    }
    async shouldNotExist(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.shouldNotExist(this.element, options);
    }
    async shouldHaveText(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.shouldHaveText(this.element, value, options);
    }
    async shouldNotHaveText(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.shouldNotHaveText(this.element, value, options);
    }
    async shouldHaveExactText(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.shouldHaveExactText(this.element, value, options);
    }
    async shouldNotHaveExactText(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.shouldNotHaveExactText(this.element, value, options);
    }
    async shouldHaveValue(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.shouldHaveValue(this.element, value, options);
    }
    async shouldNotHaveValue(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.shouldNotHaveValue(this.element, value, options);
    }
    async shouldBeEnabled(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.shouldBeEnabled(this.element, options);
    }
    async shouldBeDisabled(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.shouldBeDisabled(this.element, options);
    }
    async selectOneValueFromList(value, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        if (value === undefined) {
            return;
        }
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.hover((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(`${this.element}/following-sibling::i[contains (@class, "caret-down")]`, this.actualOptions).filterVisible())
            .click((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(`${this.element}/following-sibling::i[contains (@class, "caret-down")]`, this.actualOptions).filterVisible())
            .waitForSelectorToBeVisible((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(`//div[@id="msresults-list"]//li[contains(@data-for-row, "${value}")]`, this.actualOptions))
            .click((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(`//div[@id="msresults-list"]//li[contains(@data-for-row, "${value}")]`, this.actualOptions));
    }
    async selectValuesFromList(values, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        if (values === undefined) {
            return;
        }
        for (let i = 0; i < values.length; i++) {
            await this.selectOneValueFromList(values[i], options);
        }
    }
    async assertListOfSelectedItemsHasValue(value, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(`${this.element}/ancestor::div[@class="field-item dataValueWrite"]//span[@title="${value}"]`, this.actualOptions).visible, {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        }).toBeTrue();
    }
    async assertListOfSelectedItemsHasValues(values, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        for (let i = 0; i < values.length; i++) {
            await this.assertListOfSelectedItemsHasValue(values[i], this.actualOptions);
        }
    }
    async assertListOfSelectedItemsHasNoValue(value, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(`${this.element}/ancestor::div[@class="field-item dataValueWrite"]//span[@title="${value}"]`, this.actualOptions).exists, {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        }).not.toBeTrue();
    }
    async assertListOfSelectedItemsHasNoValues(values, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        for (let i = 0; i < values.length; i++) {
            await this.assertListOfSelectedItemsHasNoValue(values[i], this.actualOptions);
        }
    }
    async assertChoiceOfOfferFieldHasSuggestedValue(value, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await this.openList(this.actualOptions);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(`//div[@id="msresults-list"]//li[contains(@data-for-row, "${value}")]`, this.actualOptions).visible, {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        }).toBeOk();
        await this.closeList(this.actualOptions);
    }
    async assertChoiceOfOfferFieldHasSuggestedValues(values, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await this.openList(this.actualOptions);
        for (let i = 0; i < values.length; i++) {
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(`//div[@id="msresults-list"]//li[contains(@data-for-row, "${values[i]}")]`, this.actualOptions).visible, {
                timeout: this.actualOptions.assertionTimeout,
                interval: this.actualOptions.interval,
                retries: this.actualOptions.retries
            }).toBeOk();
        }
        await this.closeList(this.actualOptions);
    }
    async assertChoiceOfOfferFieldHasNoSuggestedValue(value, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await this.openList(this.actualOptions);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(`//div[@id="msresults-list"]//li[contains(@data-for-row, "${value}")]`, this.actualOptions).exists, {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        }).not.toBeOk();
        await this.closeList(this.actualOptions);
    }
    async assertChoiceOfOfferFieldHasNoSuggestedValues(values, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await this.openList(this.actualOptions);
        for (let i = 0; i < values.length; i++) {
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(`//div[@id="msresults-list"]//li[contains(@data-for-row, "${values[i]}")]`, this.actualOptions).exists, {
                timeout: this.actualOptions.assertionTimeout,
                interval: this.actualOptions.interval,
                retries: this.actualOptions.retries
            }).not.toBeOk();
        }
        await this.closeList(this.actualOptions);
    }
    async deleteItemByTitle(value) {
        const itemSelector = `${this.element}/ancestor::div[@class="field-item dataValueWrite"]//span[@title="${value}"]`;
        if (await (0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(itemSelector).exists) {
            await _pega__WEBPACK_IMPORTED_MODULE_4__.pega.elementByXpath(itemSelector + `//div[@class="token-cancel token-cancel-img"]`).click();
        }
    }
    async openList(options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        let openListArrow = `${this.element}/ancestor::div[@class="field-item dataValueWrite"]//i[contains (@class, "caret-down")]`;
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.hover((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(openListArrow).filterVisible(), this.actualOptions)
            .click((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(openListArrow, this.actualOptions)
            .filterVisible());
    }
    async closeList(options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await this.click(this.actualOptions);
    }
    async shouldBeRequired(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.shouldBeRequired(this.element, options);
    }
    async shouldNotBeRequired(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.shouldNotBeRequired(this.element, options);
    }
    async shouldHaveValidationType(validationType, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.shouldHaveValidationType(this.element, validationType, options);
    }
    async shouldNotHaveValidationType(validationType, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.shouldNotHaveValidationType(this.element, validationType, options);
    }
    async getValue() {
        return await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.getValue(this.element);
    }
    async getText() {
        return await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.getText(this.element);
    }
    toString() {
        return `(MultiSelect with ${this.attributeName}='${this.attributeValue}')`;
    }
    error() {
        return new _pega_error_messages_pegaErrorMessages__WEBPACK_IMPORTED_MODULE_3__.PegaErrorMessages(this.element);
    }
    async isVisible(options) {
        return await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.isVisible(this.element, options);
    }
    async isExists(options) {
        return await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.isExists(this.element, options);
    }
}


/***/ }),

/***/ "./src/widgets/controls/pega-error-messages/pegaErrorMessages.ts":
/*!***********************************************************************!*\
  !*** ./src/widgets/controls/pega-error-messages/pegaErrorMessages.ts ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PegaErrorMessages": () => (/* binding */ PegaErrorMessages)
/* harmony export */ });
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! test-maker */ "test-maker");
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(test_maker__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _pega__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../pega */ "./src/pega.ts");
// Copyright 2021 Knowledge Expert SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


class PegaErrorMessages {
    constructor(controlElement) {
        this.errorMessageContainer = `//ancestor::div[@class="field-item dataValueWrite"]//div[contains(@class, "icon-error")]/span`;
        this.controlElement = controlElement;
    }
    element() {
        return (0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.controlElement).find(this.errorMessageContainer).filterVisible();
    }
    async shouldBeVisible() {
        await _pega__WEBPACK_IMPORTED_MODULE_1__.pega.alert.accept();
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expectSelector(this.element()).toBeVisible();
    }
    async shouldNotBeVisible() {
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expectSelector(this.element()).toBeInvisible();
    }
    async shouldHaveText(text) {
        await _pega__WEBPACK_IMPORTED_MODULE_1__.pega.alert.accept();
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expectSelector(this.element()).toHaveInnerText(text);
    }
    async shouldNotHaveText(text) {
        await _pega__WEBPACK_IMPORTED_MODULE_1__.pega.alert.accept();
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expectSelector(this.element()).not.toHaveInnerText(text);
    }
    async shouldHaveValidEmail(text = 'Enter a valid email address') {
        await _pega__WEBPACK_IMPORTED_MODULE_1__.pega.alert.accept();
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expectSelector(this.element()).toHaveInnerText(text);
    }
    async shouldHaveValidPhoneNumber(text = 'Enter a valid phone number') {
        await _pega__WEBPACK_IMPORTED_MODULE_1__.pega.alert.accept();
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expectSelector(this.element()).toHaveInnerText(text);
    }
    async valueCanNotBeBlank(text = 'Value cannot be blank') {
        await _pega__WEBPACK_IMPORTED_MODULE_1__.pega.alert.accept();
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expectSelector(this.element()).toHaveInnerText(text);
    }
}


/***/ }),

/***/ "./src/widgets/controls/radiobuttons/radiobuttonByAttribute.ts":
/*!*********************************************************************!*\
  !*** ./src/widgets/controls/radiobuttons/radiobuttonByAttribute.ts ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RadiobuttonByAttribute": () => (/* binding */ RadiobuttonByAttribute)
/* harmony export */ });
/* harmony import */ var _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../controlsCommonActions */ "./src/widgets/controls/controlsCommonActions.ts");
/* harmony import */ var _radiobuttonCommon__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./radiobuttonCommon */ "./src/widgets/controls/radiobuttons/radiobuttonCommon.ts");
/* harmony import */ var _pega_error_messages_pegaErrorMessages__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../pega-error-messages/pegaErrorMessages */ "./src/widgets/controls/pega-error-messages/pegaErrorMessages.ts");
// Copyright 2020 Knowledge Expert SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.



class RadiobuttonByAttribute {
    constructor(attributeName, attributeValue, container = '') {
        this.container = container;
        this.attributeName = attributeName;
        this.attributeValue = attributeValue;
    }
    radioButtonGroupElement() {
        return `${this.container}//div[@data-ctl='RadioGroup'][@${this.attributeName}=\"${this.attributeValue}\"]`;
    }
    radioButtonElements() {
        return `${this.container}//div[@data-ctl='RadioGroup'][@${this.attributeName}=\"${this.attributeValue}\"]//input[@type='radio']`;
    }
    radioButtonElement(value) {
        return `${this.container}//div[@data-ctl='RadioGroup'][@${this.attributeName}=\"${this.attributeValue}\"]//input[@type='radio' and @value='${value}']`;
    }
    radioButtonLabelSelector(value) {
        return `${this.radioButtonElement(value)}/following-sibling::label`;
    }
    // public radioButtonElementToCheck(value: string): string {
    //     return `${this.container}//div[@data-ctl='RadioGroup'][@data-test-id='${this.testId}']//label[contains(@for, '${value}')]
    //     /parent::span[contains(@class, 'col')]/input[@type='radio']`;
    // }
    async waitUntilVisibility(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilVisibility(this.radioButtonElement(value), options);
    }
    async waitUntilElementExists(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilElementExists(this.radioButtonElement(value), options);
    }
    async waitUntilElementNotExist(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilElementNotExist(this.radioButtonElement(value), options);
    }
    async waitForSelectActionabilityCheck(value, checks, isFilterByVisibility = true) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitForSelectActionabilityCheck(this.radioButtonElement(value), checks, isFilterByVisibility = true);
    }
    async shouldExist(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldExist(this.radioButtonElement(value), options);
    }
    async shouldNotExist(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldNotExist(this.radioButtonElement(value), options);
    }
    async waitUntilVisibilityByAttribute(value, attributeName, attributeValue, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilVisibilityByAttribute(this.radioButtonElement(value), attributeName, attributeValue, options);
    }
    async waitUntilVisibilityByIndex(value, index, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilVisibilityByIndex(this.radioButtonElement(value), index, options);
    }
    async waitUntilCollectionOfElementsSizeIsGreaterOrEqual(value, expectedSize, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilCollectionOfElementsSizeIsGreaterOrEqual(this.radioButtonElement(value), expectedSize, options);
    }
    async waitUntilCollectionOfElementsSizeIsLessThan(value, expectedSize, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilCollectionOfElementsSizeIsLessThan(this.radioButtonElement(value), expectedSize, options);
    }
    async waitUntilInvisibility(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilInvisibility(this.radioButtonElement(value), options);
    }
    async waitUntilInvisibilityByIndex(value, index, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilInvisibilityByIndex(this.radioButtonElement(value), index, options);
    }
    async click(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.click(this.radioButtonLabelSelector(value), options);
    }
    async select(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.click(this.radioButtonLabelSelector(value), options);
    }
    async shouldBeVisible(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldBeVisible(this.radioButtonLabelSelector(value), options);
    }
    async shouldNotBeVisible(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldNotBeVisible(this.radioButtonLabelSelector(value), options);
    }
    async shouldBeChecked(value, options) {
        await _radiobuttonCommon__WEBPACK_IMPORTED_MODULE_1__.radiobuttonCommon.shouldBeChecked(this.radioButtonElement(value), options);
    }
    async shouldNotBeChecked(value, options) {
        await _radiobuttonCommon__WEBPACK_IMPORTED_MODULE_1__.radiobuttonCommon.shouldNotBeChecked(this.radioButtonElement(value), options);
    }
    async shouldBeEnabled(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldBeEnabled(this.radioButtonElement(value), options);
    }
    async shouldBeDisabled(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldBeDisabled(this.radioButtonElement(value), options);
    }
    toString() {
        return `(Radio Button Group with '${this.attributeName}=${this.attributeValue}')`;
    }
    error() {
        return new _pega_error_messages_pegaErrorMessages__WEBPACK_IMPORTED_MODULE_2__.PegaErrorMessages(this.radioButtonElements());
    }
    async isVisible(value, options) {
        return await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.isVisible(this.radioButtonElement(value), options);
    }
    async isExists(value, options) {
        return await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.isExists(this.radioButtonElement(value), options);
    }
}


/***/ }),

/***/ "./src/widgets/controls/radiobuttons/radiobuttonById.ts":
/*!**************************************************************!*\
  !*** ./src/widgets/controls/radiobuttons/radiobuttonById.ts ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RadiobuttonById": () => (/* binding */ RadiobuttonById)
/* harmony export */ });
/* harmony import */ var _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../controlsCommonActions */ "./src/widgets/controls/controlsCommonActions.ts");
/* harmony import */ var _radiobuttonCommon__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./radiobuttonCommon */ "./src/widgets/controls/radiobuttons/radiobuttonCommon.ts");
/* harmony import */ var _pega_error_messages_pegaErrorMessages__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../pega-error-messages/pegaErrorMessages */ "./src/widgets/controls/pega-error-messages/pegaErrorMessages.ts");
// Copyright 2020 Knowledge Expert SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.



class RadiobuttonById {
    constructor(partialId, container = '') {
        this.partialId = partialId;
        this.container = container;
    }
    radioButtonElements() {
        return `${this.container}//label[contains (@for, "${this.partialId}")]`;
    }
    radioButtonElement(value) {
        return `${this.container}//label[contains (@for, "${this.partialId}") and contains(text(), "${value}")]`;
    }
    radioButtonElementToCheck(value) {
        return `${this.container}//label[contains (@for, "${this.partialId}") and contains(text(), "${value}")]/ancestor::span[contains(@class, "col")]/input[contains (@id, "${this.partialId}")]`;
    }
    async waitUntilVisibility(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilVisibility(this.radioButtonElement(value), options);
    }
    async waitUntilElementExists(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilElementExists(this.radioButtonElement(value), options);
    }
    async waitUntilElementNotExist(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilElementNotExist(this.radioButtonElement(value), options);
    }
    async waitForSelectActionabilityCheck(value, checks, isFilterByVisibility = true) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitForSelectActionabilityCheck(this.radioButtonElement(value), checks, isFilterByVisibility = true);
    }
    async shouldExist(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldExist(this.radioButtonElement(value), options);
    }
    async shouldNotExist(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldNotExist(this.radioButtonElement(value), options);
    }
    async waitUntilVisibilityByAttribute(value, attributeName, attributeValue, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilVisibilityByAttribute(this.radioButtonElement(value), attributeName, attributeValue, options);
    }
    async waitUntilVisibilityByIndex(value, index, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilVisibilityByIndex(this.radioButtonElement(value), index, options);
    }
    async waitUntilCollectionOfElementsSizeIsGreaterOrEqual(value, expectedSize, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilCollectionOfElementsSizeIsGreaterOrEqual(this.radioButtonElement(value), expectedSize, options);
    }
    async waitUntilCollectionOfElementsSizeIsLessThan(value, expectedSize, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilCollectionOfElementsSizeIsLessThan(this.radioButtonElement(value), expectedSize, options);
    }
    async waitUntilInvisibility(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilInvisibility(this.radioButtonElement(value), options);
    }
    async waitUntilInvisibilityByIndex(value, index, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilInvisibilityByIndex(this.radioButtonElement(value), index, options);
    }
    async click(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.click(this.radioButtonElement(value), options);
    }
    async select(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.click(this.radioButtonElement(value), options);
    }
    async shouldBeVisible(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldBeVisible(this.radioButtonElementToCheck(value), options);
    }
    async shouldNotBeVisible(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldNotBeVisible(this.radioButtonElementToCheck(value), options);
    }
    async shouldBeChecked(value, options) {
        await _radiobuttonCommon__WEBPACK_IMPORTED_MODULE_1__.radiobuttonCommon.shouldBeChecked(this.radioButtonElementToCheck(value), options);
    }
    async shouldNotBeChecked(value, options) {
        await _radiobuttonCommon__WEBPACK_IMPORTED_MODULE_1__.radiobuttonCommon.shouldNotBeChecked(this.radioButtonElementToCheck(value), options);
    }
    async shouldBeEnabled(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldBeEnabled(this.radioButtonElementToCheck(value), options);
    }
    async shouldBeDisabled(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldBeDisabled(this.radioButtonElementToCheck(value), options);
    }
    toString() {
        return `(Radio Button with partial id ${this.partialId}')`;
    }
    error() {
        return new _pega_error_messages_pegaErrorMessages__WEBPACK_IMPORTED_MODULE_2__.PegaErrorMessages(this.radioButtonElements());
    }
    async isVisible(value, options) {
        return await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.isVisible(this.radioButtonElement(value), options);
    }
    async isExists(value, options) {
        return await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.isExists(this.radioButtonElement(value), options);
    }
}


/***/ }),

/***/ "./src/widgets/controls/radiobuttons/radiobuttonCommon.ts":
/*!****************************************************************!*\
  !*** ./src/widgets/controls/radiobuttons/radiobuttonCommon.ts ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RadiobuttonCommon": () => (/* binding */ RadiobuttonCommon),
/* harmony export */   "radiobuttonCommon": () => (/* binding */ radiobuttonCommon)
/* harmony export */ });
/* harmony import */ var _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../helpers/options/methodOptions */ "./helpers/options/methodOptions.ts");
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! test-maker */ "test-maker");
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(test_maker__WEBPACK_IMPORTED_MODULE_1__);
// Copyright 2020 Knowledge Expert SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


class RadiobuttonCommon {
    async shouldBeChecked(elementToCheck, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_0__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_1__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_1__.Selector)(elementToCheck, this.actualOptions).filterVisible().nth(this.actualOptions.index).checked, {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        }).toBeOk();
    }
    async shouldNotBeChecked(elementToCheck, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_0__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_1__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_1__.Selector)(elementToCheck, this.actualOptions).filterVisible().nth(this.actualOptions.index).hasAttribute('checked'), {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        }).not.toBeOk();
    }
}
const radiobuttonCommon = new RadiobuttonCommon();


/***/ }),

/***/ "./src/widgets/controls/readonlyTextInput.ts":
/*!***************************************************!*\
  !*** ./src/widgets/controls/readonlyTextInput.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ReadonlyTextInput": () => (/* binding */ ReadonlyTextInput)
/* harmony export */ });
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! test-maker */ "test-maker");
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(test_maker__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../helpers/options/methodOptions */ "./helpers/options/methodOptions.ts");
/* harmony import */ var _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./controlsCommonActions */ "./src/widgets/controls/controlsCommonActions.ts");
// Copyright 2020 Knowledge Expert SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.



class ReadonlyTextInput {
    constructor(attributeName, attributeValue, container = '') {
        this.container = container;
        this.attributeName = attributeName;
        this.attributeValue = attributeValue;
        this.element = `${container}//span[@${this.attributeName}="${this.attributeValue}"]`;
    }
    async waitUntilVisibility(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.waitUntilVisibility(this.element, options);
    }
    async waitUntilVisibilityByText(text, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.waitUntilVisibilityByText(this.element, text, options);
    }
    async waitUntilVisibilityByAttribute(attributeName, attributeValue, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.waitUntilVisibilityByAttribute(this.element, attributeName, attributeValue, options);
    }
    async waitUntilVisibilityByIndex(index, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.waitUntilVisibilityByIndex(this.element, index, options);
    }
    async waitUntilCollectionOfElementsSizeIsGreaterOrEqual(expectedSize, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.waitUntilCollectionOfElementsSizeIsGreaterOrEqual(this.element, expectedSize, options);
    }
    async waitUntilCollectionOfElementsSizeIsLessThan(expectedSize, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.waitUntilCollectionOfElementsSizeIsLessThan(this.element, expectedSize, options);
    }
    async waitUntilInvisibility(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.waitUntilInvisibility(this.element, options);
    }
    async waitUntilInvisibilityByIndex(index, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.waitUntilInvisibilityByIndex(this.element, index, options);
    }
    async shouldBeVisible(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.shouldBeVisible(this.element, options);
    }
    async shouldNotBeVisible(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.shouldNotBeVisible(this.element, options);
    }
    async waitUntilElementExists(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.waitUntilElementExists(this.element, options);
    }
    async waitUntilElementNotExist(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.waitUntilElementNotExist(this.element, options);
    }
    async waitForSelectActionabilityCheck(checks, isFilterByVisibility = true) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.waitForSelectActionabilityCheck(this.element, checks, isFilterByVisibility = true);
    }
    async shouldExist(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.shouldExist(this.element, options);
    }
    async shouldNotExist(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.shouldNotExist(this.element, options);
    }
    async shouldHaveValue(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.shouldHaveValue(this.element, value, options);
    }
    async shouldNotHaveValue(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.shouldNotHaveValue(this.element, value, options);
    }
    async shouldNotBeBlank(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.shouldNotBeBlank(this.element, options);
    }
    async shouldHaveText(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.shouldHaveText(this.element, value, options);
    }
    async shouldNotHaveText(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.shouldNotHaveText(this.element, value, options);
    }
    async shouldHaveExactText(value, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.element, this.actualOptions)
            .filterVisible().innerText, {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        })
            .toEqual(value);
    }
    async shouldHaveExactTextByIndex(value, index, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.element, this.actualOptions)
            .filterVisible().nth(index).innerText, {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        })
            .toEqual(value);
    }
    async shouldNotHaveExactTextByIndex(value, index, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.element, this.actualOptions)
            .filterVisible().nth(index).innerText, {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        })
            .not.toContain(value);
    }
    async shouldNotBeBlankByIndex(index, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.shouldNotBeBlankByIndex(this.element, index, options);
    }
    async shouldHaveTextByIndex(value, index, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.element, this.actualOptions)
            .filterVisible().nth(index).innerText, {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        })
            .toContain(value);
    }
    async shouldNotHaveTextByIndex(value, index, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.element, this.actualOptions)
            .filterVisible().nth(index).innerText, {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        })
            .not.toContain(value);
    }
    async shouldHaveValueByIndex(value, index, options) {
        value = value + "";
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.element, this.actualOptions)
            .filterVisible().nth(index).getAttribute('value'), {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        })
            .toEqual(value);
    }
    async shouldNotHaveValueByIndex(value, index, options) {
        value = value + "";
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.element, this.actualOptions)
            .filterVisible().nth(index).getAttribute('value'), {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        })
            .not.toEqual(value);
    }
    async shouldBeVisibleByIndex(index, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.element, this.actualOptions)
            .filterVisible().nth(index).visible, {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        }).toBeOk();
    }
    async shouldNotBeVisibleByIndex(index, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.element, this.actualOptions).nth(index).visible, {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        }).not.toBeOk();
    }
    async getValue() {
        return await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.getValue(this.element);
    }
    async getText() {
        return await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.getText(this.element);
    }
    toString() {
        return `(Readonly text box with ${this.attributeName}='${this.attributeValue}')`;
    }
    async isVisible(options) {
        return await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.isVisible(this.element, options);
    }
    async isExists(options) {
        return await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.isExists(this.element, options);
    }
}


/***/ }),

/***/ "./src/widgets/controls/richTextEditor.ts":
/*!************************************************!*\
  !*** ./src/widgets/controls/richTextEditor.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RichTextEditor": () => (/* binding */ RichTextEditor)
/* harmony export */ });
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! test-maker */ "test-maker");
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(test_maker__WEBPACK_IMPORTED_MODULE_0__);
// Copyright 2021 Knowledge Expert SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

class RichTextEditor {
    async set(value, selector = `//div[starts-with(@id,'cke_PEGACKEDITOR')]`) {
        const editorSelector = (0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(selector);
        const editorStrippedID = (await editorSelector.id).replace(`cke_`, ``);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.click(selector);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.eval(({ editorId, textToType }) => {
            // @ts-ignore
            window.CKEDITOR.instances[`${editorId}`].setData(textToType);
            // @ts-ignore
        }, { editorId: editorStrippedID, textToType: value });
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.click(selector);
    }
}


/***/ }),

/***/ "./src/widgets/controls/table/cell.ts":
/*!********************************************!*\
  !*** ./src/widgets/controls/table/cell.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Cell": () => (/* binding */ Cell)
/* harmony export */ });
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! test-maker */ "test-maker");
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(test_maker__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _buttons_buttonsActions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../buttons/buttonsActions */ "./src/widgets/controls/buttons/buttonsActions.ts");
/* harmony import */ var _tableControls_tableCheckbox__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./tableControls/tableCheckbox */ "./src/widgets/controls/table/tableControls/tableCheckbox.ts");
/* harmony import */ var _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../helpers/options/methodOptions */ "./helpers/options/methodOptions.ts");
/* harmony import */ var _controlsCommonActions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../controlsCommonActions */ "./src/widgets/controls/controlsCommonActions.ts");
// Copyright 2019 Knowledge Expert SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.





class Cell {
    constructor(container, index = 0) {
        this.element = container;
        this.index = index;
    }
    async waitUntilVisibility(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_4__.controlsCommonActions.waitUntilVisibility(this.element, options);
    }
    async waitUntilVisibilityByText(text, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_4__.controlsCommonActions.waitUntilVisibilityByText(this.element, text, options);
    }
    async waitUntilVisibilityByAttribute(attributeName, attributeValue, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_4__.controlsCommonActions.waitUntilVisibilityByAttribute(this.element, attributeName, attributeValue, options);
    }
    async waitUntilVisibilityByIndex(index, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_4__.controlsCommonActions.waitUntilVisibilityByIndex(this.element, index, options);
    }
    async waitUntilCollectionOfElementsSizeIsGreaterOrEqual(expectedSize, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_4__.controlsCommonActions.waitUntilCollectionOfElementsSizeIsGreaterOrEqual(this.element, expectedSize, options);
    }
    async waitUntilCollectionOfElementsSizeIsLessThan(expectedSize, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_4__.controlsCommonActions.waitUntilCollectionOfElementsSizeIsLessThan(this.element, expectedSize, options);
    }
    async waitUntilInvisibility(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_4__.controlsCommonActions.waitUntilInvisibility(this.element, options);
    }
    async waitUntilInvisibilityByIndex(index, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_4__.controlsCommonActions.waitUntilInvisibilityByIndex(this.element, index, options);
    }
    async waitUntilElementExists(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_4__.controlsCommonActions.waitUntilElementExists(this.element, options);
    }
    async waitUntilElementNotExist(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_4__.controlsCommonActions.waitUntilElementNotExist(this.element, options);
    }
    async waitForSelectActionabilityCheck(checks) {
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.waitForSelectActionabilityCheck(this.element, checks);
    }
    async hover(options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_3__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.hover((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.element, this.actualOptions).filterVisible().nth(this.index));
    }
    async click(options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_3__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.click((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.element, this.actualOptions).filterVisible().nth(this.index));
    }
    async focus(options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_3__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.focus((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.element, this.actualOptions).filterVisible().nth(this.index));
    }
    async clickTheLink(options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_3__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.click((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(`${this.element}//a`, this.actualOptions).filterVisible().nth(this.index));
    }
    icon() {
        return `${this.element}//i`;
    }
    button() {
        return new _buttons_buttonsActions__WEBPACK_IMPORTED_MODULE_1__.ButtonsActions(`${this.element}//button`, this.index);
    }
    async set(value, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_3__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.click((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.element, this.actualOptions).filterVisible().nth(this.index))
            .fillField((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(`${this.element}//input`, this.actualOptions).filterVisible().nth(this.index), value);
    }
    async paste(value, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_3__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.click((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.element, this.actualOptions).filterVisible().nth(this.index))
            .fillField((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(`${this.element}//input`, this.actualOptions).filterVisible().nth(this.index), value, { paste: true });
    }
    async shouldHaveText(text, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_3__.methodOptions.setOptions(options);
        text = text + "";
        if (!this.actualOptions.isCaseSensitive) {
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect(async () => {
                return (await (0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(`${this.element}//input`, this.actualOptions).filterVisible().nth(this.index)
                    .innerText).toLowerCase();
            }, {
                timeout: this.actualOptions.assertionTimeout,
                interval: this.actualOptions.interval,
                retries: this.actualOptions.retries
            }).toContain(text.toLowerCase());
        }
        else {
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(`${this.element}//input`, this.actualOptions).filterVisible().nth(this.index).innerText, {
                timeout: this.actualOptions.assertionTimeout,
                interval: this.actualOptions.interval,
                retries: this.actualOptions.retries
            }).toContain(text);
        }
    }
    async shouldNotHaveText(text, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_3__.methodOptions.setOptions(options);
        text = text + "";
        if (!this.actualOptions.isCaseSensitive) {
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect(async () => {
                return (await (0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(`${this.element}//input`, this.actualOptions).filterVisible().nth(this.index)
                    .innerText).toLowerCase();
            }, {
                timeout: this.actualOptions.assertionTimeout,
                interval: this.actualOptions.interval,
                retries: this.actualOptions.retries
            }).not.toContain(text.toLowerCase());
        }
        else {
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect(await (0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(`${this.element}//input`, this.actualOptions).filterVisible().nth(this.index).innerText, {
                timeout: this.actualOptions.assertionTimeout,
                interval: this.actualOptions.interval,
                retries: this.actualOptions.retries
            }).not.toContain(text);
        }
    }
    async shouldHaveReadonlyText(text, innerType = 'span', options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_3__.methodOptions.setOptions(options);
        text = text + "";
        if (!this.actualOptions.isCaseSensitive) {
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect(async () => {
                return (await (0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(`${this.element}//${innerType}`, this.actualOptions).filterVisible().nth(this.index).innerText).toLowerCase();
            }, {
                timeout: this.actualOptions.assertionTimeout,
                interval: this.actualOptions.interval,
                retries: this.actualOptions.retries
            }).toContain(text.toLowerCase());
        }
        else {
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(`${this.element}//${innerType}`, this.actualOptions).filterVisible().nth(this.index).innerText, {
                timeout: this.actualOptions.assertionTimeout,
                interval: this.actualOptions.interval,
                retries: this.actualOptions.retries
            }).toContain(text);
        }
    }
    async shouldHaveReadonlyTextByDataTestId(text, dataTestId, innerType = 'span', options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_3__.methodOptions.setOptions(options);
        text = text + "";
        if (!this.actualOptions.isCaseSensitive) {
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect(async () => {
                return (await (0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(`${this.element}//${innerType}[@data-test-id="${dataTestId}"]`, this.actualOptions).filterVisible().nth(this.index).innerText).toLowerCase();
            }, {
                timeout: this.actualOptions.assertionTimeout,
                interval: this.actualOptions.interval,
                retries: this.actualOptions.retries
            }).toContain(text.toLowerCase());
        }
        else {
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(`${this.element}//${innerType}[@data-test-id="${dataTestId}"]`, this.actualOptions).filterVisible().nth(this.index).innerText, {
                timeout: this.actualOptions.assertionTimeout,
                interval: this.actualOptions.interval,
                retries: this.actualOptions.retries
            }).toContain(text);
        }
    }
    async shouldNotHaveReadonlyText(text, innerType = 'span', options) {
        text = text + "";
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_3__.methodOptions.setOptions(options);
        if (!this.actualOptions.isCaseSensitive) {
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect(async () => {
                return (await (0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(`${this.element}//${innerType}`, this.actualOptions).filterVisible().nth(this.index).innerText).toLowerCase();
            }, {
                timeout: this.actualOptions.assertionTimeout,
                interval: this.actualOptions.interval,
                retries: this.actualOptions.retries
            }).not.toContain(text.toLowerCase());
        }
        else {
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(`${this.element}//${innerType}`, this.actualOptions).filterVisible().nth(this.index).innerText, {
                timeout: this.actualOptions.assertionTimeout,
                interval: this.actualOptions.interval,
                retries: this.actualOptions.retries
            }).not.toContain(text);
        }
    }
    async shouldNotHaveReadonlyTextByDataTestId(text, dataTestId, innerType = 'span', options) {
        text = text + "";
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_3__.methodOptions.setOptions(options);
        if (!this.actualOptions.isCaseSensitive) {
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect(async () => {
                return (await (0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(`${this.element}//${innerType}[@data-test-id="${dataTestId}"]`, this.actualOptions).filterVisible().nth(this.index).innerText).toLowerCase();
            }, {
                timeout: this.actualOptions.assertionTimeout,
                interval: this.actualOptions.interval,
                retries: this.actualOptions.retries
            }).not.toContain(text.toLowerCase());
        }
        else {
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(`${this.element}//${innerType}[@data-test-id="${dataTestId}"]`, this.actualOptions).filterVisible().nth(this.index).innerText, {
                timeout: this.actualOptions.assertionTimeout,
                interval: this.actualOptions.interval,
                retries: this.actualOptions.retries
            }).not.toContain(text);
        }
    }
    async shouldNotBeBlank(innerType = 'span', options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_3__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(`${this.element}//${innerType}`, this.actualOptions).filterVisible().nth(this.index).innerText, {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        }).not.toEqual('');
    }
    async shouldBeBlank(innerType = 'span', options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_3__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(`${this.element}//${innerType}`, this.actualOptions).filterVisible().nth(this.index).innerText, {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        }).toEqual('').or.toBeUndefined();
    }
    async shouldHaveValue(value, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_3__.methodOptions.setOptions(options);
        value = value + "";
        if (!this.actualOptions.isCaseSensitive) {
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect(async () => {
                return (await (0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(`${this.element}//input`, this.actualOptions).filterVisible().nth(this.index).getAttribute('value')).toLowerCase();
            }, {
                timeout: this.actualOptions.assertionTimeout,
                interval: this.actualOptions.interval,
                retries: this.actualOptions.retries
            }).toContain(value.toLowerCase());
        }
        else {
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(`${this.element}//input`, this.actualOptions).filterVisible().nth(this.index).getAttribute('value'), {
                timeout: this.actualOptions.assertionTimeout,
                interval: this.actualOptions.interval,
                retries: this.actualOptions.retries
            }).toContain(value);
        }
    }
    async shouldNotHaveValue(value, options) {
        value = value + "";
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_3__.methodOptions.setOptions(options);
        if (!this.actualOptions.isCaseSensitive) {
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect(async () => {
                return (await (0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(`${this.element}//input`, this.actualOptions).filterVisible().nth(this.index).getAttribute('value')).toLowerCase();
            }, {
                timeout: this.actualOptions.assertionTimeout,
                interval: this.actualOptions.interval,
                retries: this.actualOptions.retries
            }).not.toContain(value.toLowerCase());
        }
        else {
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(`${this.element}//input`, this.actualOptions).filterVisible().nth(this.index).getAttribute('value'), {
                timeout: this.actualOptions.assertionTimeout,
                interval: this.actualOptions.interval,
                retries: this.actualOptions.retries
            }).not.toContain(value);
        }
    }
    async shouldContainElementWithAttributes(attributes, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_3__.methodOptions.setOptions(options);
        let tag, finalElement;
        attributes.elementType ? tag = attributes.elementType : tag = `*`;
        attributes.attributeValue ? finalElement = `${tag}[@${attributes.attributeName}="${attributes.attributeValue}"]` :
            finalElement = `//${tag}[@${attributes.attributeName}]`;
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expectSelector((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(`${this.element}//${finalElement}`, this.actualOptions).filterVisible().nth(this.index), {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        }).toExist();
    }
    async shouldNotContainElementWithAttributes(attributes, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_3__.methodOptions.setOptions(options);
        let tag, finalElement;
        attributes.elementType ? tag = attributes.elementType : tag = `*`;
        attributes.attributeValue ? finalElement = `${tag}[@${attributes.attributeName}="${attributes.attributeValue}"]` :
            finalElement = `${tag}[@${attributes.attributeName}]`;
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expectSelector((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(`${this.element}//${finalElement}`, this.actualOptions).filterVisible().nth(this.index), {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        }).not.toExist();
    }
    async selectValueFromDropdownMenu(value, options) {
        value = value + "";
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_3__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.selectOption((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.element, this.actualOptions).nth(this.index), [value]);
    }
    async dropdownMenuShouldHaveValue(value, options) {
        value = value + "";
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_3__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(`${this.element}//option[@value='${value}']`, this.actualOptions).filterVisible().nth(this.index).selected, {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        }).toBeOk();
    }
    label() {
        return `${this.element}//label`;
    }
    switcher() {
        return `${this.element}//for`;
    }
    checkbox() {
        return new _tableControls_tableCheckbox__WEBPACK_IMPORTED_MODULE_2__.TableCheckbox(this.element, this.index);
    }
    link() {
        return `${this.element}//a`;
    }
    next(name) {
        if (name) {
            return new Cell(`${this.element}/following-sibling::*[@data-attribute-name='${name}']`);
        }
        return new Cell(`${this.element}/following-sibling`);
    }
    previous(name) {
        if (name) {
            return new Cell(`${this.element}/preceding-sibling::*[@data-attribute-name='${name}']`);
        }
        return new Cell(`${this.element}/preceding-sibling`);
    }
}


/***/ }),

/***/ "./src/widgets/controls/table/column.ts":
/*!**********************************************!*\
  !*** ./src/widgets/controls/table/column.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Column": () => (/* binding */ Column)
/* harmony export */ });
/* harmony import */ var _cell__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cell */ "./src/widgets/controls/table/cell.ts");
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! test-maker */ "test-maker");
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(test_maker__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../helpers/options/methodOptions */ "./helpers/options/methodOptions.ts");
// Copyright 2019 Knowledge Expert SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.



class Column {
    constructor(elements) {
        this.elements = elements;
    }
    async shouldHaveExactTexts(texts, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_2__.methodOptions.setOptions(options);
        for (let i = 0; i < texts.length; i++) {
            let expectedItem = texts[i];
            await test_maker__WEBPACK_IMPORTED_MODULE_1__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_1__.Selector)(this.elements, this.actualOptions).nth(i).innerText, {
                timeout: this.actualOptions.assertionTimeout,
                interval: this.actualOptions.interval,
                retries: this.actualOptions.retries
            }).toEqual(expectedItem);
        }
    }
    async shouldHaveExactTextsInAnyOrder(texts, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_2__.methodOptions.setOptions(options);
        for (let i = 0; i < texts.length; i++) {
            await test_maker__WEBPACK_IMPORTED_MODULE_1__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_1__.Selector)(this.elements, this.actualOptions).withExactText(`${texts[i]}`).visible, {
                timeout: this.actualOptions.assertionTimeout,
                interval: this.actualOptions.interval,
                retries: this.actualOptions.retries
            }).toBeOk();
        }
    }
    async shouldHaveTexts(texts, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_2__.methodOptions.setOptions(options);
        for (let i = 0; i < texts.length; i++) {
            let expectedItem = texts[i];
            await test_maker__WEBPACK_IMPORTED_MODULE_1__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_1__.Selector)(this.elements, this.actualOptions).nth(i).innerText, {
                timeout: this.actualOptions.assertionTimeout,
                interval: this.actualOptions.interval,
                retries: this.actualOptions.retries
            }).toContain(expectedItem);
        }
    }
    async shouldHaveSize(count, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_2__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_1__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_1__.Selector)(this.elements, this.actualOptions).length, {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        }).toEqual(count);
    }
    cell(indexStartingFromOne) {
        return new _cell__WEBPACK_IMPORTED_MODULE_0__.Cell(this.elements, indexStartingFromOne - 1);
    }
}


/***/ }),

/***/ "./src/widgets/controls/table/header.ts":
/*!**********************************************!*\
  !*** ./src/widgets/controls/table/header.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Header": () => (/* binding */ Header)
/* harmony export */ });
/* harmony import */ var _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../controlsCommonActions */ "./src/widgets/controls/controlsCommonActions.ts");
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! test-maker */ "test-maker");
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(test_maker__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../helpers/options/methodOptions */ "./helpers/options/methodOptions.ts");
// Copyright 2021 Knowledge Expert SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.



class Header {
    constructor(container) {
        this.element = container;
    }
    async waitUntilVisibility(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilVisibility(this.element, options);
    }
    async waitUntilVisibilityByText(text, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilVisibilityByText(this.element, text, options);
    }
    async waitUntilVisibilityByAttribute(attributeName, attributeValue, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilVisibilityByAttribute(this.element, attributeName, attributeValue, options);
    }
    async waitUntilVisibilityByIndex(index, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilVisibilityByIndex(this.element, index, options);
    }
    async waitUntilCollectionOfElementsSizeIsGreaterOrEqual(expectedSize, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilCollectionOfElementsSizeIsGreaterOrEqual(this.element, expectedSize, options);
    }
    async waitUntilCollectionOfElementsSizeIsLessThan(expectedSize, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilCollectionOfElementsSizeIsLessThan(this.element, expectedSize, options);
    }
    async waitUntilInvisibility(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilInvisibility(this.element, options);
    }
    async waitUntilInvisibilityByIndex(index, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilInvisibilityByIndex(this.element, index, options);
    }
    async waitUntilElementExists(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilElementExists(this.element, options);
    }
    async waitUntilElementNotExist(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilElementNotExist(this.element, options);
    }
    async waitForSelectActionabilityCheck(checks) {
        await test_maker__WEBPACK_IMPORTED_MODULE_1__.I.waitForSelectActionabilityCheck(this.element, checks);
    }
    async hover(options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_2__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_1__.I.hover((0,test_maker__WEBPACK_IMPORTED_MODULE_1__.Selector)(`${this.element}//ancestor::th`, this.actualOptions).filterVisible());
    }
    async click(options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_2__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_1__.I.click((0,test_maker__WEBPACK_IMPORTED_MODULE_1__.Selector)(`${this.element}//ancestor::th`, this.actualOptions).filterVisible());
    }
    async filter(options) {
        await this.click(options);
    }
    async sort(options) {
        await this.click(options);
    }
    async focus(options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_2__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_1__.I.focus((0,test_maker__WEBPACK_IMPORTED_MODULE_1__.Selector)(`${this.element}//ancestor::th`, this.actualOptions).filterVisible());
    }
    async clickTheLink(options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_2__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_1__.I.click((0,test_maker__WEBPACK_IMPORTED_MODULE_1__.Selector)(`${this.element}//ancestor::th//a`, this.actualOptions).filterVisible());
    }
    async shouldHaveText(value, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_2__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_1__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_1__.Selector)(this.element).innerText).toContain(value);
    }
    async shouldHaveExactText(value, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_2__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_1__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_1__.Selector)(this.element).innerText).toEqual(value);
    }
    async shouldNotHaveText(value, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_2__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_1__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_1__.Selector)(this.element).innerText).not.toContain(value);
    }
    async shouldNotHaveExactText(value, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_2__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_1__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_1__.Selector)(this.element).innerText).not.toEqual(value);
    }
    async shouldBeVisible(options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_2__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_1__.I.expectSelector(this.element).toBeVisible();
    }
    async shouldNotBeVisible(options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_2__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_1__.I.expectSelector(this.element).toBeInvisible();
    }
}


/***/ }),

/***/ "./src/widgets/controls/table/row.ts":
/*!*******************************************!*\
  !*** ./src/widgets/controls/table/row.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Row": () => (/* binding */ Row)
/* harmony export */ });
/* harmony import */ var _cell__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cell */ "./src/widgets/controls/table/cell.ts");
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! test-maker */ "test-maker");
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(test_maker__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../controlsCommonActions */ "./src/widgets/controls/controlsCommonActions.ts");
/* harmony import */ var _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../helpers/options/methodOptions */ "./helpers/options/methodOptions.ts");
// Copyright 2019 Knowledge Expert SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.




class Row {
    constructor(container) {
        this.element = container;
        this.elements = `${this.element}//td`;
    }
    cell(columnTitleOrIndexStartingFromOne) {
        if (typeof columnTitleOrIndexStartingFromOne === 'string') {
            return new _cell__WEBPACK_IMPORTED_MODULE_0__.Cell(`${this.element}//td[contains(text(), ${columnTitleOrIndexStartingFromOne})]`);
        }
        if (columnTitleOrIndexStartingFromOne < 1) {
            throw new Error('cell index should start from 1');
        }
        return new _cell__WEBPACK_IMPORTED_MODULE_0__.Cell(`${this.element}//td[${columnTitleOrIndexStartingFromOne}]`);
    }
    async hover(options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_3__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_1__.I.hover((0,test_maker__WEBPACK_IMPORTED_MODULE_1__.Selector)(this.element, this.actualOptions).filterVisible());
    }
    async hoverAndClick(options) {
        await this.hover(options);
        await this.click(options);
    }
    async click(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.click(this.element, options);
    }
    async shouldBeVisible(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.shouldBeVisible(this.element, options);
    }
    async shouldNotBeVisible(index, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.shouldNotBeVisible(this.element, options);
    }
}


/***/ }),

/***/ "./src/widgets/controls/table/table.ts":
/*!*********************************************!*\
  !*** ./src/widgets/controls/table/table.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Table": () => (/* binding */ Table)
/* harmony export */ });
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! test-maker */ "test-maker");
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(test_maker__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _column__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./column */ "./src/widgets/controls/table/column.ts");
/* harmony import */ var _row__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./row */ "./src/widgets/controls/table/row.ts");
/* harmony import */ var _cell__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./cell */ "./src/widgets/controls/table/cell.ts");
/* harmony import */ var _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../helpers/options/methodOptions */ "./helpers/options/methodOptions.ts");
/* harmony import */ var _controlsCommonActions__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../controlsCommonActions */ "./src/widgets/controls/controlsCommonActions.ts");
/* harmony import */ var _header__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./header */ "./src/widgets/controls/table/header.ts");
// Copyright 2019 Knowledge Expert SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.







class Table {
    constructor(by, value, elementType, container = '') {
        this.tableContainerElement = "";
        this.value = value;
        this.by = by;
        this.elementType = elementType;
        if (by === 'data-test-id') {
            this.tableContainerElement = `${container}//${elementType}[@data-test-id="${value}"]//tr[@class="cellCont"]/parent::tbody`;
        }
        else if (by === 'pl_prop') {
            this.tableContainerElement = `${container}//${elementType}[contains(@pl_prop, "${value}")]//tr[@class="cellCont"]/parent::tbody`;
        }
        else {
            this.tableContainerElement = `${container}//${elementType}[contains(@${by}, "${value}")]//tr[@class="cellCont"]/parent::tbody`;
        }
    }
    async waitUntilVisibility(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_5__.controlsCommonActions.waitUntilVisibility(this.tableContainerElement, options);
    }
    async waitUntilVisibilityByText(text, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_5__.controlsCommonActions.waitUntilVisibilityByText(this.tableContainerElement, text, options);
    }
    async waitUntilVisibilityByAttribute(attributeName, attributeValue, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_5__.controlsCommonActions.waitUntilVisibilityByAttribute(this.tableContainerElement, attributeName, attributeValue, options);
    }
    async waitUntilVisibilityByIndex(index, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_5__.controlsCommonActions.waitUntilVisibilityByIndex(this.tableContainerElement, index, options);
    }
    async waitUntilInvisibility(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_5__.controlsCommonActions.waitUntilInvisibility(this.tableContainerElement, options);
    }
    async waitUntilInvisibilityByIndex(index, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_5__.controlsCommonActions.waitUntilInvisibilityByIndex(this.tableContainerElement, index, options);
    }
    async waitUntilElementExists(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_5__.controlsCommonActions.waitUntilElementExists(this.tableContainerElement, options);
    }
    async waitUntilElementNotExist(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_5__.controlsCommonActions.waitUntilElementNotExist(this.tableContainerElement, options);
    }
    async waitForSelectActionabilityCheck(checks) {
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.waitForSelectActionabilityCheck(this.tableContainerElement, checks);
    }
    async addRow() {
        let addRowItem = `${this.tableContainerElement}//a[contains(normalize-space(.), 'Add Item')]`;
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.click((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(addRowItem));
    }
    async deleteRow() {
        let deleteRowItem = `${this.tableContainerElement}//a[contains(normalize-space(.), 'Delete')]`;
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.click((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(deleteRowItem));
    }
    row(index) {
        return new _row__WEBPACK_IMPORTED_MODULE_2__.Row(`${this.tableContainerElement}//tr[contains(@class, "cellCont") and @data-test-id][${index}]`);
    }
    customRow(xpath, index) {
        if (index === undefined) {
            index = 0;
        }
        return new _row__WEBPACK_IMPORTED_MODULE_2__.Row(`${this.tableContainerElement}${xpath}[${index}]`);
    }
    column(indexOrName) {
        if (typeof indexOrName === 'string') {
            return new _column__WEBPACK_IMPORTED_MODULE_1__.Column(`${this.tableContainerElement}//td[@data-attribute-name="${indexOrName}"]`);
        }
        return new _column__WEBPACK_IMPORTED_MODULE_1__.Column(indexOrName === 1 ? `${this.tableContainerElement}//td[@aria-colindex="1" or not(@headers)]`
            : `${this.body}//td[@aria-colindex="${indexOrName}" or @headers="a${indexOrName}"]`);
    }
    customColumnByIndex(xpath, index) {
        if (index === undefined) {
            index = 0;
        }
        return new _column__WEBPACK_IMPORTED_MODULE_1__.Column(`${this.tableContainerElement}${xpath}[${index}]`);
    }
    cell(coordinates) {
        return new _cell__WEBPACK_IMPORTED_MODULE_3__.Cell(`${this.tableContainerElement}$//tr[contains(@class, "cellCont") and @data-test-id][${coordinates.rowIndex}]//td[${coordinates.columnIndex}]`);
    }
    header(indexOrName) {
        if (typeof indexOrName === 'string') {
            return new _header__WEBPACK_IMPORTED_MODULE_6__.Header(`${this.tableContainerElement}//th[@role="columnheader"]//div[@class="cellIn " and text()="${indexOrName}"]`);
        }
        return new _header__WEBPACK_IMPORTED_MODULE_6__.Header(`${this.tableContainerElement}//th[@role="columnheader"][${indexOrName + 1}]//div[@class="cellIn " ]`);
    }
    customHeaderByIndex(xpath, index) {
        if (index === undefined) {
            index = 0;
        }
        return new _header__WEBPACK_IMPORTED_MODULE_6__.Header(`${this.tableContainerElement}${xpath}[${index}]`);
    }
    get body() {
        return `${this.tableContainerElement}`;
    }
    get rowElements() {
        return `${this.tableContainerElement}//tr[contains(@class, "cellCont") and @data-test-id]`;
    }
    async getNumberOfRows() {
        let elementSelector = `${this.tableContainerElement}//tr[contains(@class, "cellCont") and @data-test-id]`;
        if (await (0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(elementSelector).exists) {
            this.numberOfRows = await (0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(elementSelector, this.actualOptions).filterVisible().count;
            return this.numberOfRows;
        }
        return this.numberOfRows = 0;
    }
    async assertNumberOfRows(length, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_4__.methodOptions.setOptions(options);
        if (length === 0) {
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(`${this.tableContainerElement}//tr[contains(@class, "cellCont") and @data-test-id]`, this.actualOptions).exists, {
                timeout: this.actualOptions.assertionTimeout,
                interval: this.actualOptions.interval,
                retries: this.actualOptions.retries
            }).not.toBeTrue();
        }
        else {
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect(this.getNumberOfRows(), {
                timeout: this.actualOptions.assertionTimeout,
                interval: this.actualOptions.interval,
                retries: this.actualOptions.retries
            }).toEqual(length);
        }
    }
    async assertNumberOfRowsIsAtLeast(length, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_4__.methodOptions.setOptions(options);
        if (length === 0) {
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(`${this.tableContainerElement}//tr[contains(@class, "cellCont") and @data-test-id]`, this.actualOptions).exists, {
                timeout: this.actualOptions.assertionTimeout,
                interval: this.actualOptions.interval,
                retries: this.actualOptions.retries
            }).not.toBeTrue();
        }
        else {
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect(this.getNumberOfRows(), {
                timeout: this.actualOptions.assertionTimeout,
                interval: this.actualOptions.interval,
                retries: this.actualOptions.retries
            }).toBeAtLeast(length);
        }
    }
    async assertNumberOfRowsIsAtMost(length, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_4__.methodOptions.setOptions(options);
        if (length === 0) {
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(`${this.tableContainerElement}//tr[contains(@class, "cellCont") and @data-test-id]`, this.actualOptions).exists, {
                timeout: this.actualOptions.assertionTimeout,
                interval: this.actualOptions.interval,
                retries: this.actualOptions.retries
            }).not.toBeTrue();
        }
        else {
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(`${this.tableContainerElement}//tr[contains(@class, "cellCont") and @data-test-id]`, this.actualOptions).filterVisible().count, {
                timeout: this.actualOptions.assertionTimeout,
                interval: this.actualOptions.interval,
                retries: this.actualOptions.retries
            }).toBeAtMost(length);
        }
    }
    async shouldContainNumberOfRows(rowsNumber, options) {
        await this.assertNumberOfRows(rowsNumber, options);
    }
    async shouldContainAtLeast(rowsNumber, options) {
        await this.assertNumberOfRowsIsAtLeast(rowsNumber, options);
    }
    async shouldContainAtMost(rowsNumber, options) {
        await this.assertNumberOfRowsIsAtMost(rowsNumber, options);
    }
    async shouldBeVisible(options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_4__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(`${this.tableContainerElement}`, this.actualOptions).filterVisible().visible, {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        }).toBeOk();
    }
    async shouldNotBeVisible(options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_4__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(`${this.tableContainerElement}`, this.actualOptions).filterVisible().visible, {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        }).not.toBeOk();
    }
    async shouldExist(options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_4__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(`${this.tableContainerElement}`, this.actualOptions).filterVisible().exists, {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        }).toBeOk();
    }
    async shouldNotExist(options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_4__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(`${this.tableContainerElement}`, this.actualOptions).filterVisible().exists, {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        }).not.toBeOk();
    }
    toString() {
        return `(Table by ${this.by}="${this.value}")`;
    }
    async isVisible(options) {
        return await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_5__.controlsCommonActions.isVisible(this.tableContainerElement, options);
    }
    async isExists(options) {
        return await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_5__.controlsCommonActions.isExists(this.tableContainerElement, options);
    }
}


/***/ }),

/***/ "./src/widgets/controls/table/tableControls/tableCheckbox.ts":
/*!*******************************************************************!*\
  !*** ./src/widgets/controls/table/tableControls/tableCheckbox.ts ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TableCheckbox": () => (/* binding */ TableCheckbox)
/* harmony export */ });
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! test-maker */ "test-maker");
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(test_maker__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../helpers/options/methodOptions */ "./helpers/options/methodOptions.ts");
// Copyright 2019 Knowledge Expert SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


class TableCheckbox {
    constructor(container, index, attributeValue = '') {
        this.attributeValue = attributeValue;
        this.container = container;
        this.element =
            `${container}//input[@type="checkbox"]`;
        let checkBoxElementPartialLocator = "";
        attributeValue === '' ?
            checkBoxElementPartialLocator = ''
            : checkBoxElementPartialLocator = `/following-sibling::label[@for="${this.attributeValue}"]`;
        this.checkBoxElement =
            `${container}//input[@type="checkbox"]${checkBoxElementPartialLocator}`;
        this.index = index;
    }
    async check(options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        if (!await (0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.element, this.actualOptions).filterVisible().nth(this.index).checked) {
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.click((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.element, this.actualOptions).filterVisible().nth(this.index));
        }
        else {
            throw new Error(`Element ${this.toString()} should be unchecked, but was checked`);
        }
    }
    async checkByIndex(index, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        if (!await (0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.element, this.actualOptions).filterVisible().nth(this.actualOptions.index).checked) {
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.click((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.element, this.actualOptions).filterVisible().nth(index));
        }
        else {
            throw new Error(`Element ${this.toString()} should be unchecked, but was checked`);
        }
    }
    async checkButton(options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        if (!await (0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.checkBoxElement, this.actualOptions).filterVisible().nth(this.index).checked) {
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.click((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.checkBoxElement, this.actualOptions).filterVisible().nth(this.index));
        }
        else {
            throw new Error(`Element ${this.toString()} should be unchecked, but was checked`);
        }
    }
    async uncheck(options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        if (!await (0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.element, this.actualOptions).filterVisible().nth(this.index).checked) {
            throw new Error(`Element ${this.toString()} should be checked, but was unchecked`);
        }
        else {
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.click((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.element, this.actualOptions).filterVisible().nth(this.actualOptions.index));
        }
    }
    async uncheckByIndex(index, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        if (!await (0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.element, this.actualOptions).filterVisible().nth(index).checked) {
            throw new Error(`Element ${this.toString()} should be checked, but was unchecked`);
        }
        else {
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.click((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.element, this.actualOptions).filterVisible().nth(index));
        }
    }
    async uncheckButton(options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        if (!await (0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.checkBoxElement, this.actualOptions).filterVisible().nth(this.index).checked) {
            throw new Error(`Element ${this.toString()} should be checked, but was unchecked`);
        }
        else {
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.click((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.checkBoxElement, this.actualOptions).filterVisible().nth(this.index));
        }
    }
    async checkIf(toClick, options) {
        if (toClick === undefined) {
            return;
        }
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        if (toClick) {
            await this.check(this.actualOptions);
        }
    }
    async shouldBeChecked(options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.element, this.actualOptions).filterVisible().nth(this.index).checked, {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        }).toBeOk();
    }
    async shouldBeUnChecked(options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.element, this.actualOptions).filterVisible().nth(this.index).checked, {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        }).not.toBeOk();
    }
    toString() {
        return `(Checkbox with ${this.attributeName}='${this.attributeValue}')`;
    }
}


/***/ }),

/***/ "./src/widgets/controls/textInput/textInputByAttribute.ts":
/*!****************************************************************!*\
  !*** ./src/widgets/controls/textInput/textInputByAttribute.ts ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TextInputByAttribute": () => (/* binding */ TextInputByAttribute),
/* harmony export */   "textInputByAttribute": () => (/* binding */ textInputByAttribute)
/* harmony export */ });
/* harmony import */ var _textInputCommon__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./textInputCommon */ "./src/widgets/controls/textInput/textInputCommon.ts");
// Copyright 2020 Knowledge Expert SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

class TextInputByAttribute extends _textInputCommon__WEBPACK_IMPORTED_MODULE_0__.TextInputCommon {
    constructor(attributeName, attributeValue, container = '') {
        super(`${container}//input[@data-ctl='["TextInput"]' and contains (@${attributeName}, "${attributeValue}")]`);
    }
}
function textInputByAttribute(attributeName, attributeValue, container) {
    return new TextInputByAttribute(attributeName, attributeValue, container);
}


/***/ }),

/***/ "./src/widgets/controls/textInput/textInputByCss.ts":
/*!**********************************************************!*\
  !*** ./src/widgets/controls/textInput/textInputByCss.ts ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TextInputByCss": () => (/* binding */ TextInputByCss),
/* harmony export */   "textInputByCss": () => (/* binding */ textInputByCss)
/* harmony export */ });
/* harmony import */ var _textInputCommon__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./textInputCommon */ "./src/widgets/controls/textInput/textInputCommon.ts");
// Copyright 2020 Knowledge Expert SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

class TextInputByCss extends _textInputCommon__WEBPACK_IMPORTED_MODULE_0__.TextInputCommon {
    constructor(css) {
        super(`${css}`);
    }
}
function textInputByCss(css) {
    return new TextInputByCss(css);
}


/***/ }),

/***/ "./src/widgets/controls/textInput/textInputByLabel.ts":
/*!************************************************************!*\
  !*** ./src/widgets/controls/textInput/textInputByLabel.ts ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TextInputByLabel": () => (/* binding */ TextInputByLabel),
/* harmony export */   "textInputByLabel": () => (/* binding */ textInputByLabel)
/* harmony export */ });
/* harmony import */ var _textInputCommon__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./textInputCommon */ "./src/widgets/controls/textInput/textInputCommon.ts");
// Copyright 2020 Knowledge Expert SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

class TextInputByLabel extends _textInputCommon__WEBPACK_IMPORTED_MODULE_0__.TextInputCommon {
    constructor(label, container = '') {
        super(`${container}//label[contains(text(), "${label}") and not(contains(@for, "${label}"))]/following-sibling::div//input[@data-ctl='["TextInput"]']`);
    }
}
function textInputByLabel(label, container) {
    return new TextInputByLabel(label, container);
}


/***/ }),

/***/ "./src/widgets/controls/textInput/textInputByXPath.ts":
/*!************************************************************!*\
  !*** ./src/widgets/controls/textInput/textInputByXPath.ts ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TextInputByXPath": () => (/* binding */ TextInputByXPath),
/* harmony export */   "textInputByXPath": () => (/* binding */ textInputByXPath)
/* harmony export */ });
/* harmony import */ var _textInputCommon__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./textInputCommon */ "./src/widgets/controls/textInput/textInputCommon.ts");
// Copyright 2020 Knowledge Expert SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

class TextInputByXPath extends _textInputCommon__WEBPACK_IMPORTED_MODULE_0__.TextInputCommon {
    constructor(xpath, container = '') {
        super(`${container}${xpath}`);
    }
}
function textInputByXPath(xpath, container) {
    return new TextInputByXPath(xpath, container);
}


/***/ }),

/***/ "./src/widgets/controls/textInput/textInputCommon.ts":
/*!***********************************************************!*\
  !*** ./src/widgets/controls/textInput/textInputCommon.ts ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TextInputCommon": () => (/* binding */ TextInputCommon)
/* harmony export */ });
/* harmony import */ var _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../controlsCommonActions */ "./src/widgets/controls/controlsCommonActions.ts");
/* harmony import */ var _pega_error_messages_pegaErrorMessages__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../pega-error-messages/pegaErrorMessages */ "./src/widgets/controls/pega-error-messages/pegaErrorMessages.ts");
// Copyright 2020 Knowledge Expert SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


class TextInputCommon {
    constructor(element) {
        this.element = element;
    }
    async waitUntilVisibility(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilVisibility(this.element, options);
    }
    async waitUntilVisibilityByText(text, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilVisibilityByText(this.element, text, options);
    }
    async waitUntilVisibilityByAttribute(attributeName, attributeValue, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilVisibilityByAttribute(this.element, attributeName, attributeValue, options);
    }
    async waitUntilVisibilityByIndex(index, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilVisibilityByIndex(this.element, index, options);
    }
    async waitUntilCollectionOfElementsSizeIsGreaterOrEqual(expectedSize, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilCollectionOfElementsSizeIsGreaterOrEqual(this.element, expectedSize, options);
    }
    async waitUntilCollectionOfElementsSizeIsLessThan(expectedSize, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilCollectionOfElementsSizeIsLessThan(this.element, expectedSize, options);
    }
    async waitUntilInvisibility(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilInvisibility(this.element, options);
    }
    async waitUntilInvisibilityByIndex(index, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilInvisibilityByIndex(this.element, index, options);
    }
    async waitUntilElementExists(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilElementExists(this.element, options);
    }
    async waitUntilElementNotExist(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitUntilElementNotExist(this.element, options);
    }
    async waitForSelectActionabilityCheck(checks, isFilterByVisibility = true) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.waitForSelectActionabilityCheck(this.element, checks, isFilterByVisibility = true);
    }
    async click(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.click(this.element, options);
    }
    async focus(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.focus(this.element, options);
    }
    async pressTab() {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.pressTab();
    }
    async set(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.set(this.element, value, options);
    }
    async paste(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.paste(this.element, value, options);
    }
    async shouldBeVisible(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldBeVisible(this.element, options);
    }
    async shouldNotBeVisible(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldNotBeVisible(this.element, options);
    }
    async shouldExist(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldExist(this.element, options);
    }
    async shouldNotExist(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldNotExist(this.element, options);
    }
    async isVisible(options) {
        return await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.isVisible(this.element, options);
    }
    async isExists(options) {
        return await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.isExists(this.element, options);
    }
    async shouldHaveText(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldHaveText(this.element, value, options);
    }
    async shouldNotHaveText(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldNotHaveText(this.element, value, options);
    }
    async shouldHaveExactText(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldHaveExactText(this.element, value, options);
    }
    async shouldNotHaveExactText(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldNotHaveExactText(this.element, value, options);
    }
    async shouldHaveValue(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldHaveValue(this.element, value, options);
    }
    async shouldNotHaveValue(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldNotHaveValue(this.element, value, options);
    }
    async shouldBeEnabled(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldBeEnabled(this.element, options);
    }
    async shouldBeDisabled(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldBeDisabled(this.element, options);
    }
    async shouldNotBeBlank(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldNotBeBlank(this.element, options);
    }
    async shouldBeRequired(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldBeRequired(this.element, options);
    }
    async shouldNotBeRequired(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldNotBeRequired(this.element, options);
    }
    async shouldHaveValidationType(validationType, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldHaveValidationType(this.element, validationType, options);
    }
    async shouldNotHaveValidationType(validationType, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.shouldNotHaveValidationType(this.element, validationType, options);
    }
    async getValue() {
        return await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.getValue(this.element);
    }
    async getText() {
        return await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_0__.controlsCommonActions.getText(this.element);
    }
    error() {
        return new _pega_error_messages_pegaErrorMessages__WEBPACK_IMPORTED_MODULE_1__.PegaErrorMessages(this.element);
    }
}


/***/ }),

/***/ "./src/widgets/controls/textarea/textAreaByAttribute.ts":
/*!**************************************************************!*\
  !*** ./src/widgets/controls/textarea/textAreaByAttribute.ts ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TextAreaByAttribute": () => (/* binding */ TextAreaByAttribute),
/* harmony export */   "textAreaByAttribute": () => (/* binding */ textAreaByAttribute)
/* harmony export */ });
/* harmony import */ var _textAreaCommon__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./textAreaCommon */ "./src/widgets/controls/textarea/textAreaCommon.ts");
// Copyright 2020 Knowledge Expert SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

class TextAreaByAttribute extends _textAreaCommon__WEBPACK_IMPORTED_MODULE_0__.TextAreaCommon {
    constructor(attributeName, attributeValue, container = '') {
        super(`${container}//textarea[contains (@${attributeName}, "${attributeValue}")]`);
    }
}
function textAreaByAttribute(attributeName, attributeValue, container) {
    return new TextAreaByAttribute(attributeName, attributeValue, container);
}


/***/ }),

/***/ "./src/widgets/controls/textarea/textAreaByCss.ts":
/*!********************************************************!*\
  !*** ./src/widgets/controls/textarea/textAreaByCss.ts ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TextAreaByCss": () => (/* binding */ TextAreaByCss),
/* harmony export */   "textAreaByCss": () => (/* binding */ textAreaByCss)
/* harmony export */ });
/* harmony import */ var _textAreaCommon__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./textAreaCommon */ "./src/widgets/controls/textarea/textAreaCommon.ts");
// Copyright 2020 Knowledge Expert SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

class TextAreaByCss extends _textAreaCommon__WEBPACK_IMPORTED_MODULE_0__.TextAreaCommon {
    constructor(css) {
        super(`${css}`);
    }
}
function textAreaByCss(css) {
    return new TextAreaByCss(css);
}


/***/ }),

/***/ "./src/widgets/controls/textarea/textAreaByLabel.ts":
/*!**********************************************************!*\
  !*** ./src/widgets/controls/textarea/textAreaByLabel.ts ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TextAreaByLabel": () => (/* binding */ TextAreaByLabel),
/* harmony export */   "textAreaByLabel": () => (/* binding */ textAreaByLabel)
/* harmony export */ });
/* harmony import */ var _textAreaCommon__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./textAreaCommon */ "./src/widgets/controls/textarea/textAreaCommon.ts");
// Copyright 2020 Knowledge Expert SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

class TextAreaByLabel extends _textAreaCommon__WEBPACK_IMPORTED_MODULE_0__.TextAreaCommon {
    constructor(label, container = '') {
        super(`${container}//label[contains(text(), "${label}") and not(contains(@for, "${label}"))]//following-sibling::div/span//textarea`);
    }
}
function textAreaByLabel(label, container) {
    return new TextAreaByLabel(label, container);
}


/***/ }),

/***/ "./src/widgets/controls/textarea/textAreaByXPath.ts":
/*!**********************************************************!*\
  !*** ./src/widgets/controls/textarea/textAreaByXPath.ts ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TextAreaByXPath": () => (/* binding */ TextAreaByXPath),
/* harmony export */   "textAreaByXPath": () => (/* binding */ textAreaByXPath)
/* harmony export */ });
/* harmony import */ var _textAreaCommon__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./textAreaCommon */ "./src/widgets/controls/textarea/textAreaCommon.ts");
// Copyright 2020 Knowledge Expert SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

class TextAreaByXPath extends _textAreaCommon__WEBPACK_IMPORTED_MODULE_0__.TextAreaCommon {
    constructor(xpath, container = '') {
        super(`${container}${xpath}`);
    }
}
function textAreaByXPath(xpath, container) {
    return new TextAreaByXPath(xpath, container);
}


/***/ }),

/***/ "./src/widgets/controls/textarea/textAreaCommon.ts":
/*!*********************************************************!*\
  !*** ./src/widgets/controls/textarea/textAreaCommon.ts ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TextAreaCommon": () => (/* binding */ TextAreaCommon)
/* harmony export */ });
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! test-maker */ "test-maker");
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(test_maker__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../controlsCommonActions */ "./src/widgets/controls/controlsCommonActions.ts");
/* harmony import */ var _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../helpers/options/methodOptions */ "./helpers/options/methodOptions.ts");
/* harmony import */ var _pega_error_messages_pegaErrorMessages__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../pega-error-messages/pegaErrorMessages */ "./src/widgets/controls/pega-error-messages/pegaErrorMessages.ts");
// Copyright 2020 Knowledge Expert SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.




class TextAreaCommon {
    constructor(element) {
        this.element = element;
    }
    async waitUntilVisibility(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__.controlsCommonActions.waitUntilVisibility(this.element, options);
    }
    async waitUntilVisibilityByText(text, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__.controlsCommonActions.waitUntilVisibilityByText(this.element, text, options);
    }
    async waitUntilVisibilityByAttribute(attributeName, attributeValue, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__.controlsCommonActions.waitUntilVisibilityByAttribute(this.element, attributeName, attributeValue, options);
    }
    async waitUntilVisibilityByIndex(index, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__.controlsCommonActions.waitUntilVisibilityByIndex(this.element, index, options);
    }
    async waitUntilCollectionOfElementsSizeIsGreaterOrEqual(expectedSize, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__.controlsCommonActions.waitUntilCollectionOfElementsSizeIsGreaterOrEqual(this.element, expectedSize, options);
    }
    async waitUntilCollectionOfElementsSizeIsLessThan(expectedSize, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__.controlsCommonActions.waitUntilCollectionOfElementsSizeIsLessThan(this.element, expectedSize, options);
    }
    async waitUntilInvisibility(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__.controlsCommonActions.waitUntilInvisibility(this.element, options);
    }
    async waitUntilInvisibilityByIndex(index, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__.controlsCommonActions.waitUntilInvisibilityByIndex(this.element, index, options);
    }
    async waitUntilElementExists(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__.controlsCommonActions.waitUntilElementExists(this.element, options);
    }
    async waitUntilElementNotExist(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__.controlsCommonActions.waitUntilElementNotExist(this.element, options);
    }
    async waitForSelectActionabilityCheck(checks, isFilterByVisibility = true) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__.controlsCommonActions.waitForSelectActionabilityCheck(this.element, checks, isFilterByVisibility = true);
    }
    async shouldExist(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__.controlsCommonActions.shouldExist(this.element, options);
    }
    async shouldNotExist(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__.controlsCommonActions.shouldNotExist(this.element, options);
    }
    async click(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__.controlsCommonActions.click(this.element, options);
    }
    async focus(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__.controlsCommonActions.focus(this.element, options);
    }
    async pressTab() {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__.controlsCommonActions.pressTab();
    }
    async set(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__.controlsCommonActions.set(this.element, value, options);
    }
    async paste(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__.controlsCommonActions.paste(this.element, value, options);
    }
    async shouldBeVisible(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__.controlsCommonActions.shouldBeVisible(this.element, options);
    }
    async shouldNotBeVisible(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__.controlsCommonActions.shouldNotBeVisible(this.element, options);
    }
    async shouldHaveText(value, options) {
        if (value === undefined) {
            return;
        }
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_2__.methodOptions.setOptions(options);
        value = value + "";
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.element, this.actualOptions).filterVisible().nth(this.actualOptions.index).value, {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        }).toContain(value);
    }
    async shouldNotHaveText(value, options) {
        if (value === undefined) {
            return;
        }
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_2__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.element, this.actualOptions).filterVisible().nth(this.actualOptions.index).value, {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        }).not.toContain(value);
    }
    async shouldHaveExactText(value, options) {
        if (value === undefined) {
            return;
        }
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_2__.methodOptions.setOptions(options);
        value = value + "";
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.element, this.actualOptions).filterVisible().nth(this.actualOptions.index).value, {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        }).toEqual(value);
    }
    async shouldNotHaveExactText(value, options) {
        if (value === undefined) {
            return;
        }
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_2__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.element, this.actualOptions).filterVisible().nth(this.actualOptions.index).value, {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        }).not.toEqual(value);
    }
    async shouldNotBeBlank(options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_2__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.element, this.actualOptions).filterVisible().nth(this.actualOptions.index).value, {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        }).not.toEqual("");
    }
    async shouldHaveValue(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__.controlsCommonActions.shouldHaveValue(this.element, value, options);
    }
    async shouldNotHaveValue(value, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__.controlsCommonActions.shouldNotHaveValue(this.element, value, options);
    }
    async shouldBeEnabled(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__.controlsCommonActions.shouldBeEnabled(this.element, options);
    }
    async shouldBeDisabled(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__.controlsCommonActions.shouldBeDisabled(this.element, options);
    }
    async shouldBeRequired(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__.controlsCommonActions.shouldBeRequired(this.element, options);
    }
    async shouldNotBeRequired(options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__.controlsCommonActions.shouldNotBeRequired(this.element, options);
    }
    async shouldHaveValidationType(validationType, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__.controlsCommonActions.shouldHaveValidationType(this.element, validationType, options);
    }
    async shouldNotHaveValidationType(validationType, options) {
        await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__.controlsCommonActions.shouldNotHaveValidationType(this.element, validationType, options);
    }
    async getValue() {
        return await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__.controlsCommonActions.getValue(this.element);
    }
    async getText() {
        let text = await (0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.element).filterVisible().value;
        return text;
    }
    error() {
        return new _pega_error_messages_pegaErrorMessages__WEBPACK_IMPORTED_MODULE_3__.PegaErrorMessages(this.element);
    }
    async isVisible(options) {
        return await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__.controlsCommonActions.isVisible(this.element, options);
    }
    async isExists(options) {
        return await _controlsCommonActions__WEBPACK_IMPORTED_MODULE_1__.controlsCommonActions.isExists(this.element, options);
    }
}


/***/ }),

/***/ "./src/widgets/emailAttachment.ts":
/*!****************************************!*\
  !*** ./src/widgets/emailAttachment.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "EmailAttachment": () => (/* binding */ EmailAttachment)
/* harmony export */ });
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! test-maker */ "test-maker");
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(test_maker__WEBPACK_IMPORTED_MODULE_0__);

// Copyright 2019 Knowledge Expert SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
class EmailAttachment {
    async shouldHaveSubject(subject) {
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)('.Case_tools').getAttribute('title')).toEqual(subject);
    }
}


/***/ }),

/***/ "./src/widgets/frame.ts":
/*!******************************!*\
  !*** ./src/widgets/frame.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Frame": () => (/* binding */ Frame)
/* harmony export */ });
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! test-maker */ "test-maker");
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(test_maker__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../helpers/options/methodOptions */ "./helpers/options/methodOptions.ts");
// Copyright 2020 Knowledge Expert SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


class Frame {
    constructor() {
        this.iframe = "//div[@style='display: block;']//iframe[contains(@id, 'PegaGadget')]";
        this.workarea = "#workarea";
    }
    async switchToWorkAreaIframe(iframeTimeout = 500, options) {
        // console.log(await Selector(`//div[@style='display: block;']//iframe[contains(@id, 'PegaGadget')]`).getAttribute('id'));
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        // await I.wait(iframeTimeout)
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.switchToMainFrame()
            .waitForSelectorToExist(this.iframe)
            .switchToFrame((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.iframe, this.actualOptions));
    }
    async switchToTheWorkAreaIframeAndWaitForTheElement(waitForSelectorToBeVisibleSelector, iframeTimeout = 10000) {
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.waitForCondition({
            condition: async () => {
                try {
                    await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.switchToMainFrame()
                        .waitForSelectorToExist(this.iframe)
                        // .waitForFrameToLoad(iframe) TODO figure out why waitForFrameToLoad is failing
                        .switchToFrame(this.iframe);
                    if (waitForSelectorToBeVisibleSelector !== undefined) {
                        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.waitForSelectorToBeVisible((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(waitForSelectorToBeVisibleSelector, { timeout: iframeTimeout }));
                    }
                    console.log(`Selector '${waitForSelectorToBeVisibleSelector}' visible after switching to frame '${iframeTimeout}'`);
                    return true;
                }
                catch (error) {
                    // console.error(
                    //     `Selector '${waitForSelectorToBeVisibleSelector}' not visible after switching to frame '${this.iframe}'`,
                    // );
                    return false;
                }
            },
            timeout: 20000,
        });
    }
    async switchToFormFactoriFrame(options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        let iframe = '[id="FormFactoriFrame"]';
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.switchToMainFrame()
            .switchToFrame((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(iframe, this.actualOptions).filterVisible());
    }
    async switchToDefault() {
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.switchToMainFrame();
    }
    async ensureInWorkArea(timeoutForIframes = 4000, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        // await I.wait(timeoutForIframes);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.switchToMainFrame();
        // await I.wait(timeoutForIframes /4)
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.switchToFrame((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.iframe, this.actualOptions));
        try {
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.workarea).visible, this.actualOptions).not.toBeOk();
        }
        catch (e) {
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.switchToMainFrame();
            //await I.wait(timeoutForIframes /4);
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.switchToFrame((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.iframe, this.actualOptions));
            console.log(e + " Second attempt to switch an iframe");
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.workarea).visible, this.actualOptions).not.toBeOk();
        }
    }
    async waitToBeLoaded(options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.waitForSelectorToExist((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.iframe, this.actualOptions));
    }
}


/***/ }),

/***/ "./src/widgets/leftPanelMenu.ts":
/*!**************************************!*\
  !*** ./src/widgets/leftPanelMenu.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "LeftPanelMenu": () => (/* binding */ LeftPanelMenu)
/* harmony export */ });
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! test-maker */ "test-maker");
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(test_maker__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../helpers/options/methodOptions */ "./helpers/options/methodOptions.ts");
/* harmony import */ var _pega__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../pega */ "./src/pega.ts");
// Copyright 2020 Knowledge Expert SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.



class LeftPanelMenu {
    constructor() {
        this.NORMALIZE_SPACE_XPATH = "normalize-space(translate(string(.), '\t\n\r\u00a0', '    '))";
        this.searchFieldElement = 'i[data-test-id="2018081314444308025608"]';
        this.plusIconElement = '[class="menu-item-icon-imageclass pi pi-plus"]';
    }
    async expand(expectedMenuItem = "Create") {
        await _pega__WEBPACK_IMPORTED_MODULE_2__.pega.elementByCss(this.plusIconElement).hover();
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.waitForSelectorToExist((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(".menu-item-title-wrap").withText(expectedMenuItem));
    }
    async createNewCase(caseName, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.resizeWindow(1500, 900);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.waitForSelectorToExist((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.plusIconElement, this.actualOptions));
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.waitForSelectActionabilityCheck((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.plusIconElement), [`attached`, 'stable']);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.click((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.plusIconElement, this.actualOptions))
            .click((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(`//*[@class="menu-item-title-wrap"]//span[text()="${caseName}"]`, this.actualOptions).filterVisible());
    }
    async selectItem(item, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.waitForSelectorToExist((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.plusIconElement, this.actualOptions));
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.waitForSelectActionabilityCheck((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.plusIconElement), [`attached`, 'stable']);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.click((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.plusIconElement, this.actualOptions));
        await _pega__WEBPACK_IMPORTED_MODULE_2__.pega.menu().select(item);
    }
    async search(value, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.waitForSelectorToExist((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.searchFieldElement, this.actualOptions))
            .waitForSelectActionabilityCheck((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.searchFieldElement), [`attached`, 'stable'])
            .hover((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.searchFieldElement))
            .click((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.searchFieldElement))
            .fillField(this.searchFieldElement, value)
            .pressEnterKey();
    }
}


/***/ }),

/***/ "./src/widgets/loginForm.ts":
/*!**********************************!*\
  !*** ./src/widgets/loginForm.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "LoginForm": () => (/* binding */ LoginForm)
/* harmony export */ });
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! test-maker */ "test-maker");
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(test_maker__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../helpers/options/methodOptions */ "./helpers/options/methodOptions.ts");


class LoginForm {
    async login(username, password, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await this.setLogin(username);
        await this.setPassword(password);
        await this.submit();
    }
    async setLogin(username, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.click((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)('#txtUserID', this.actualOptions))
            .fillField((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)('#txtUserID'), username);
    }
    async setPassword(password, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.click((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)('#txtPassword', this.actualOptions))
            .fillField((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)('#txtPassword'), password);
    }
    async submit(options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.click((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)('#sub', this.actualOptions));
    }
    async assertLogInButtonIsVisible(options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)('#sub', this.actualOptions).visible, {
            timeout: this.actualOptions.timeout + 1,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        }).toBeOk();
    }
}
//export const loginForm = new LoginForm();


/***/ }),

/***/ "./src/widgets/menu.ts":
/*!*****************************!*\
  !*** ./src/widgets/menu.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Menu": () => (/* binding */ Menu)
/* harmony export */ });
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! test-maker */ "test-maker");
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(test_maker__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../helpers/options/methodOptions */ "./helpers/options/methodOptions.ts");
// Copyright 2020 Knowledge Expert SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


class Menu {
    async focus(text, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.focus((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(".menu-item-title-wrap", this.actualOptions).withText(text));
    }
    async select(text, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.waitForSelectorToBeVisible((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(".menu-item-title-wrap", this.actualOptions).withText(text));
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.click((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(".menu-item-title-wrap", this.actualOptions).withText(text));
    }
    async selectByExactText(text, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.waitForSelectorToBeVisible((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(".menu-item-title-wrap", this.actualOptions).withExactText(text))
            .click((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(".menu-item-title-wrap", this.actualOptions).withExactText(text));
    }
    async shouldContainTheItemWithExactText(text, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expectSelector((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(".menu-item-title-wrap", this.actualOptions).withExactText(text)).toBeVisible();
    }
    async shouldNotContainTheItemWithExactText(text, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expectSelector((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(".menu-item-title-wrap", this.actualOptions).withExactText(text)).not.toBeVisible();
    }
    async selectByIndex(text, index, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.waitForSelectorToBeVisible((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(".menu-item-title-wrap", this.actualOptions).withText(text).nth(index));
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.click((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(".menu-item-title-wrap", this.actualOptions).withText(text).nth(index));
    }
}


/***/ }),

/***/ "./src/widgets/progressBar.ts":
/*!************************************!*\
  !*** ./src/widgets/progressBar.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ProgressBar": () => (/* binding */ ProgressBar)
/* harmony export */ });
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! test-maker */ "test-maker");
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(test_maker__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../helpers/options/methodOptions */ "./helpers/options/methodOptions.ts");
// Copyright 2020 Knowledge Expert SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


class ProgressBar {
    async assertDone(options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.waitForSelectorToNotExist((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)('[role="progressbar"]', this.actualOptions));
    }
}


/***/ }),

/***/ "./src/widgets/pulse.ts":
/*!******************************!*\
  !*** ./src/widgets/pulse.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Pulse": () => (/* binding */ Pulse)
/* harmony export */ });
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! test-maker */ "test-maker");
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(test_maker__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../helpers/options/methodOptions */ "./helpers/options/methodOptions.ts");
/* harmony import */ var _pega__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../pega */ "./src/pega.ts");
// Copyright 2020 Knowledge Expert SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the L



class Pulse {
    // async togglePulse(options?: { timeout: number, interval?: number, retries?: number }) {
    //     this.actualOptions = methodOptions.setOptions(options);
    //     await I.click(Selector('[data-test-id="201608300355460916284628"][title="Toggle pulse"]', this.actualOptions).filterVisible());
    // }
    //
    // async startConversation(options?: { timeout: number, interval?: number, retries?: number }) {
    //     this.actualOptions = methodOptions.setOptions(options);
    //     await I.click(Selector('#pyMessage', this.actualOptions));
    // }
    //
    async postTheMessage(value, options) {
        await this.set(value, options);
        await this.clickPostButton();
    }
    async addAttachment(filePath) {
        await _pega__WEBPACK_IMPORTED_MODULE_2__.pega.textArea('2015070806333408619136').click();
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.setFilesToUpload('input[type="file"]', filePath);
    }
    async clickPostButton(options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await _pega__WEBPACK_IMPORTED_MODULE_2__.pega.buttonByDataTestId('2015070902382006111577').click(this.actualOptions);
    }
    async set(value, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await _pega__WEBPACK_IMPORTED_MODULE_2__.pega.textArea('2015070806333408619136').click();
        await _pega__WEBPACK_IMPORTED_MODULE_2__.pega.textArea('2015070806333408619136').set(value, this.actualOptions);
    }
    async collapse() {
        await _pega__WEBPACK_IMPORTED_MODULE_2__.pega.textArea('2015070806333408619136').click();
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.click('button[data-test-id="2018011003123805519250"] i');
    }
    async shouldHaveMessageByIndex(text, index, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        let actualIndex;
        index ? actualIndex = index : actualIndex = 0;
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expectSelector((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)('//div[@data-test-id="201805161859330178213"]//p', this.actualOptions).nth(actualIndex)).toHaveInnerText(text);
    }
    async shouldHaveTruncatedDocumentNameByIndex(text, index, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        let actualIndex;
        index ? actualIndex = index : actualIndex = 0;
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expectSelector((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)('//div[@data-test-id="201803171705040043287"]//a', this.actualOptions).nth(actualIndex)).toHaveInnerText(`   ${text}   `);
    }
    async shouldHaveFullDocumentNameByIndex(text, index, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        let actualIndex;
        index ? actualIndex = index : actualIndex = 0;
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)('//div[@data-test-id="201803171705040043287"]//a', this.actualOptions).nth(actualIndex).getAttribute('title'))
            .toContain(text);
    }
    async comment(text, index, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        let actualIndex;
        index ? actualIndex = index : actualIndex = 0;
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.click((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)('[data-test-id="2017100810231405039326"]').nth(actualIndex));
        await _pega__WEBPACK_IMPORTED_MODULE_2__.pega.textArea('20150717050721047637686').waitUntilVisibility();
        await _pega__WEBPACK_IMPORTED_MODULE_2__.pega.textArea('20150717050721047637686').click();
        await _pega__WEBPACK_IMPORTED_MODULE_2__.pega.textArea('20150717050721047637686').set(text);
        await _pega__WEBPACK_IMPORTED_MODULE_2__.pega.buttonByDataTestId('20170310074346004263527').click();
    }
    async commentAndUploadFile(args, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        let actualIndex;
        args.index ? actualIndex = args.index : actualIndex = 0;
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.click((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)('[data-test-id="2017100810231405039326"]').nth(actualIndex));
        if (args.text) {
            await _pega__WEBPACK_IMPORTED_MODULE_2__.pega.textArea('20150717050721047637686').waitUntilVisibility();
            await _pega__WEBPACK_IMPORTED_MODULE_2__.pega.textArea('20150717050721047637686').click();
            await _pega__WEBPACK_IMPORTED_MODULE_2__.pega.textArea('20150717050721047637686').set(args.text);
        }
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.setFilesToUpload('//div[@data-test-id="201712270846450265615"]//input[@type="file"]', args.filePath);
        await _pega__WEBPACK_IMPORTED_MODULE_2__.pega.buttonByDataTestId('20170310074346004263527').click();
    }
    async like(index, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        let actualIndex;
        index ? actualIndex = index : actualIndex = 0;
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.click((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)('[data-test-id="20170519033013013528275"]').nth(actualIndex));
    }
    async open() {
        await _pega__WEBPACK_IMPORTED_MODULE_2__.pega.menu().select('Pulse');
    }
}


/***/ }),

/***/ "./src/widgets/rightPanel.ts":
/*!***********************************!*\
  !*** ./src/widgets/rightPanel.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RightPanel": () => (/* binding */ RightPanel)
/* harmony export */ });
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! test-maker */ "test-maker");
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(test_maker__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _pega__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../pega */ "./src/pega.ts");
// Copyright 2021 Knowledge Expert SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


class RightPanel {
    constructor() {
        this.filesAndDocumentsCard = '//div[@data-test-id="201810250605180888507"]';
        this.fileLink = '//a[@data-test-id="201707140015270956e9d44b20-d360-4229-ad21-b96eeb9488e9857"]';
        this.followersCard = '//div[@data-test-id="201803300744210880502"]';
        this.stakeholdersCard = '//div[@data-test-id="201907260536110116488"]';
        this.tagsCard = '//div[@node_name="CaseTags"]';
        this.gearIcon = '//i[@class="pi pi-gear-solid"]';
        this.documentNameContainer = '//a[@data-test-id="201707140015270956e9d44b20-d360-4229-ad21-b96eeb9488e9857"]';
        this.followerNameContainer = '//a[@data-test-id="201710100436480270133"]';
    }
    async selectContentType(value) {
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.click(`//h3[@class="layout-group-item-title" and text()="${value}"]`);
    }
    async expand() {
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.click((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(`//button[@data-test-id="20190121082016015244271"]`).filterVisible());
    }
    async collapse() {
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.click((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(`//button[@data-test-id="20190121082016015244271"]`).filterVisible());
    }
    async attachDocumentViaRichTextEditor(args) {
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.click(`${this.filesAndDocumentsCard}${this.gearIcon}`);
        await _pega__WEBPACK_IMPORTED_MODULE_1__.pega.textInput('2017112402204702187426').set(args.documentName);
        await _pega__WEBPACK_IMPORTED_MODULE_1__.pega.richTextEditor.set(args.text);
        if (args.availableTo) {
            await _pega__WEBPACK_IMPORTED_MODULE_1__.pega.radioButton('2018100802225805169264').select(args.availableTo);
        }
        await _pega__WEBPACK_IMPORTED_MODULE_1__.pega.buttonByDataTestId('201609131617210408158756').click();
    }
    async assertDocumentNameIsVisibleByIndex(documentName, index) {
        let documentNameElement = `${this.filesAndDocumentsCard}${this.documentNameContainer}`;
        index ? await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expectSelector((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(documentNameElement).nth(index)).toHaveInnerText(documentName)
            : await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expectSelector((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(documentNameElement)).toHaveInnerText(documentName);
    }
    async attachDocumentAsLocalFile(args) {
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.click(`${this.filesAndDocumentsCard}${this.gearIcon}`);
        await this.selectContentType('Local file');
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.setFilesToUpload('//div[@id="modalWrapper"]//input[@type="file"]', args.filePath);
        await _pega__WEBPACK_IMPORTED_MODULE_1__.pega.textInput('2017112402204702187426').set(args.documentName);
        if (args.text) {
            await _pega__WEBPACK_IMPORTED_MODULE_1__.pega.richTextEditor.set(args.text);
        }
        if (args.availableTo) {
            await _pega__WEBPACK_IMPORTED_MODULE_1__.pega.radioButton('2018100802225805169264').select(args.availableTo);
        }
        //await pega.buttonByDataTestId('201609131617210408158756').click();
    }
    async addUrl(args) {
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.click(`${this.filesAndDocumentsCard}${this.gearIcon}`);
        await this.selectContentType('Url');
        await _pega__WEBPACK_IMPORTED_MODULE_1__.pega.textInput('2017091508022700351752').set(args.documentName);
        await _pega__WEBPACK_IMPORTED_MODULE_1__.pega.textInput('2017091508022700352218').set(args.documentName);
        if (args.attachmentCategory) {
            await _pega__WEBPACK_IMPORTED_MODULE_1__.pega.dropdownById('Category').select(args.attachmentCategory);
        }
        await _pega__WEBPACK_IMPORTED_MODULE_1__.pega.buttonByDataTestId('201609131617210408158756').click();
    }
    async addFollowers(value) {
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.click(`${this.followersCard}${this.gearIcon}`);
        await _pega__WEBPACK_IMPORTED_MODULE_1__.pega.multiselectById('83c9c0fc').selectOneValueFromList(value);
        await _pega__WEBPACK_IMPORTED_MODULE_1__.pega.buttonByDataTestId('20170926012248075624504').click();
        await _pega__WEBPACK_IMPORTED_MODULE_1__.pega.buttonByDataTestId('201910080634100105183889').click();
    }
    async assertFollowersListIncludes(...values) {
        let followerNameElement = (0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(`${this.followersCard}${this.followerNameContainer}`);
        for (let i = 0; i < await followerNameElement.count; i++) {
            await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expectSelector(followerNameElement).toHaveInnerText(values[i]);
        }
    }
}


/***/ }),

/***/ "./src/widgets/status.ts":
/*!*******************************!*\
  !*** ./src/widgets/status.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Status": () => (/* binding */ Status)
/* harmony export */ });
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! test-maker */ "test-maker");
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(test_maker__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../helpers/options/methodOptions */ "./helpers/options/methodOptions.ts");
/* harmony import */ var _controls_controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./controls/controlsCommonActions */ "./src/widgets/controls/controlsCommonActions.ts");
// Copyright 2020 Knowledge Expert SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.



class Status {
    constructor() {
        this.status = '.badge_text';
    }
    async shouldBeNew(options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.status, this.actualOptions).filterVisible().innerText, {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        })
            .toEqual('NEW');
    }
    async shouldBeResolvedCompleted(options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.status).filterVisible().innerText, {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        }).toEqual('RESOLVED-COMPLETED');
    }
    async shouldHaveText(value, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_1__.methodOptions.setOptions(options);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(this.status).filterVisible().innerText, {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        }).toEqual(value.toUpperCase());
    }
    async getText() {
        return await _controls_controlsCommonActions__WEBPACK_IMPORTED_MODULE_2__.controlsCommonActions.getText(this.status);
    }
}


/***/ }),

/***/ "./src/widgets/stepRouting.ts":
/*!************************************!*\
  !*** ./src/widgets/stepRouting.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "StepRouting": () => (/* binding */ StepRouting)
/* harmony export */ });
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! test-maker */ "test-maker");
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(test_maker__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _pega__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../pega */ "./src/pega.ts");
/* harmony import */ var _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../helpers/options/methodOptions */ "./helpers/options/methodOptions.ts");
/* harmony import */ var _controls_controlsCommonActions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./controls/controlsCommonActions */ "./src/widgets/controls/controlsCommonActions.ts");
// Copyright 2020 Knowledge Expert SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.




class StepRouting {
    constructor() {
        this.element = `.heading_5_dataLabelRead`;
    }
    async shouldHaveText(text, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_2__.methodOptions.setOptions(options);
        await _pega__WEBPACK_IMPORTED_MODULE_1__.pega.progressBar.assertDone(this.actualOptions);
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)('.heading_5_dataLabelRead', this.actualOptions).innerText, {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        }).toEqual(text);
    }
    async getText() {
        await _controls_controlsCommonActions__WEBPACK_IMPORTED_MODULE_3__.controlsCommonActions.getText(this.element);
    }
}


/***/ }),

/***/ "./src/widgets/toDoList.ts":
/*!*********************************!*\
  !*** ./src/widgets/toDoList.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ToDoList": () => (/* binding */ ToDoList)
/* harmony export */ });
/* harmony import */ var _pega__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../pega */ "./src/pega.ts");
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! test-maker */ "test-maker");
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(test_maker__WEBPACK_IMPORTED_MODULE_1__);
// Copyright 2021 Knowledge Expert SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


class ToDoList {
    constructor(args) {
        this.goButton = _pega__WEBPACK_IMPORTED_MODULE_0__.pega.buttonByDataTestId(`20190208081744082718727`);
        this.goButtonSelector = `//button[@data-test-id="20190208081744082718727"]`;
        if (args) {
            if (args.taskName && args.operatorName && !args.caseName) {
                this.container = `//i[@title="${args.operatorName}"]//ancestor::div[@pyclassname="Assign-Worklist"]//ancestor::span[@data-test-id="20190208081744082517799" and contains(text(), "${args.taskName}")]//ancestor::div[@pyclassname="Assign-Worklist"]`; //toDo check if can be improved
            }
            else if (args.taskName && !args.operatorName && !args.caseName) {
                this.container = `//span[@data-test-id="20190208081744082517799" and contains(text(), "${args.taskName}") and not(contains(@class, "supporting_text"))]//ancestor::div[@pyclassname="Assign-Worklist"]`;
            }
            else if (args.taskName && !args.operatorName && args.caseName) {
                this.container = `//span[@data-test-id="20190208081744082517799" and contains(text(), "${args.taskName}") and not(contains(@class, "supporting_text"))]//ancestor::div[@pyclassname="Assign-Worklist"]//span[@data-test-id="20190208081744082517799" and contains(text(), "${args.caseName}") and contains(@class, "supporting_text")]//ancestor::div[@pyclassname="Assign-Worklist"]`;
            }
            else if (!args.taskName && !args.operatorName && args.caseName) {
                this.container = `//span[@data-test-id="20190208081744082517799" and contains(text(), "${args.caseName}") and contains(@class, "supporting_text")]//ancestor::div[@pyclassname="Assign-Worklist"]`;
            }
            else if (!args.taskName && args.operatorName && args.caseName) {
                this.container = `//i[@title="${args.operatorName}"]//ancestor::div[@pyclassname="Assign-Worklist"]//ancestor::span[@data-test-id="20190208081744082517799" and contains(text(), "${args.caseName}") and contains(@class, "supporting_text")]//ancestor::div[@pyclassname="Assign-Worklist"]`; //toDo check if can be improved
            }
            else if (args.operatorName && !args.taskName && !args.caseName) {
                this.container = `//i[@title="${args.operatorName}"]//ancestor::div[@pyclassname="Assign-Worklist"]`;
            }
        }
        else if (!args) {
            this.container = `//div[@pyclassname="Assign-Worklist"]`;
            console.warn(`The task name or operator was not specified, the very first task will be selected`);
        }
    }
    async openTask() {
        await test_maker__WEBPACK_IMPORTED_MODULE_1__.I.click(`${this.container}${this.goButtonSelector}`);
    }
    async openFirstTask() {
        await this.goButton.click();
    }
    async openTaskByIndex(index) {
        await test_maker__WEBPACK_IMPORTED_MODULE_1__.I.click((0,test_maker__WEBPACK_IMPORTED_MODULE_1__.Selector)(this.goButtonSelector).filterVisible().nth(index));
    }
    async assertAtLeastOneTaskIsVisible() {
        await this.goButton.shouldBeVisible();
    }
    async assertTasksAreNotVisible() {
        await this.goButton.shouldNotBeVisible();
    }
    async tasksDontExist() {
        await this.goButton.shouldNotExist();
    }
    async assertTaskByTextOrOperatorNameIsVisible() {
        await test_maker__WEBPACK_IMPORTED_MODULE_1__.I.expectSelector(this.container).toBeVisible();
    }
    async isTaskExists() {
        return await (0,test_maker__WEBPACK_IMPORTED_MODULE_1__.Selector)(this.container).exists;
    }
    async isTaskVisible() {
        return await (0,test_maker__WEBPACK_IMPORTED_MODULE_1__.Selector)(this.container).exists && await (0,test_maker__WEBPACK_IMPORTED_MODULE_1__.Selector)(this.container).visible;
    }
    async assertTaskByTextOrOperatorNameIsNotVisible() {
        await test_maker__WEBPACK_IMPORTED_MODULE_1__.I.expectSelector(this.container).not.toBeVisible();
    }
    async assertNumberOfVisibleTasks(count) {
        await test_maker__WEBPACK_IMPORTED_MODULE_1__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_1__.Selector)(`${this.container}${this.goButtonSelector}`).filterVisible().count).toEqual(count);
    }
    async getNumberOfVisibleTasks() {
        this.tasksNumber = await (0,test_maker__WEBPACK_IMPORTED_MODULE_1__.Selector)(`${this.container}${this.goButtonSelector}`).filterVisible().count;
        return this.tasksNumber;
    }
    async assertNumberOfVisibleTasksIsMoreThan(count) {
        await test_maker__WEBPACK_IMPORTED_MODULE_1__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_1__.Selector)(`${this.container}${this.goButtonSelector}`).filterVisible().count).toBeGreaterThan(count);
    }
    async viewAll() {
        await _pega__WEBPACK_IMPORTED_MODULE_0__.pega.buttonByDataTestId(`2015110410023706663712`).hoverAndClick();
    }
    async viewAllIfVisible() {
        if (await (0,test_maker__WEBPACK_IMPORTED_MODULE_1__.Selector)(`[data-test-id="2015110410023706663712"]`).exists && await (0,test_maker__WEBPACK_IMPORTED_MODULE_1__.Selector)(`[data-test-id="2015110410023706663712"]`).visible)
            await _pega__WEBPACK_IMPORTED_MODULE_0__.pega.buttonByDataTestId(`2015110410023706663712`).hoverAndClick();
    }
    async viewLess() {
        await _pega__WEBPACK_IMPORTED_MODULE_0__.pega.buttonByDataTestId(`2019031407413508163787`).hoverAndClick();
    }
    async assertTaskHasNameByIndex(taskName, index) {
        await test_maker__WEBPACK_IMPORTED_MODULE_1__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_1__.Selector)(`//div[@pyclassname="Assign-Worklist"]//div[@data-test-id="201808170838240368667"]//span[@data-test-id="20190208081744082517799"]`).filterVisible().nth(index).innerText).toEqual(taskName);
    }
    async assertTaskHasSupportingTextByIndex(supportingText, index) {
        await test_maker__WEBPACK_IMPORTED_MODULE_1__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_1__.Selector)(`//div[@pyclassname="Assign-Worklist"]//div[@data-test-id="201808170838240368923"]//span[@data-test-id="20190208081744082517799"]`).filterVisible().nth(index).innerText).toEqual(supportingText);
    }
    async assertTaskHasDueDateMessageByIndex(dueDateMessage, index) {
        if (dueDateMessage.includes('Due')) {
            dueDateMessage = dueDateMessage.substring(4);
        }
        await test_maker__WEBPACK_IMPORTED_MODULE_1__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_1__.Selector)(`//div[@pyclassname="Assign-Worklist"]//div[@data-test-id="201808170838240368923"]//span[@data-test-id="20190208081953009346428"]`).filterVisible().nth(index).innerText).toContain(dueDateMessage);
    }
    async getTaskNameByIndex(index) {
        this.taskName = await (0,test_maker__WEBPACK_IMPORTED_MODULE_1__.Selector)(`//div[@pyclassname="Assign-Worklist"]//div[@data-test-id="201808170838240368667"]//span[@data-test-id="20190208081744082517799"]`).filterVisible().nth(index).innerText;
        return this.taskName;
    }
    async getTaskSupportingTextByIndex(index) {
        this.supportingText = await (0,test_maker__WEBPACK_IMPORTED_MODULE_1__.Selector)(`//div[@pyclassname="Assign-Worklist"]//div[@data-test-id="201808170838240368923"]//span[@data-test-id="20190208081744082517799"]`).filterVisible().nth(index).innerText;
        return this.supportingText;
    }
    async getTaskDueDateMessageByIndex(index) {
        this.dueDateMessage = await (0,test_maker__WEBPACK_IMPORTED_MODULE_1__.Selector)(`//div[@pyclassname="Assign-Worklist"]//div[@data-test-id="201808170838240368923"]//span[@data-test-id="20190208081953009346428"]`).filterVisible().nth(index).innerText;
        this.dueDateMessage = 'Due ' + this.dueDateMessage;
        return this.dueDateMessage;
    }
    async waitForTheTaskToBeCreatedAndOpen(args) {
        const options = { timeout: 2000 };
        if (!await (0,test_maker__WEBPACK_IMPORTED_MODULE_1__.Selector)(this.container, options).exists) {
            let actualInterval = 500, actualTimeout = 15000;
            if (args === null || args === void 0 ? void 0 : args.interval) {
                actualInterval = args.interval;
            }
            if (args === null || args === void 0 ? void 0 : args.timeout)
                actualTimeout = args.timeout;
            await test_maker__WEBPACK_IMPORTED_MODULE_1__.I.waitForCondition({
                condition: async () => {
                    const options = { timeout: 500 };
                    await _pega__WEBPACK_IMPORTED_MODULE_0__.pega.actionsMenu.selectOption('Refresh');
                    await this.viewAllIfVisible();
                    return await (0,test_maker__WEBPACK_IMPORTED_MODULE_1__.Selector)(this.container, options).exists;
                },
                interval: actualInterval,
                timeout: actualTimeout,
                retryMessage: `Waiting for case to be created`,
            });
        }
        await this.openTask();
    }
}


/***/ }),

/***/ "./src/widgets/topPanel.ts":
/*!*********************************!*\
  !*** ./src/widgets/topPanel.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TopPanel": () => (/* binding */ TopPanel)
/* harmony export */ });
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! test-maker */ "test-maker");
/* harmony import */ var test_maker__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(test_maker__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _pega__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../pega */ "./src/pega.ts");
/* harmony import */ var _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../helpers/options/methodOptions */ "./helpers/options/methodOptions.ts");
// Copyright 2020 Knowledge Expert SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.



class TopPanel {
    async createNewCase(caseName, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_2__.methodOptions.setOptions(options);
        let newCaseElement = `//span[contains(@class, "menu-item-title") and normalize-space(text()) = "${caseName}"]`;
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.click((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)('[title="Create a case"]', this.actualOptions))
            .hover((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)('//span[contains(@class, "menu-item-title") and normalize-space(text()) = "New"]'), this.actualOptions)
            .hover((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(newCaseElement, this.actualOptions))
            .click(newCaseElement, this.actualOptions);
    }
    async assertProfileIsLoaded(value, options) {
        this.actualOptions = _helpers_options_methodOptions__WEBPACK_IMPORTED_MODULE_2__.methodOptions.setOptions(options);
        await _pega__WEBPACK_IMPORTED_MODULE_1__.pega.frame.switchToFormFactoriFrame(); //for PegaExpress
        await test_maker__WEBPACK_IMPORTED_MODULE_0__.I.expect((0,test_maker__WEBPACK_IMPORTED_MODULE_0__.Selector)(`[title="${value}"]`, this.actualOptions).visible, {
            timeout: this.actualOptions.assertionTimeout,
            interval: this.actualOptions.interval,
            retries: this.actualOptions.retries
        }).toBeOk();
    }
}


/***/ }),

/***/ "test-maker":
/*!*****************************!*\
  !*** external "test-maker" ***!
  \*****************************/
/***/ ((module) => {

module.exports = require("test-maker");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.
(() => {
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ActionsMenu": () => (/* reexport safe */ _widgets_actionsButton__WEBPACK_IMPORTED_MODULE_11__.ActionsMenu),
/* harmony export */   "AdapterType": () => (/* reexport safe */ _helpers_busy_app_evaluator_adapter_type__WEBPACK_IMPORTED_MODULE_9__.AdapterType),
/* harmony export */   "Alerts": () => (/* reexport safe */ _widgets_alerts__WEBPACK_IMPORTED_MODULE_12__.Alerts),
/* harmony export */   "AssignmentTitle": () => (/* reexport safe */ _widgets_assignmentTitle__WEBPACK_IMPORTED_MODULE_13__.AssignmentTitle),
/* harmony export */   "AutocompletionByAttribute": () => (/* reexport safe */ _widgets_controls_autocompletionField_autocompletionByAttribute__WEBPACK_IMPORTED_MODULE_39__.AutocompletionByAttribute),
/* harmony export */   "AutocompletionByCss": () => (/* reexport safe */ _widgets_controls_autocompletionField_autocompletionByCss__WEBPACK_IMPORTED_MODULE_42__.AutocompletionByCss),
/* harmony export */   "AutocompletionByLabel": () => (/* reexport safe */ _widgets_controls_autocompletionField_autocompletionByLabel__WEBPACK_IMPORTED_MODULE_40__.AutocompletionByLabel),
/* harmony export */   "AutocompletionByXPath": () => (/* reexport safe */ _widgets_controls_autocompletionField_autocompletionByXPath__WEBPACK_IMPORTED_MODULE_41__.AutocompletionByXPath),
/* harmony export */   "AutocompletionCommon": () => (/* reexport safe */ _widgets_controls_autocompletionField_autocompletionCommon__WEBPACK_IMPORTED_MODULE_38__.AutocompletionCommon),
/* harmony export */   "Button": () => (/* reexport safe */ _widgets_controls_buttons_button__WEBPACK_IMPORTED_MODULE_15__.Button),
/* harmony export */   "Case": () => (/* reexport safe */ _widgets_case__WEBPACK_IMPORTED_MODULE_21__.Case),
/* harmony export */   "CaseWorkerMenu": () => (/* reexport safe */ _widgets_caseWorkerMenu__WEBPACK_IMPORTED_MODULE_24__.CaseWorkerMenu),
/* harmony export */   "CheckBox": () => (/* reexport safe */ _widgets_controls_checkbox__WEBPACK_IMPORTED_MODULE_17__.CheckBox),
/* harmony export */   "CustomControlByAttributes": () => (/* reexport safe */ _widgets_controls_customControl_customControlByAttribute__WEBPACK_IMPORTED_MODULE_32__.CustomControlByAttributes),
/* harmony export */   "CustomControlByCss": () => (/* reexport safe */ _widgets_controls_customControl_CustomControlByCss__WEBPACK_IMPORTED_MODULE_35__.CustomControlByCss),
/* harmony export */   "CustomControlByXPath": () => (/* reexport safe */ _widgets_controls_customControl_CustomConrolByXPath__WEBPACK_IMPORTED_MODULE_34__.CustomControlByXPath),
/* harmony export */   "CustomControlCommon": () => (/* reexport safe */ _widgets_controls_customControl_customControlCommon__WEBPACK_IMPORTED_MODULE_33__.CustomControlCommon),
/* harmony export */   "CustomDate": () => (/* reexport safe */ _helpers_customDate__WEBPACK_IMPORTED_MODULE_0__.CustomDate),
/* harmony export */   "DatePickerByAttribute": () => (/* reexport safe */ _widgets_controls_datePicker_datePickerByAttribute__WEBPACK_IMPORTED_MODULE_50__.DatePickerByAttribute),
/* harmony export */   "DatePickerByCss": () => (/* reexport safe */ _widgets_controls_datePicker_datePickerByCss__WEBPACK_IMPORTED_MODULE_51__.DatePickerByCss),
/* harmony export */   "DatePickerByLabel": () => (/* reexport safe */ _widgets_controls_datePicker_datePickerByLabel__WEBPACK_IMPORTED_MODULE_52__.DatePickerByLabel),
/* harmony export */   "DatePickerByXPath": () => (/* reexport safe */ _widgets_controls_datePicker_datePickerByXPath__WEBPACK_IMPORTED_MODULE_49__.DatePickerByXPath),
/* harmony export */   "DatePickerCommon": () => (/* reexport safe */ _widgets_controls_datePicker_datePickerCommon__WEBPACK_IMPORTED_MODULE_48__.DatePickerCommon),
/* harmony export */   "DateRange": () => (/* reexport safe */ _widgets_controls_dateRange__WEBPACK_IMPORTED_MODULE_70__.DateRange),
/* harmony export */   "DropdownByAttribute": () => (/* reexport safe */ _widgets_controls_dropdown_dropdownByAttribute__WEBPACK_IMPORTED_MODULE_54__.DropdownByAttribute),
/* harmony export */   "DropdownByCss": () => (/* reexport safe */ _widgets_controls_dropdown_dropdownByCss__WEBPACK_IMPORTED_MODULE_55__.DropdownByCss),
/* harmony export */   "DropdownByLabel": () => (/* reexport safe */ _widgets_controls_dropdown_dropdownByLabel__WEBPACK_IMPORTED_MODULE_56__.DropdownByLabel),
/* harmony export */   "DropdownByXPath": () => (/* reexport safe */ _widgets_controls_dropdown_dropdownByXPath__WEBPACK_IMPORTED_MODULE_57__.DropdownByXPath),
/* harmony export */   "DropdownCommon": () => (/* reexport safe */ _widgets_controls_dropdown_dropdownCommon__WEBPACK_IMPORTED_MODULE_53__.DropdownCommon),
/* harmony export */   "EmailAttachment": () => (/* reexport safe */ _widgets_emailAttachment__WEBPACK_IMPORTED_MODULE_25__.EmailAttachment),
/* harmony export */   "FormButtons": () => (/* reexport safe */ _widgets_controls_buttons_formButtons__WEBPACK_IMPORTED_MODULE_16__.FormButtons),
/* harmony export */   "Frame": () => (/* reexport safe */ _widgets_frame__WEBPACK_IMPORTED_MODULE_14__.Frame),
/* harmony export */   "ImageElement": () => (/* reexport safe */ _widgets_controls_image__WEBPACK_IMPORTED_MODULE_36__.ImageElement),
/* harmony export */   "Label": () => (/* reexport safe */ _widgets_controls_label__WEBPACK_IMPORTED_MODULE_63__.Label),
/* harmony export */   "LeftPanelMenu": () => (/* reexport safe */ _widgets_leftPanelMenu__WEBPACK_IMPORTED_MODULE_26__.LeftPanelMenu),
/* harmony export */   "LoginForm": () => (/* reexport safe */ _widgets_loginForm__WEBPACK_IMPORTED_MODULE_27__.LoginForm),
/* harmony export */   "Logo": () => (/* reexport safe */ _widgets_controls_logo__WEBPACK_IMPORTED_MODULE_37__.Logo),
/* harmony export */   "Menu": () => (/* reexport safe */ _widgets_menu__WEBPACK_IMPORTED_MODULE_22__.Menu),
/* harmony export */   "MultiSelect": () => (/* reexport safe */ _widgets_controls_multiSelect__WEBPACK_IMPORTED_MODULE_18__.MultiSelect),
/* harmony export */   "OperatorsManager": () => (/* reexport safe */ _helpers_operator_manager__WEBPACK_IMPORTED_MODULE_4__.OperatorsManager),
/* harmony export */   "ProgressBar": () => (/* reexport safe */ _widgets_progressBar__WEBPACK_IMPORTED_MODULE_23__.ProgressBar),
/* harmony export */   "Pulse": () => (/* reexport safe */ _widgets_pulse__WEBPACK_IMPORTED_MODULE_28__.Pulse),
/* harmony export */   "RadiobuttonByAttribute": () => (/* reexport safe */ _widgets_controls_radiobuttons_radiobuttonByAttribute__WEBPACK_IMPORTED_MODULE_67__.RadiobuttonByAttribute),
/* harmony export */   "RadiobuttonById": () => (/* reexport safe */ _widgets_controls_radiobuttons_radiobuttonById__WEBPACK_IMPORTED_MODULE_66__.RadiobuttonById),
/* harmony export */   "RadiobuttonCommon": () => (/* reexport safe */ _widgets_controls_radiobuttons_radiobuttonCommon__WEBPACK_IMPORTED_MODULE_65__.RadiobuttonCommon),
/* harmony export */   "ReadonlyTextInput": () => (/* reexport safe */ _widgets_controls_readonlyTextInput__WEBPACK_IMPORTED_MODULE_19__.ReadonlyTextInput),
/* harmony export */   "RichTextEditor": () => (/* reexport safe */ _widgets_controls_richTextEditor__WEBPACK_IMPORTED_MODULE_64__.RichTextEditor),
/* harmony export */   "RightPanel": () => (/* reexport safe */ _widgets_rightPanel__WEBPACK_IMPORTED_MODULE_69__.RightPanel),
/* harmony export */   "Status": () => (/* reexport safe */ _widgets_status__WEBPACK_IMPORTED_MODULE_31__.Status),
/* harmony export */   "StepRouting": () => (/* reexport safe */ _widgets_stepRouting__WEBPACK_IMPORTED_MODULE_29__.StepRouting),
/* harmony export */   "Table": () => (/* reexport safe */ _widgets_controls_table_table__WEBPACK_IMPORTED_MODULE_20__.Table),
/* harmony export */   "TextAreaByAttribute": () => (/* reexport safe */ _widgets_controls_textarea_textAreaByAttribute__WEBPACK_IMPORTED_MODULE_59__.TextAreaByAttribute),
/* harmony export */   "TextAreaByCss": () => (/* reexport safe */ _widgets_controls_textarea_textAreaByCss__WEBPACK_IMPORTED_MODULE_60__.TextAreaByCss),
/* harmony export */   "TextAreaByLabel": () => (/* reexport safe */ _widgets_controls_textarea_textAreaByLabel__WEBPACK_IMPORTED_MODULE_61__.TextAreaByLabel),
/* harmony export */   "TextAreaByXPath": () => (/* reexport safe */ _widgets_controls_textarea_textAreaByXPath__WEBPACK_IMPORTED_MODULE_62__.TextAreaByXPath),
/* harmony export */   "TextAreaCommon": () => (/* reexport safe */ _widgets_controls_textarea_textAreaCommon__WEBPACK_IMPORTED_MODULE_58__.TextAreaCommon),
/* harmony export */   "TextInputByAttribute": () => (/* reexport safe */ _widgets_controls_textInput_textInputByAttribute__WEBPACK_IMPORTED_MODULE_44__.TextInputByAttribute),
/* harmony export */   "TextInputByCss": () => (/* reexport safe */ _widgets_controls_textInput_textInputByCss__WEBPACK_IMPORTED_MODULE_47__.TextInputByCss),
/* harmony export */   "TextInputByLabel": () => (/* reexport safe */ _widgets_controls_textInput_textInputByLabel__WEBPACK_IMPORTED_MODULE_45__.TextInputByLabel),
/* harmony export */   "TextInputByXPath": () => (/* reexport safe */ _widgets_controls_textInput_textInputByXPath__WEBPACK_IMPORTED_MODULE_46__.TextInputByXPath),
/* harmony export */   "TextInputCommon": () => (/* reexport safe */ _widgets_controls_textInput_textInputCommon__WEBPACK_IMPORTED_MODULE_43__.TextInputCommon),
/* harmony export */   "ToDoList": () => (/* reexport safe */ _widgets_toDoList__WEBPACK_IMPORTED_MODULE_68__.ToDoList),
/* harmony export */   "TopPanel": () => (/* reexport safe */ _widgets_topPanel__WEBPACK_IMPORTED_MODULE_30__.TopPanel),
/* harmony export */   "apiVariables": () => (/* reexport safe */ _api_apiVariables__WEBPACK_IMPORTED_MODULE_6__.apiVariables),
/* harmony export */   "booleanValue": () => (/* reexport safe */ _helpers_value_describedValue__WEBPACK_IMPORTED_MODULE_1__.booleanValue),
/* harmony export */   "bypassLogging": () => (/* reexport safe */ _helpers_busy_app_evaluator_busy_app_helper__WEBPACK_IMPORTED_MODULE_10__.bypassLogging),
/* harmony export */   "dateFrom": () => (/* reexport safe */ _helpers_customDate__WEBPACK_IMPORTED_MODULE_0__.dateFrom),
/* harmony export */   "defaultOptions": () => (/* reexport safe */ _helpers_options_defaultOptions__WEBPACK_IMPORTED_MODULE_7__.defaultOptions),
/* harmony export */   "forCurrentDate": () => (/* reexport safe */ _helpers_customDate__WEBPACK_IMPORTED_MODULE_0__.forCurrentDate),
/* harmony export */   "forDate": () => (/* reexport safe */ _helpers_customDate__WEBPACK_IMPORTED_MODULE_0__.forDate),
/* harmony export */   "isAppBusyEvaluator": () => (/* reexport safe */ _helpers_busy_app_evaluator_busy_app_evaluator__WEBPACK_IMPORTED_MODULE_8__.isAppBusyEvaluator),
/* harmony export */   "keyValuePair": () => (/* reexport safe */ _helpers_value_keyValuePair__WEBPACK_IMPORTED_MODULE_2__.keyValuePair),
/* harmony export */   "numberValue": () => (/* reexport safe */ _helpers_value_describedValue__WEBPACK_IMPORTED_MODULE_1__.numberValue),
/* harmony export */   "pega": () => (/* reexport safe */ _pega__WEBPACK_IMPORTED_MODULE_3__.pega),
/* harmony export */   "pegaApi": () => (/* reexport safe */ _api_apiCalls__WEBPACK_IMPORTED_MODULE_5__.pegaApi),
/* harmony export */   "pegaVersion": () => (/* reexport safe */ _helpers_pegaVersion__WEBPACK_IMPORTED_MODULE_71__.pegaVersion),
/* harmony export */   "today": () => (/* reexport safe */ _helpers_customDate__WEBPACK_IMPORTED_MODULE_0__.today)
/* harmony export */ });
/* harmony import */ var _helpers_customDate__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/customDate */ "./helpers/customDate.ts");
/* harmony import */ var _helpers_value_describedValue__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/value/describedValue */ "./helpers/value/describedValue.ts");
/* harmony import */ var _helpers_value_keyValuePair__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/value/keyValuePair */ "./helpers/value/keyValuePair.ts");
/* harmony import */ var _pega__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pega */ "./src/pega.ts");
/* harmony import */ var _helpers_operator_manager__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helpers/operator-manager */ "./helpers/operator-manager.ts");
/* harmony import */ var _api_apiCalls__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./api/apiCalls */ "./src/api/apiCalls.ts");
/* harmony import */ var _api_apiVariables__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./api/apiVariables */ "./src/api/apiVariables.ts");
/* harmony import */ var _helpers_options_defaultOptions__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../helpers/options/defaultOptions */ "./helpers/options/defaultOptions.ts");
/* harmony import */ var _helpers_busy_app_evaluator_busy_app_evaluator__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../helpers/busy-app-evaluator/busy-app-evaluator */ "./helpers/busy-app-evaluator/busy-app-evaluator.ts");
/* harmony import */ var _helpers_busy_app_evaluator_adapter_type__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../helpers/busy-app-evaluator/adapter-type */ "./helpers/busy-app-evaluator/adapter-type.ts");
/* harmony import */ var _helpers_busy_app_evaluator_busy_app_helper__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../helpers/busy-app-evaluator/busy-app-helper */ "./helpers/busy-app-evaluator/busy-app-helper.ts");
/* harmony import */ var _widgets_actionsButton__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./widgets/actionsButton */ "./src/widgets/actionsButton.ts");
/* harmony import */ var _widgets_alerts__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./widgets/alerts */ "./src/widgets/alerts.ts");
/* harmony import */ var _widgets_assignmentTitle__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./widgets/assignmentTitle */ "./src/widgets/assignmentTitle.ts");
/* harmony import */ var _widgets_frame__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./widgets/frame */ "./src/widgets/frame.ts");
/* harmony import */ var _widgets_controls_buttons_button__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./widgets/controls/buttons/button */ "./src/widgets/controls/buttons/button.ts");
/* harmony import */ var _widgets_controls_buttons_formButtons__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./widgets/controls/buttons/formButtons */ "./src/widgets/controls/buttons/formButtons.ts");
/* harmony import */ var _widgets_controls_checkbox__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./widgets/controls/checkbox */ "./src/widgets/controls/checkbox.ts");
/* harmony import */ var _widgets_controls_multiSelect__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./widgets/controls/multiSelect */ "./src/widgets/controls/multiSelect.ts");
/* harmony import */ var _widgets_controls_readonlyTextInput__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./widgets/controls/readonlyTextInput */ "./src/widgets/controls/readonlyTextInput.ts");
/* harmony import */ var _widgets_controls_table_table__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./widgets/controls/table/table */ "./src/widgets/controls/table/table.ts");
/* harmony import */ var _widgets_case__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./widgets/case */ "./src/widgets/case.ts");
/* harmony import */ var _widgets_menu__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./widgets/menu */ "./src/widgets/menu.ts");
/* harmony import */ var _widgets_progressBar__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./widgets/progressBar */ "./src/widgets/progressBar.ts");
/* harmony import */ var _widgets_caseWorkerMenu__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./widgets/caseWorkerMenu */ "./src/widgets/caseWorkerMenu.ts");
/* harmony import */ var _widgets_emailAttachment__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./widgets/emailAttachment */ "./src/widgets/emailAttachment.ts");
/* harmony import */ var _widgets_leftPanelMenu__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./widgets/leftPanelMenu */ "./src/widgets/leftPanelMenu.ts");
/* harmony import */ var _widgets_loginForm__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./widgets/loginForm */ "./src/widgets/loginForm.ts");
/* harmony import */ var _widgets_pulse__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./widgets/pulse */ "./src/widgets/pulse.ts");
/* harmony import */ var _widgets_stepRouting__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./widgets/stepRouting */ "./src/widgets/stepRouting.ts");
/* harmony import */ var _widgets_topPanel__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./widgets/topPanel */ "./src/widgets/topPanel.ts");
/* harmony import */ var _widgets_status__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./widgets/status */ "./src/widgets/status.ts");
/* harmony import */ var _widgets_controls_customControl_customControlByAttribute__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./widgets/controls/customControl/customControlByAttribute */ "./src/widgets/controls/customControl/customControlByAttribute.ts");
/* harmony import */ var _widgets_controls_customControl_customControlCommon__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./widgets/controls/customControl/customControlCommon */ "./src/widgets/controls/customControl/customControlCommon.ts");
/* harmony import */ var _widgets_controls_customControl_CustomConrolByXPath__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./widgets/controls/customControl/CustomConrolByXPath */ "./src/widgets/controls/customControl/CustomConrolByXPath.ts");
/* harmony import */ var _widgets_controls_customControl_CustomControlByCss__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./widgets/controls/customControl/CustomControlByCss */ "./src/widgets/controls/customControl/CustomControlByCss.ts");
/* harmony import */ var _widgets_controls_image__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./widgets/controls/image */ "./src/widgets/controls/image.ts");
/* harmony import */ var _widgets_controls_logo__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./widgets/controls/logo */ "./src/widgets/controls/logo.ts");
/* harmony import */ var _widgets_controls_autocompletionField_autocompletionCommon__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./widgets/controls/autocompletionField/autocompletionCommon */ "./src/widgets/controls/autocompletionField/autocompletionCommon.ts");
/* harmony import */ var _widgets_controls_autocompletionField_autocompletionByAttribute__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./widgets/controls/autocompletionField/autocompletionByAttribute */ "./src/widgets/controls/autocompletionField/autocompletionByAttribute.ts");
/* harmony import */ var _widgets_controls_autocompletionField_autocompletionByLabel__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./widgets/controls/autocompletionField/autocompletionByLabel */ "./src/widgets/controls/autocompletionField/autocompletionByLabel.ts");
/* harmony import */ var _widgets_controls_autocompletionField_autocompletionByXPath__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./widgets/controls/autocompletionField/autocompletionByXPath */ "./src/widgets/controls/autocompletionField/autocompletionByXPath.ts");
/* harmony import */ var _widgets_controls_autocompletionField_autocompletionByCss__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./widgets/controls/autocompletionField/autocompletionByCss */ "./src/widgets/controls/autocompletionField/autocompletionByCss.ts");
/* harmony import */ var _widgets_controls_textInput_textInputCommon__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./widgets/controls/textInput/textInputCommon */ "./src/widgets/controls/textInput/textInputCommon.ts");
/* harmony import */ var _widgets_controls_textInput_textInputByAttribute__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./widgets/controls/textInput/textInputByAttribute */ "./src/widgets/controls/textInput/textInputByAttribute.ts");
/* harmony import */ var _widgets_controls_textInput_textInputByLabel__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./widgets/controls/textInput/textInputByLabel */ "./src/widgets/controls/textInput/textInputByLabel.ts");
/* harmony import */ var _widgets_controls_textInput_textInputByXPath__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ./widgets/controls/textInput/textInputByXPath */ "./src/widgets/controls/textInput/textInputByXPath.ts");
/* harmony import */ var _widgets_controls_textInput_textInputByCss__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ./widgets/controls/textInput/textInputByCss */ "./src/widgets/controls/textInput/textInputByCss.ts");
/* harmony import */ var _widgets_controls_datePicker_datePickerCommon__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ./widgets/controls/datePicker/datePickerCommon */ "./src/widgets/controls/datePicker/datePickerCommon.ts");
/* harmony import */ var _widgets_controls_datePicker_datePickerByXPath__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ./widgets/controls/datePicker/datePickerByXPath */ "./src/widgets/controls/datePicker/datePickerByXPath.ts");
/* harmony import */ var _widgets_controls_datePicker_datePickerByAttribute__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ./widgets/controls/datePicker/datePickerByAttribute */ "./src/widgets/controls/datePicker/datePickerByAttribute.ts");
/* harmony import */ var _widgets_controls_datePicker_datePickerByCss__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ./widgets/controls/datePicker/datePickerByCss */ "./src/widgets/controls/datePicker/datePickerByCss.ts");
/* harmony import */ var _widgets_controls_datePicker_datePickerByLabel__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ./widgets/controls/datePicker/datePickerByLabel */ "./src/widgets/controls/datePicker/datePickerByLabel.ts");
/* harmony import */ var _widgets_controls_dropdown_dropdownCommon__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! ./widgets/controls/dropdown/dropdownCommon */ "./src/widgets/controls/dropdown/dropdownCommon.ts");
/* harmony import */ var _widgets_controls_dropdown_dropdownByAttribute__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! ./widgets/controls/dropdown/dropdownByAttribute */ "./src/widgets/controls/dropdown/dropdownByAttribute.ts");
/* harmony import */ var _widgets_controls_dropdown_dropdownByCss__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! ./widgets/controls/dropdown/dropdownByCss */ "./src/widgets/controls/dropdown/dropdownByCss.ts");
/* harmony import */ var _widgets_controls_dropdown_dropdownByLabel__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! ./widgets/controls/dropdown/dropdownByLabel */ "./src/widgets/controls/dropdown/dropdownByLabel.ts");
/* harmony import */ var _widgets_controls_dropdown_dropdownByXPath__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! ./widgets/controls/dropdown/dropdownByXPath */ "./src/widgets/controls/dropdown/dropdownByXPath.ts");
/* harmony import */ var _widgets_controls_textarea_textAreaCommon__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! ./widgets/controls/textarea/textAreaCommon */ "./src/widgets/controls/textarea/textAreaCommon.ts");
/* harmony import */ var _widgets_controls_textarea_textAreaByAttribute__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(/*! ./widgets/controls/textarea/textAreaByAttribute */ "./src/widgets/controls/textarea/textAreaByAttribute.ts");
/* harmony import */ var _widgets_controls_textarea_textAreaByCss__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(/*! ./widgets/controls/textarea/textAreaByCss */ "./src/widgets/controls/textarea/textAreaByCss.ts");
/* harmony import */ var _widgets_controls_textarea_textAreaByLabel__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(/*! ./widgets/controls/textarea/textAreaByLabel */ "./src/widgets/controls/textarea/textAreaByLabel.ts");
/* harmony import */ var _widgets_controls_textarea_textAreaByXPath__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(/*! ./widgets/controls/textarea/textAreaByXPath */ "./src/widgets/controls/textarea/textAreaByXPath.ts");
/* harmony import */ var _widgets_controls_label__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(/*! ./widgets/controls/label */ "./src/widgets/controls/label.ts");
/* harmony import */ var _widgets_controls_richTextEditor__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(/*! ./widgets/controls/richTextEditor */ "./src/widgets/controls/richTextEditor.ts");
/* harmony import */ var _widgets_controls_radiobuttons_radiobuttonCommon__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(/*! ./widgets/controls/radiobuttons/radiobuttonCommon */ "./src/widgets/controls/radiobuttons/radiobuttonCommon.ts");
/* harmony import */ var _widgets_controls_radiobuttons_radiobuttonById__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(/*! ./widgets/controls/radiobuttons/radiobuttonById */ "./src/widgets/controls/radiobuttons/radiobuttonById.ts");
/* harmony import */ var _widgets_controls_radiobuttons_radiobuttonByAttribute__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(/*! ./widgets/controls/radiobuttons/radiobuttonByAttribute */ "./src/widgets/controls/radiobuttons/radiobuttonByAttribute.ts");
/* harmony import */ var _widgets_toDoList__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(/*! ./widgets/toDoList */ "./src/widgets/toDoList.ts");
/* harmony import */ var _widgets_rightPanel__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(/*! ./widgets/rightPanel */ "./src/widgets/rightPanel.ts");
/* harmony import */ var _widgets_controls_dateRange__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(/*! ./widgets/controls/dateRange */ "./src/widgets/controls/dateRange.ts");
/* harmony import */ var _helpers_pegaVersion__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(/*! ../helpers/pegaVersion */ "./helpers/pegaVersion.ts");









































































})();

/******/ 	return __webpack_exports__;
/******/ })()
;
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,