// Copyright 2020 Knowledge Expert SA
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import {CustomControlCommon} from './customControlCommon';
import {CustomControlByXPath} from './CustomConrolByXPath';

export class CustomControlByAttributes extends CustomControlCommon {

    private readonly attributeName: string;
    private readonly attributeValue: string;
    private readonly elementType: string;

    constructor(args: { attributeName: string, attributeValue: string, elementType?: string, container?: string }) {
        let actualContainer: string, actualElementType: string;
        args.container ? actualContainer = args.container : actualContainer = "";
        args.elementType ? actualElementType = args.elementType : actualElementType = "*";
        super(`${actualContainer}//${actualElementType}[@${args.attributeName}="${args.attributeValue}"]`);
    }
}

export function customControlByAttribute(args: { attributeName: string, attributeValue: string, elementType?: string, container?: string }) {
    return new CustomControlByAttributes({
        attributeName: args.attributeName,
        attributeValue: args.attributeValue,
        elementType: args.elementType,
        container: args.container
    });
}